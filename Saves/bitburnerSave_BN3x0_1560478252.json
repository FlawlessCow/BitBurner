{"ctor":"BitburnerSaveObject","data":{"PlayerSave":"{\"ctor\":\"PlayerObject\",\"data\":{\"hacking_skill\":500,\"hp\":10,\"max_hp\":10,\"strength\":1,\"defense\":1,\"dexterity\":1,\"agility\":1,\"charisma\":2,\"intelligence\":0,\"hacking_chance_mult\":1.4266830824077439,\"hacking_speed_mult\":1.4417733131822394,\"hacking_money_mult\":1.3587457927692799,\"hacking_grow_mult\":1.3587457927692799,\"hacking_exp\":103573129.68700515,\"strength_exp\":0,\"defense_exp\":0,\"dexterity_exp\":0,\"agility_exp\":0,\"charisma_exp\":0,\"intelligence_exp\":0,\"hacking_mult\":1.6028784430851004,\"strength_mult\":1.7038672241326769,\"defense_mult\":1.7038672241326769,\"dexterity_mult\":1.5693513906485188,\"agility_mult\":1.4266830824077443,\"charisma_mult\":2.0218137396406886,\"hacking_exp_mult\":1.4946203720462081,\"strength_exp_mult\":1.4946203720462081,\"defense_exp_mult\":1.4946203720462081,\"dexterity_exp_mult\":1.4946203720462081,\"agility_exp_mult\":1.4946203720462081,\"charisma_exp_mult\":1.4946203720462081,\"company_rep_mult\":1.3587457927692799,\"faction_rep_mult\":1.3587457927692799,\"money\":\"2887942482.3398391224\",\"homeComputer\":\"60.8.2.2\",\"city\":\"Chongqing\",\"location\":\"World Stock Exchange\",\"jobs\":{},\"companyName\":\"\",\"currentServer\":\"60.8.2.2\",\"purchasedServers\":[\"14.0.1.5\",\"9.2.0.7\",\"7.3.3.4\",\"15.8.0.9\",\"67.8.3.7\",\"90.3.4.2\",\"68.7.9.4\",\"47.3.0.9\",\"48.7.6.3\",\"71.8.6.7\",\"40.5.1.2\",\"80.8.9.4\",\"7.0.5.5\",\"36.7.0.6\",\"94.6.3.4\",\"64.2.6.7\",\"55.1.3.2\",\"16.0.1.6\",\"26.5.9.3\",\"42.8.8.6\",\"60.8.7.2\",\"68.4.0.6\",\"36.5.9.2\",\"40.5.3.9\",\"61.9.2.5\"],\"hacknetNodes\":[{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":8381.0707446826,\"onlineTimeSeconds\":91543.00000003373,\"ram\":64,\"totalMoneyGenerated\":764129579.2392395,\"name\":\"hacknet-node-0\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":8381.0707446826,\"onlineTimeSeconds\":91509.0000000336,\"ram\":64,\"totalMoneyGenerated\":764004764.0939198,\"name\":\"hacknet-node-1\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":8381.0707446826,\"onlineTimeSeconds\":91491.00000003354,\"ram\":64,\"totalMoneyGenerated\":763832192.9878123,\"name\":\"hacknet-node-2\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":8381.0707446826,\"onlineTimeSeconds\":91473.00000003348,\"ram\":64,\"totalMoneyGenerated\":763743030.6841648,\"name\":\"hacknet-node-3\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":8381.0707446826,\"onlineTimeSeconds\":91455.00000003341,\"ram\":64,\"totalMoneyGenerated\":763573674.7175285,\"name\":\"hacknet-node-4\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":8381.0707446826,\"onlineTimeSeconds\":91437.20000003335,\"ram\":64,\"totalMoneyGenerated\":763499656.8797367,\"name\":\"hacknet-node-5\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":8381.0707446826,\"onlineTimeSeconds\":91418.40000003327,\"ram\":64,\"totalMoneyGenerated\":763469065.6292118,\"name\":\"hacknet-node-6\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":8381.0707446826,\"onlineTimeSeconds\":91402.00000003322,\"ram\":64,\"totalMoneyGenerated\":763434325.163043,\"name\":\"hacknet-node-7\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":8381.0707446826,\"onlineTimeSeconds\":91382.60000003314,\"ram\":64,\"totalMoneyGenerated\":763406575.5829052,\"name\":\"hacknet-node-8\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":8381.0707446826,\"onlineTimeSeconds\":91363.80000003308,\"ram\":64,\"totalMoneyGenerated\":763382282.3294822,\"name\":\"hacknet-node-9\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":8381.0707446826,\"onlineTimeSeconds\":91347.20000003302,\"ram\":64,\"totalMoneyGenerated\":763345597.9057392,\"name\":\"hacknet-node-10\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":8381.0707446826,\"onlineTimeSeconds\":91327.00000003295,\"ram\":64,\"totalMoneyGenerated\":763317133.8413863,\"name\":\"hacknet-node-11\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":8381.0707446826,\"onlineTimeSeconds\":91313.0000000329,\"ram\":64,\"totalMoneyGenerated\":763280567.4926394,\"name\":\"hacknet-node-12\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":8381.0707446826,\"onlineTimeSeconds\":91310.00000003289,\"ram\":64,\"totalMoneyGenerated\":763253410.6433413,\"name\":\"hacknet-node-13\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":8381.0707446826,\"onlineTimeSeconds\":91306.00000003287,\"ram\":64,\"totalMoneyGenerated\":763213507.0150241,\"name\":\"hacknet-node-14\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":8381.0707446826,\"onlineTimeSeconds\":91262.4000000327,\"ram\":64,\"totalMoneyGenerated\":762971413.8000842,\"name\":\"hacknet-node-15\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":8381.0707446826,\"onlineTimeSeconds\":91210.40000003252,\"ram\":64,\"totalMoneyGenerated\":762640561.0549722,\"name\":\"hacknet-node-16\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":8381.0707446826,\"onlineTimeSeconds\":91037.40000003189,\"ram\":64,\"totalMoneyGenerated\":761543838.0832357,\"name\":\"hacknet-node-17\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":8381.0707446826,\"onlineTimeSeconds\":90865.20000003125,\"ram\":64,\"totalMoneyGenerated\":760355162.7924718,\"name\":\"hacknet-node-18\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":8381.0707446826,\"onlineTimeSeconds\":90332.20000002932,\"ram\":64,\"totalMoneyGenerated\":756373355.991528,\"name\":\"hacknet-node-19\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":8381.0707446826,\"onlineTimeSeconds\":88549.20000002284,\"ram\":64,\"totalMoneyGenerated\":742121145.6408764,\"name\":\"hacknet-node-20\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":8381.0707446826,\"onlineTimeSeconds\":88328.20000002203,\"ram\":64,\"totalMoneyGenerated\":740284892.9505748,\"name\":\"hacknet-node-21\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":8381.0707446826,\"onlineTimeSeconds\":87997.00000002082,\"ram\":64,\"totalMoneyGenerated\":737509082.3199323,\"name\":\"hacknet-node-22\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":8381.0707446826,\"onlineTimeSeconds\":87406.00000001868,\"ram\":64,\"totalMoneyGenerated\":732555869.5098187,\"name\":\"hacknet-node-23\"}}],\"hashManager\":{\"ctor\":\"HashManager\",\"data\":{\"capacity\":0,\"hashes\":0,\"upgrades\":{\"Sell for Money\":0,\"Sell for Corporation Funds\":0,\"Reduce Minimum Security\":0,\"Increase Maximum Money\":0,\"Improve Studying\":0,\"Improve Gym Training\":0,\"Exchange for Corporation Research\":0,\"Exchange for Bladeburner Rank\":0,\"Exchange for Bladeburner SP\":0,\"Generate Coding Contract\":0}}},\"factions\":[\"NiteSec\",\"Tian Di Hui\",\"Chongqing\",\"Netburners\"],\"factionInvitations\":[],\"queuedAugmentations\":[],\"augmentations\":[{\"level\":1,\"name\":\"CashRoot Starter Kit\"},{\"level\":1,\"name\":\"Speech Processor Implant\"},{\"level\":1,\"name\":\"Combat Rib I\"},{\"level\":1,\"name\":\"Augmented Targeting I\"},{\"level\":1,\"name\":\"Combat Rib II\"},{\"level\":1,\"name\":\"Wired Reflexes\"},{\"level\":1,\"name\":\"Hacknet Node Core Direct-Neural Interface\"},{\"level\":1,\"name\":\"Hacknet Node Kernel Direct-Neural Interface\"},{\"level\":1,\"name\":\"Hacknet Node CPU Architecture Neural-Upload\"},{\"level\":1,\"name\":\"Hacknet Node Cache Architecture Neural-Upload\"},{\"level\":1,\"name\":\"Hacknet Node NIC Architecture Neural-Upload\"},{\"level\":6,\"name\":\"NeuroFlux Governor\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen I\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen II\"},{\"level\":1,\"name\":\"BitWire\"},{\"level\":1,\"name\":\"Synaptic Enhancement Implant\"},{\"level\":1,\"name\":\"Neurotrainer I\"}],\"sourceFiles\":[{\"lvl\":3,\"n\":1},{\"lvl\":1,\"n\":2}],\"numPeopleKilled\":0,\"karma\":0,\"crime_money_mult\":1.684844783033907,\"crime_success_mult\":1.684844783033907,\"isWorking\":false,\"workType\":\"Working for Faction\",\"currentWorkFactionName\":\"\",\"currentWorkFactionDescription\":\"\",\"workHackExpGainRate\":0,\"workStrExpGainRate\":0,\"workDefExpGainRate\":0,\"workDexExpGainRate\":0,\"workAgiExpGainRate\":0,\"workChaExpGainRate\":0,\"workRepGainRate\":0,\"workMoneyGainRate\":0,\"workMoneyLossRate\":0,\"workHackExpGained\":0,\"workStrExpGained\":0,\"workDefExpGained\":0,\"workDexExpGained\":0,\"workAgiExpGained\":0,\"workChaExpGained\":0,\"workRepGained\":0,\"workMoneyGained\":0,\"createProgramName\":\"\",\"createProgramReqLvl\":50,\"className\":\"\",\"crimeType\":\"\",\"timeWorked\":0,\"timeWorkedCreateProgram\":0,\"timeNeededToCompleteWork\":72000000,\"work_money_mult\":1.3587457927692799,\"hacknet_node_money_mult\":3.426884271782196,\"hacknet_node_purchase_cost_mult\":0.5185672662900708,\"hacknet_node_ram_cost_mult\":0.6778657075687199,\"hacknet_node_core_cost_mult\":0.6778657075687199,\"hacknet_node_level_cost_mult\":0.5761858514334119,\"hasWseAccount\":true,\"hasTixApiAccess\":false,\"has4SData\":true,\"has4SDataTixApi\":false,\"gang\":0,\"corporation\":{\"ctor\":\"Corporation\",\"data\":{\"name\":\"Fluffy Bunny Inc.\",\"divisions\":[{\"ctor\":\"Industry\",\"data\":{\"offices\":{\"Aevum\":{\"ctor\":\"OfficeSpace\",\"data\":{\"loc\":\"Aevum\",\"cost\":1,\"size\":12,\"comf\":1,\"beau\":1,\"tier\":\"Basic\",\"minEne\":0,\"maxEne\":100,\"minHap\":0,\"maxHap\":100,\"maxMor\":100,\"employees\":[{\"ctor\":\"Employee\",\"data\":{\"name\":\"QxhMBuJ\",\"mor\":100,\"hap\":87.8626844455892,\"ene\":87.85781283384516,\"int\":93,\"cha\":96,\"exp\":131.33999999998642,\"cre\":70,\"eff\":80,\"sal\":1233,\"pro\":0,\"cyclesUntilRaise\":220,\"loc\":\"\",\"pos\":\"Management\",\"salary\":2400}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"whdz53h\",\"mor\":100,\"hap\":88.0644387986846,\"ene\":88.06015096329374,\"int\":67.32,\"cha\":89.1,\"exp\":152.36699999988681,\"cre\":74.25,\"eff\":49.5,\"sal\":1119.69,\"pro\":0,\"cyclesUntilRaise\":231,\"loc\":\"\",\"pos\":\"Management\",\"salary\":2400}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"EZoVMir\",\"mor\":100,\"hap\":88.00923391482249,\"ene\":88.0045609529577,\"int\":72.68,\"cha\":56.88,\"exp\":138.30699999995343,\"cre\":52.93,\"eff\":65.57000000000001,\"sal\":981.1800000000001,\"pro\":0,\"cyclesUntilRaise\":231,\"loc\":\"\",\"pos\":\"Management\",\"salary\":2400}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"rocx5On\",\"mor\":100,\"hap\":87.79390370317323,\"ene\":79.4893934305801,\"int\":74.10000000000001,\"cha\":51.480000000000004,\"exp\":99.07200000000225,\"cre\":74.10000000000001,\"eff\":45.24,\"sal\":854.1,\"pro\":0,\"cyclesUntilRaise\":236,\"loc\":\"\",\"pos\":\"Management\",\"salary\":2400}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"7ZXUQ2h\",\"mor\":100,\"hap\":87.88019985978448,\"ene\":65.77843073491456,\"int\":61.11,\"cha\":54.32,\"exp\":112.64200000000224,\"cre\":58.199999999999996,\"eff\":88.27,\"sal\":945.75,\"pro\":0,\"cyclesUntilRaise\":236,\"loc\":\"\",\"pos\":\"Business\",\"salary\":2400}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"gu74SMx\",\"mor\":100,\"hap\":87.9283467030496,\"ene\":74.96764491861451,\"int\":45.24,\"cha\":52.260000000000005,\"exp\":123.25200000000224,\"cre\":45.24,\"eff\":70.98,\"sal\":833.0400000000001,\"pro\":0,\"cyclesUntilRaise\":236,\"loc\":\"\",\"pos\":\"Engineer\",\"salary\":2400}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"Y9R1QWx\",\"mor\":100,\"hap\":87.77140770747255,\"ene\":85.83935905145998,\"int\":53.32,\"cha\":73.96,\"exp\":111.74000000000224,\"cre\":69.66,\"eff\":60.199999999999996,\"sal\":928.8,\"pro\":0,\"cyclesUntilRaise\":240,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":2400}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"LcZ8iEH\",\"mor\":100,\"hap\":87.89587735053692,\"ene\":79.78766272157777,\"int\":73.92,\"cha\":43.89,\"exp\":106.25000000000225,\"cre\":64.68,\"eff\":54.67,\"sal\":852.39,\"pro\":0,\"cyclesUntilRaise\":240,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":2400}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"yxNErvS\",\"mor\":100,\"hap\":88.0207281871791,\"ene\":88.01750662840554,\"int\":95.03999999999999,\"cha\":50.49,\"exp\":109.77000000000224,\"cre\":84.15,\"eff\":58.41,\"sal\":1015.74,\"pro\":0,\"cyclesUntilRaise\":240,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":2400}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"4XQpdmG\",\"mor\":100,\"hap\":87.95562496022804,\"ene\":87.95346565661244,\"int\":74.48,\"cha\":52.44,\"exp\":106.80400000000212,\"cre\":54.72,\"eff\":53.2,\"sal\":857.28,\"pro\":0,\"cyclesUntilRaise\":172,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":2200}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"5tuovU0\",\"mor\":100,\"hap\":87.8977241280126,\"ene\":80.79444994305342,\"int\":64.32,\"cha\":86.39999999999999,\"exp\":124.04400000000211,\"cre\":80.64,\"eff\":64.32,\"sal\":1091.52,\"pro\":0,\"cyclesUntilRaise\":172,\"loc\":\"\",\"pos\":\"Research & Development\",\"salary\":2200}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"D0KHhVx\",\"mor\":100,\"hap\":87.96871567997816,\"ene\":87.96618269462796,\"int\":84.48,\"cha\":74.8,\"exp\":139.4839999999477,\"cre\":62.48,\"eff\":77.44,\"sal\":1148.4,\"pro\":0,\"cyclesUntilRaise\":172,\"loc\":\"\",\"pos\":\"Research & Development\",\"salary\":2200}}],\"employeeProd\":{\"Operations\":1152.5588896019358,\"Engineer\":281.9766189988663,\"Business\":123.61801569741684,\"Management\":1617.6008926762554,\"Research & Development\":785.6872634740851,\"total\":3961.4416804485595,\"Unassigned\":0}}},\"Chongqing\":{\"ctor\":\"OfficeSpace\",\"data\":{\"loc\":\"Chongqing\",\"cost\":1,\"size\":12,\"comf\":1,\"beau\":1,\"tier\":\"Basic\",\"minEne\":0,\"maxEne\":100,\"minHap\":0,\"maxHap\":100,\"maxMor\":100,\"employees\":[{\"ctor\":\"Employee\",\"data\":{\"name\":\"p0TnXOt\",\"mor\":100,\"hap\":87.86822707777017,\"ene\":70.80326702527249,\"int\":80.08,\"cha\":86.24,\"exp\":102.51500000000212,\"cre\":66,\"eff\":79.2,\"sal\":1074.48,\"pro\":0,\"cyclesUntilRaise\":175,\"loc\":\"\",\"pos\":\"Management\",\"salary\":2200}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"KhGyOpN\",\"mor\":100,\"hap\":88.03295699464444,\"ene\":71.17940362009966,\"int\":56.28,\"cha\":46.199999999999996,\"exp\":114.67500000000211,\"cre\":71.39999999999999,\"eff\":42.839999999999996,\"sal\":826.56,\"pro\":0,\"cyclesUntilRaise\":175,\"loc\":\"\",\"pos\":\"Research & Development\",\"salary\":2200}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"lFz2ltQ\",\"mor\":100,\"hap\":88.03692584144004,\"ene\":65.62205354323804,\"int\":50.400000000000006,\"cha\":75.2,\"exp\":127.87500000000212,\"cre\":63.2,\"eff\":58.400000000000006,\"sal\":957.6,\"pro\":0,\"cyclesUntilRaise\":175,\"loc\":\"\",\"pos\":\"Research & Development\",\"salary\":2200}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"qmV8Wnd\",\"mor\":100,\"hap\":87.78900766636565,\"ene\":87.7918263425261,\"int\":52,\"cha\":61,\"exp\":121.87500000000212,\"cre\":62,\"eff\":70,\"sal\":933,\"pro\":0,\"cyclesUntilRaise\":175,\"loc\":\"\",\"pos\":\"Management\",\"salary\":2200}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"Z1LO6dC\",\"mor\":100,\"hap\":87.99452045827319,\"ene\":87.99567461906464,\"int\":48,\"cha\":76,\"exp\":110.27500000000212,\"cre\":63.2,\"eff\":79.2,\"sal\":962.4000000000001,\"pro\":0,\"cyclesUntilRaise\":175,\"loc\":\"\",\"pos\":\"Management\",\"salary\":2200}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"mLBLiSG\",\"mor\":100,\"hap\":87.85520294547692,\"ene\":87.85740855341875,\"int\":54,\"cha\":80.10000000000001,\"exp\":127.87500000000212,\"cre\":54.9,\"eff\":65.7,\"sal\":980.1,\"pro\":0,\"cyclesUntilRaise\":175,\"loc\":\"\",\"pos\":\"Management\",\"salary\":2200}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"DjR4JuX\",\"mor\":100,\"hap\":87.89241354128355,\"ene\":87.8949957158078,\"int\":72.09,\"cha\":68.53,\"exp\":121.73500000000212,\"cre\":72.09,\"eff\":83.66,\"sal\":1086.69,\"pro\":0,\"cyclesUntilRaise\":175,\"loc\":\"\",\"pos\":\"Business\",\"salary\":2200}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"pSvl8C0\",\"mor\":100,\"hap\":88.09079849119695,\"ene\":88.09095297832437,\"int\":77,\"cha\":66.99,\"exp\":103.61500000000211,\"cre\":60.06,\"eff\":61.6,\"sal\":940.1700000000001,\"pro\":0,\"cyclesUntilRaise\":175,\"loc\":\"\",\"pos\":\"Engineer\",\"salary\":2200}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"01lbdGM\",\"mor\":100,\"hap\":87.96557904886693,\"ene\":87.96785471261268,\"int\":91,\"cha\":55,\"exp\":122.87500000000212,\"cre\":54,\"eff\":61,\"sal\":984,\"pro\":0,\"cyclesUntilRaise\":175,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":2200}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"7N1GIAW\",\"mor\":100,\"hap\":87.89731084333675,\"ene\":87.89849212968174,\"int\":71.38,\"cha\":64.74,\"exp\":123.93500000000212,\"cre\":73.03999999999999,\"eff\":67.22999999999999,\"sal\":1033.35,\"pro\":0,\"cyclesUntilRaise\":175,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":2200}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"IpWpl7P\",\"mor\":100,\"hap\":87.77236037301262,\"ene\":87.77493007961093,\"int\":83.16,\"cha\":61.32,\"exp\":102.0750000000021,\"cre\":54.6,\"eff\":43.68,\"sal\":866.88,\"pro\":0,\"cyclesUntilRaise\":175,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":2200}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"0INsHdn\",\"mor\":100,\"hap\":88.00496524656363,\"ene\":88.00719875949991,\"int\":85.36,\"cha\":58.08,\"exp\":127.15500000000212,\"cre\":73.04,\"eff\":85.36,\"sal\":1119.36,\"pro\":0,\"cyclesUntilRaise\":175,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":2200}}],\"employeeProd\":{\"Operations\":1286.7982849754246,\"Engineer\":346.1120144968113,\"Business\":197.45836638094468,\"Management\":1593.3881679778124,\"Research & Development\":516.5701220425625,\"total\":3940.3269558735556,\"Unassigned\":0}}},\"Sector-12\":{\"ctor\":\"OfficeSpace\",\"data\":{\"loc\":\"Sector-12\",\"cost\":1,\"size\":21,\"comf\":1,\"beau\":1,\"tier\":\"Basic\",\"minEne\":0,\"maxEne\":100,\"minHap\":0,\"maxHap\":100,\"maxMor\":100,\"employees\":[{\"ctor\":\"Employee\",\"data\":{\"name\":\"Worker1\",\"mor\":100,\"hap\":87.90147815713715,\"ene\":87.2119153262853,\"int\":53.72,\"cha\":45.03,\"exp\":115.28100000000248,\"cre\":71.10000000000001,\"eff\":67.94,\"sal\":862.6800000000001,\"pro\":0,\"cyclesUntilRaise\":163,\"loc\":\"\",\"pos\":\"Engineer\",\"salary\":2600}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"Worker2\",\"mor\":100,\"hap\":87.84125205954653,\"ene\":87.16948306881065,\"int\":93.11999999999999,\"cha\":59.519999999999996,\"exp\":126.93300000000248,\"cre\":73.92,\"eff\":79.67999999999999,\"sal\":1103.04,\"pro\":0,\"cyclesUntilRaise\":169,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":2600}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"Worker3\",\"mor\":100,\"hap\":87.88239987228609,\"ene\":87.00626352033849,\"int\":63.18000000000001,\"cha\":53.46,\"exp\":119.76000000000248,\"cre\":63.99,\"eff\":55.89,\"sal\":872.37,\"pro\":0,\"cyclesUntilRaise\":170,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":2600}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"Worker4\",\"mor\":100,\"hap\":87.95847422023503,\"ene\":87.19077595331173,\"int\":52.46,\"cha\":67.08,\"exp\":138.5719999999524,\"cre\":66.22,\"eff\":58.48,\"sal\":952.02,\"pro\":0,\"cyclesUntilRaise\":176,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":2600}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"Worker5\",\"mor\":100,\"hap\":87.81760615766717,\"ene\":86.94876979170826,\"int\":56.88,\"cha\":67.94,\"exp\":125.50900000000249,\"cre\":53.72,\"eff\":64.78,\"sal\":910.08,\"pro\":0,\"cyclesUntilRaise\":177,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":2600}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"Worker6\",\"mor\":100,\"hap\":87.97845822120989,\"ene\":87.29684629412341,\"int\":23.2,\"cha\":27.549999999999997,\"exp\":78.84800000000234,\"cre\":18.849999999999998,\"eff\":27.259999999999998,\"sal\":341.03999999999996,\"pro\":0,\"cyclesUntilRaise\":124,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":2500}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"FWjbtP3\",\"mor\":100,\"hap\":87.72913003263878,\"ene\":87.09223041264029,\"int\":78.57,\"cha\":71.78,\"exp\":112.42900000000235,\"cre\":71.78,\"eff\":85.36,\"sal\":1073.79,\"pro\":0,\"cyclesUntilRaise\":137,\"loc\":\"\",\"pos\":\"Management\",\"salary\":2500}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"c5vWXFV\",\"mor\":100,\"hap\":88.04779218786831,\"ene\":87.46404963585276,\"int\":76.36,\"cha\":46,\"exp\":110.74900000000235,\"cre\":68.08,\"eff\":56.120000000000005,\"sal\":885.96,\"pro\":0,\"cyclesUntilRaise\":137,\"loc\":\"\",\"pos\":\"Management\",\"salary\":2500}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"7Ikuvj1\",\"mor\":100,\"hap\":87.86776612138662,\"ene\":87.0718397909351,\"int\":74.75999999999999,\"cha\":62.16,\"exp\":119.10900000000234,\"cre\":82.32,\"eff\":52.08,\"sal\":985.3199999999999,\"pro\":0,\"cyclesUntilRaise\":137,\"loc\":\"\",\"pos\":\"Management\",\"salary\":2500}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"zDh75j4\",\"mor\":100,\"hap\":87.84662077570206,\"ene\":87.14340958425184,\"int\":56.980000000000004,\"cha\":57.75,\"exp\":106.64900000000235,\"cre\":60.83,\"eff\":55.44,\"sal\":826.98,\"pro\":0,\"cyclesUntilRaise\":137,\"loc\":\"\",\"pos\":\"Management\",\"salary\":2500}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"0y7h4VO\",\"mor\":100,\"hap\":87.8609418381876,\"ene\":87.27328632149523,\"int\":74.48,\"cha\":56.839999999999996,\"exp\":111.96900000000234,\"cre\":90.16,\"eff\":90.16,\"sal\":1084.86,\"pro\":0,\"cyclesUntilRaise\":137,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":2500}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"sfcPl8h\",\"mor\":100,\"hap\":87.78936695095939,\"ene\":87.17322594569724,\"int\":65.12,\"cha\":46.64,\"exp\":128.86899999999824,\"cre\":88,\"eff\":66,\"sal\":997.92,\"pro\":0,\"cyclesUntilRaise\":137,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":2500}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"r8syIyq\",\"mor\":100,\"hap\":87.9536800576408,\"ene\":87.34019662004584,\"int\":51.85,\"cha\":78.2,\"exp\":127.43900000000235,\"cre\":74.8,\"eff\":58.65,\"sal\":986.85,\"pro\":0,\"cyclesUntilRaise\":137,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":2500}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"Rc9QSrd\",\"mor\":100,\"hap\":87.93440970614185,\"ene\":87.30167837704978,\"int\":48.6,\"cha\":71.28,\"exp\":125.97900000000234,\"cre\":72.9,\"eff\":75.33,\"sal\":996.3000000000001,\"pro\":0,\"cyclesUntilRaise\":137,\"loc\":\"\",\"pos\":\"Management\",\"salary\":2500}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"7Uy1GaS\",\"mor\":100,\"hap\":87.88985257269894,\"ene\":87.23289105537566,\"int\":77.44,\"cha\":82.72,\"exp\":108.62900000000235,\"cre\":78.32000000000001,\"eff\":75.68,\"sal\":1082.4,\"pro\":0,\"cyclesUntilRaise\":137,\"loc\":\"\",\"pos\":\"Management\",\"salary\":2500}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"jxUIGX8\",\"mor\":100,\"hap\":87.91544092088742,\"ene\":87.19720500349543,\"int\":90.09,\"cha\":81.17999999999999,\"exp\":113.19000000000233,\"cre\":92.07,\"eff\":85.14,\"sal\":1199.8799999999999,\"pro\":0,\"cyclesUntilRaise\":230,\"loc\":\"\",\"pos\":\"Engineer\",\"salary\":2500}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"NrgE68k\",\"mor\":100,\"hap\":87.90569246146129,\"ene\":87.21641921018075,\"int\":41.8,\"cha\":50.160000000000004,\"exp\":120.23000000000233,\"cre\":59.28,\"eff\":74.48,\"sal\":852.72,\"pro\":0,\"cyclesUntilRaise\":230,\"loc\":\"\",\"pos\":\"Management\",\"salary\":2500}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"S3x3a0B\",\"mor\":100,\"hap\":87.99127283446322,\"ene\":87.24092083552159,\"int\":54.519999999999996,\"cha\":58.279999999999994,\"exp\":122.81000000000233,\"cre\":57.339999999999996,\"eff\":94,\"sal\":975.7199999999999,\"pro\":0,\"cyclesUntilRaise\":230,\"loc\":\"\",\"pos\":\"Business\",\"salary\":2500}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"S0NqHt5\",\"mor\":100,\"hap\":87.99341125740423,\"ene\":87.31339773196143,\"int\":56.21,\"cha\":75.46000000000001,\"exp\":105.60000000000234,\"cre\":63.14,\"eff\":76.23,\"sal\":944.7900000000001,\"pro\":0,\"cyclesUntilRaise\":230,\"loc\":\"\",\"pos\":\"Research & Development\",\"salary\":2500}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"3dUeAVJ\",\"mor\":100,\"hap\":87.80701863915647,\"ene\":87.11152701223584,\"int\":72.38,\"cha\":67.67999999999999,\"exp\":136.90999999996012,\"cre\":75.19999999999999,\"eff\":66.74,\"sal\":1071.6,\"pro\":0,\"cyclesUntilRaise\":230,\"loc\":\"\",\"pos\":\"Research & Development\",\"salary\":2500}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"7v876n8\",\"mor\":100,\"hap\":88.02026577143633,\"ene\":87.38688887427695,\"int\":65.52,\"cha\":60.97,\"exp\":136.3299999999629,\"cre\":85.54,\"eff\":62.79,\"sal\":1048.32,\"pro\":0,\"cyclesUntilRaise\":230,\"loc\":\"\",\"pos\":\"Research & Development\",\"salary\":2500}}],\"employeeProd\":{\"Operations\":2377.8705054731226,\"Engineer\":737.2624269020121,\"Business\":170.09531779794352,\"Management\":2615.9960888439978,\"Research & Development\":1146.6155062997884,\"total\":7047.839845316864,\"Unassigned\":0}}},\"New Tokyo\":{\"ctor\":\"OfficeSpace\",\"data\":{\"loc\":\"New Tokyo\",\"cost\":1,\"size\":12,\"comf\":1,\"beau\":1,\"tier\":\"Basic\",\"minEne\":0,\"maxEne\":100,\"minHap\":0,\"maxHap\":100,\"maxMor\":100,\"employees\":[{\"ctor\":\"Employee\",\"data\":{\"name\":\"zbgMSuo\",\"mor\":100,\"hap\":87.9739259825206,\"ene\":87.97625636878485,\"int\":49.29,\"cha\":62.31,\"exp\":111.2790000000021,\"cre\":48.36,\"eff\":51.150000000000006,\"sal\":800.73,\"pro\":0,\"cyclesUntilRaise\":307,\"loc\":\"\",\"pos\":\"Research & Development\",\"salary\":2250}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"dwHuKQJ\",\"mor\":100,\"hap\":88.03225955138984,\"ene\":88.03365740659127,\"int\":89,\"cha\":77.43,\"exp\":136.46899999996197,\"cre\":49.84,\"eff\":63.19,\"sal\":1081.35,\"pro\":0,\"cyclesUntilRaise\":307,\"loc\":\"\",\"pos\":\"Management\",\"salary\":2250}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"3DFpK0O\",\"mor\":100,\"hap\":87.91769292278134,\"ene\":87.91885786237243,\"int\":80.99,\"cha\":71.2,\"exp\":132.01899999998307,\"cre\":52.51,\"eff\":44.5,\"sal\":977.22,\"pro\":0,\"cyclesUntilRaise\":307,\"loc\":\"\",\"pos\":\"Management\",\"salary\":2250}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"lAnlSWk\",\"mor\":100,\"hap\":87.98849357251851,\"ene\":87.98904690631512,\"int\":59.28,\"cha\":38,\"exp\":96.4920000000021,\"cre\":44.84,\"eff\":52.44,\"sal\":706.8,\"pro\":0,\"cyclesUntilRaise\":316,\"loc\":\"\",\"pos\":\"Management\",\"salary\":2250}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"EXtDQhV\",\"mor\":100,\"hap\":87.92354565763871,\"ene\":87.92416745415495,\"int\":72.21,\"cha\":43.989999999999995,\"exp\":135.13199999996831,\"cre\":63.08,\"eff\":42.33,\"sal\":903.87,\"pro\":0,\"cyclesUntilRaise\":316,\"loc\":\"\",\"pos\":\"Management\",\"salary\":2250}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"SAcS649\",\"mor\":100,\"hap\":87.94607475727463,\"ene\":87.94783433698618,\"int\":59.64,\"cha\":68.88,\"exp\":127.6920000000021,\"cre\":58.8,\"eff\":74.75999999999999,\"sal\":1002.9599999999999,\"pro\":0,\"cyclesUntilRaise\":316,\"loc\":\"\",\"pos\":\"Business\",\"salary\":2250}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"pwOSyd7\",\"mor\":100,\"hap\":87.91389232178732,\"ene\":63.235603060573155,\"int\":57.949999999999996,\"cha\":65.55,\"exp\":135.16099999996814,\"cre\":71.25,\"eff\":91.19999999999999,\"sal\":1100.1,\"pro\":0,\"cyclesUntilRaise\":263,\"loc\":\"\",\"pos\":\"Engineer\",\"salary\":2200}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"Vi6AZYN\",\"mor\":100,\"hap\":87.8960202695674,\"ene\":87.89642569770741,\"int\":70.55,\"cha\":53.949999999999996,\"exp\":110.85100000000206,\"cre\":69.72,\"eff\":41.5,\"sal\":876.4799999999999,\"pro\":0,\"cyclesUntilRaise\":263,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":2200}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"bqUteYG\",\"mor\":100,\"hap\":87.91798183970081,\"ene\":87.9182572842857,\"int\":63.36,\"cha\":61.38,\"exp\":148.46099999990514,\"cre\":78.21,\"eff\":53.46,\"sal\":1051.3799999999999,\"pro\":0,\"cyclesUntilRaise\":263,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":2200}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"HiUpPge\",\"mor\":100,\"hap\":87.95913423847051,\"ene\":86.26483359428252,\"int\":70.68,\"cha\":73.47,\"exp\":102.76800000000206,\"cre\":93,\"eff\":49.29,\"sal\":1004.4000000000001,\"pro\":0,\"cyclesUntilRaise\":264,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":2200}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"F2tpcYZ\",\"mor\":100,\"hap\":87.99680848282273,\"ene\":68.17412464590304,\"int\":78.32000000000001,\"cha\":82.77,\"exp\":98.90800000000206,\"cre\":45.39,\"eff\":78.32000000000001,\"sal\":987.9,\"pro\":0,\"cyclesUntilRaise\":264,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":2200}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"w5xZtpK\",\"mor\":100,\"hap\":87.97269559572787,\"ene\":77.19398067359865,\"int\":61.6,\"cha\":61.6,\"exp\":109.84800000000206,\"cre\":44.88,\"eff\":49.28,\"sal\":818.4,\"pro\":0,\"cyclesUntilRaise\":264,\"loc\":\"\",\"pos\":\"Research & Development\",\"salary\":2200}}],\"employeeProd\":{\"Operations\":1127.969618796927,\"Engineer\":285.8316263293931,\"Business\":192.83916605685573,\"Management\":1378.7854605425498,\"Research & Development\":563.8070663975361,\"total\":3549.232938123262,\"Unassigned\":0}}},\"Ishima\":{\"ctor\":\"OfficeSpace\",\"data\":{\"loc\":\"Ishima\",\"cost\":1,\"size\":12,\"comf\":1,\"beau\":1,\"tier\":\"Basic\",\"minEne\":0,\"maxEne\":100,\"minHap\":0,\"maxHap\":100,\"maxMor\":100,\"employees\":[{\"ctor\":\"Employee\",\"data\":{\"name\":\"lO4vkz1\",\"mor\":100,\"hap\":87.97101211403564,\"ene\":87.97101211403564,\"int\":76.36,\"cha\":46.48,\"exp\":131.5589999999852,\"cre\":52.29,\"eff\":62.25,\"sal\":943.7099999999999,\"pro\":0,\"cyclesUntilRaise\":277,\"loc\":\"\",\"pos\":\"Management\",\"salary\":2200}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"4OCAId1\",\"mor\":100,\"hap\":87.88855350240945,\"ene\":87.88855350240945,\"int\":88,\"cha\":53.68,\"exp\":99.24900000000206,\"cre\":59.84,\"eff\":85.36,\"sal\":995.28,\"pro\":0,\"cyclesUntilRaise\":277,\"loc\":\"\",\"pos\":\"Management\",\"salary\":2200}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"DaV685y\",\"mor\":100,\"hap\":87.91579034739941,\"ene\":87.91579034739941,\"int\":69.7,\"cha\":54.94,\"exp\":124.88900000000206,\"cre\":79.53999999999999,\"eff\":80.36,\"sal\":1065.1799999999998,\"pro\":0,\"cyclesUntilRaise\":277,\"loc\":\"\",\"pos\":\"Management\",\"salary\":2200}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"8aPVevx\",\"mor\":100,\"hap\":88.0936003332443,\"ene\":88.0936003332443,\"int\":87.42,\"cha\":66.96000000000001,\"exp\":104.40600000000138,\"cre\":68.82000000000001,\"eff\":90.21000000000001,\"sal\":1143.9,\"pro\":0,\"cyclesUntilRaise\":228,\"loc\":\"\",\"pos\":\"Management\",\"salary\":1100}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"TOJ1xtc\",\"mor\":100,\"hap\":87.92197359876793,\"ene\":76.52374802412494,\"int\":50.74,\"cha\":67.08,\"exp\":113.91600000000139,\"cre\":63.64,\"eff\":61.92,\"sal\":962.34,\"pro\":0,\"cyclesUntilRaise\":228,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":1100}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"dZOcVbg\",\"mor\":100,\"hap\":87.91383311910516,\"ene\":87.91383311910516,\"int\":61.6,\"cha\":53.13,\"exp\":105.81600000000138,\"cre\":43.89,\"eff\":53.13,\"sal\":843.15,\"pro\":0,\"cyclesUntilRaise\":228,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":1100}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"UPNCe0J\",\"mor\":100,\"hap\":87.88250668970002,\"ene\":74.66911687829322,\"int\":53.58,\"cha\":88.36,\"exp\":126.31000000000132,\"cre\":67.67999999999999,\"eff\":62.04,\"sal\":1088.52,\"pro\":0,\"cyclesUntilRaise\":290,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":1100}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"23GuqEB\",\"mor\":100,\"hap\":87.92642288527439,\"ene\":87.92642288527439,\"int\":49.6,\"cha\":52.800000000000004,\"exp\":101.53000000000134,\"cre\":52,\"eff\":53.6,\"sal\":823.2,\"pro\":0,\"cyclesUntilRaise\":290,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":1100}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"ENK3Pfk\",\"mor\":100,\"hap\":87.93688592356595,\"ene\":87.93688592356595,\"int\":78.12,\"cha\":51.150000000000006,\"exp\":128.1300000000007,\"cre\":68.82000000000001,\"eff\":50.220000000000006,\"sal\":1023.9300000000001,\"pro\":0,\"cyclesUntilRaise\":290,\"loc\":\"\",\"pos\":\"Engineer\",\"salary\":1100}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"D7bXXG8\",\"mor\":100,\"hap\":87.82333258329754,\"ene\":87.82333258329754,\"int\":93.12,\"cha\":83.42,\"exp\":89.45000000000132,\"cre\":75.66,\"eff\":79.53999999999999,\"sal\":1158.18,\"pro\":0,\"cyclesUntilRaise\":290,\"loc\":\"\",\"pos\":\"Business\",\"salary\":1100}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"MwcsSOH\",\"mor\":100,\"hap\":87.83459021353988,\"ene\":79.13386310687787,\"int\":60.830000000000005,\"cha\":52.14,\"exp\":97.54000000000133,\"cre\":52.93,\"eff\":59.25,\"sal\":862.6800000000001,\"pro\":0,\"cyclesUntilRaise\":290,\"loc\":\"\",\"pos\":\"Research & Development\",\"salary\":1100}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"UwfmlyZ\",\"mor\":100,\"hap\":87.95719096864087,\"ene\":87.95719096864087,\"int\":51.68,\"cha\":40.28,\"exp\":95.17000000000132,\"cre\":51.68,\"eff\":67.64,\"sal\":813.96,\"pro\":0,\"cyclesUntilRaise\":290,\"loc\":\"\",\"pos\":\"Research & Development\",\"salary\":1100}}],\"employeeProd\":{\"Operations\":1018.0767882683062,\"Engineer\":355.0211174893953,\"Business\":220.63706845689498,\"Management\":1460.7702727625233,\"Research & Development\":591.6313666434997,\"total\":3646.1366136206198,\"Unassigned\":0}}},\"Volhaven\":{\"ctor\":\"OfficeSpace\",\"data\":{\"loc\":\"Volhaven\",\"cost\":1,\"size\":12,\"comf\":1,\"beau\":1,\"tier\":\"Basic\",\"minEne\":0,\"maxEne\":100,\"minHap\":0,\"maxHap\":100,\"maxMor\":100,\"employees\":[{\"ctor\":\"Employee\",\"data\":{\"name\":\"0y81GOD\",\"mor\":100,\"hap\":87.88423862493579,\"ene\":82.83536644516133,\"int\":63.14,\"cha\":48.51,\"exp\":108.1960000000015,\"cre\":43.120000000000005,\"eff\":68.53,\"sal\":875.49,\"pro\":0,\"cyclesUntilRaise\":378,\"loc\":\"\",\"pos\":\"Management\",\"salary\":1100}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"oTc25ST\",\"mor\":100,\"hap\":87.7929239745122,\"ene\":72.46977946737842,\"int\":81,\"cha\":90,\"exp\":109.8660000000015,\"cre\":51.300000000000004,\"eff\":90,\"sal\":1147.5,\"pro\":0,\"cyclesUntilRaise\":378,\"loc\":\"\",\"pos\":\"Management\",\"salary\":1100}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"ETrGxsN\",\"mor\":100,\"hap\":87.82444416066386,\"ene\":87.82650811775157,\"int\":50.49,\"cha\":74.25,\"exp\":117.8760000000015,\"cre\":83.16,\"eff\":95.03999999999999,\"sal\":1143.45,\"pro\":0,\"cyclesUntilRaise\":378,\"loc\":\"\",\"pos\":\"Management\",\"salary\":1100}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"rjzSyKk\",\"mor\":100,\"hap\":87.8958431327681,\"ene\":87.89663343404445,\"int\":59.15,\"cha\":79.17,\"exp\":127.50400000000138,\"cre\":80.08,\"eff\":71.89,\"sal\":1143.8700000000001,\"pro\":0,\"cyclesUntilRaise\":232,\"loc\":\"\",\"pos\":\"Management\",\"salary\":1100}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"EQzbJ7I\",\"mor\":100,\"hap\":87.89100482931316,\"ene\":87.89368184062832,\"int\":94.08,\"cha\":93.11999999999999,\"exp\":114.25800000000137,\"cre\":61.44,\"eff\":52.8,\"sal\":1137.6,\"pro\":0,\"cyclesUntilRaise\":234,\"loc\":\"\",\"pos\":\"Business\",\"salary\":1100}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"joSk5VT\",\"mor\":100,\"hap\":87.89348070524912,\"ene\":62.97747686310588,\"int\":72.9,\"cha\":75.60000000000001,\"exp\":116.59800000000139,\"cre\":48.6,\"eff\":52.2,\"sal\":988.2,\"pro\":0,\"cyclesUntilRaise\":234,\"loc\":\"\",\"pos\":\"Engineer\",\"salary\":1100}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"KP1A7gX\",\"mor\":99,\"hap\":85.2017537876986,\"ene\":62.201753787698976,\"int\":60.76,\"cha\":78.4,\"exp\":83.12000000000066,\"cre\":56.839999999999996,\"eff\":68.6,\"sal\":990.78,\"pro\":0,\"cyclesUntilRaise\":180,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":550}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"EB9Snti\",\"mor\":67,\"hap\":86.33945961291059,\"ene\":45.33945961291054,\"int\":64,\"cha\":79.2,\"exp\":58.260000000000666,\"cre\":53.6,\"eff\":57.6,\"sal\":885.6,\"pro\":0,\"cyclesUntilRaise\":180,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":550}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"pJYGTyH\",\"mor\":99,\"hap\":57.32859905620798,\"ene\":66.32859905620803,\"int\":50.879999999999995,\"cha\":87.36,\"exp\":76.98000000000066,\"cre\":67.2,\"eff\":53.76,\"sal\":956.16,\"pro\":0,\"cyclesUntilRaise\":180,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":550}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"ALb5Mdx\",\"mor\":81,\"hap\":87.41124208992376,\"ene\":85.41124208992376,\"int\":81.48,\"cha\":54.32,\"exp\":93.88900000000065,\"cre\":84.39,\"eff\":77.6,\"sal\":1123.26,\"pro\":0,\"cyclesUntilRaise\":247,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":550}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"sBzvZj9\",\"mor\":77,\"hap\":45.40194964696055,\"ene\":44.40194964696055,\"int\":76.95,\"cha\":84.55,\"exp\":78.05900000000065,\"cre\":95,\"eff\":85.5,\"sal\":1208.3999999999999,\"pro\":0,\"cyclesUntilRaise\":247,\"loc\":\"\",\"pos\":\"Research & Development\",\"salary\":550}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"zEcCyw8\",\"mor\":99,\"hap\":65.21937643779607,\"ene\":41.219376437795944,\"int\":45,\"cha\":45,\"exp\":107.25900000000065,\"cre\":63.9,\"eff\":45,\"sal\":866.7,\"pro\":0,\"cyclesUntilRaise\":247,\"loc\":\"\",\"pos\":\"Research & Development\",\"salary\":550}}],\"employeeProd\":{\"Operations\":655.408563342181,\"Engineer\":243.6737407107901,\"Business\":246.1460322329984,\"Management\":1580.9544479536557,\"Research & Development\":186.69744558079896,\"total\":2912.880229820424,\"Unassigned\":0}}}},\"name\":\"Skynet\",\"type\":\"Software\",\"sciResearch\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Scientific Research\",\"qty\":20331.355655992513,\"qlt\":0,\"dmd\":0,\"dmdR\":[0,0],\"cmp\":0,\"cmpR\":[0,0],\"mv\":0,\"mku\":0,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":0,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"researched\":{\"Hi-Tech R&D Laboratory\":true,\"Market-TA.I\":true},\"reqMats\":{\"Hardware\":0.5,\"Energy\":0.5},\"prodMats\":[\"AICores\"],\"products\":{\"Skynet 2.0\":{\"ctor\":\"Product\",\"data\":{\"name\":\"Skynet 2.0\",\"dmd\":0.001,\"cmp\":99.99,\"mku\":6.117189987324572,\"pCost\":30044.941706374702,\"sCost\":\"MP\",\"fin\":true,\"prog\":0,\"createCity\":\"\",\"designCost\":0,\"advCost\":0,\"rat\":277.4666641224637,\"qlt\":275.0798225638385,\"per\":218.47883794238686,\"dur\":266.36644020376355,\"rel\":327.449522648371,\"aes\":282.493708881052,\"fea\":299.9586972539586,\"data\":{\"Aevum\":[3022.883150211939,10.107380570810477,7.230569554129504],\"Chongqing\":[2116.0683209899985,10.386679430874503,8.172345377302829],\"Ishima\":[943.611686928246,9.831457727666542,8.41401930825187],\"New Tokyo\":[12805.94809217529,9.841249118673971,8.121754664289066],\"Sector-12\":[3977.1639201762455,12.925326938170485,7.858948828696666],\"Volhaven\":[4740.169851014825,8.98387543108031,8.659600339343596]},\"loc\":\"\",\"siz\":0.034999999999999996,\"reqMats\":{\"Hardware\":0.5,\"Energy\":0.5},\"prdman\":{\"Aevum\":[false,0],\"Chongqing\":[false,0],\"Ishima\":[false,0],\"New Tokyo\":[false,0],\"Sector-12\":[false,0],\"Volhaven\":[false,0]},\"sllman\":{\"Aevum\":[true,\"MAX\"],\"Chongqing\":[true,\"MAX\"],\"Ishima\":[true,\"MAX\"],\"New Tokyo\":[true,\"MAX\"],\"Sector-12\":[true,\"MAX\"],\"Volhaven\":[true,\"MAX\"]},\"marketTa1\":true,\"marketTa2\":false,\"marketTa2Price\":{\"Aevum\":0,\"Chongqing\":0,\"Ishima\":0,\"New Tokyo\":0,\"Sector-12\":0,\"Volhaven\":0}}},\"Skynet Lite\":{\"ctor\":\"Product\",\"data\":{\"name\":\"Skynet Lite\",\"dmd\":0.001,\"cmp\":54.426799999993946,\"mku\":6.234895069416213,\"pCost\":30044.941706374702,\"sCost\":\"MP*1.005\",\"fin\":true,\"prog\":0,\"createCity\":\"\",\"designCost\":0,\"advCost\":0,\"rat\":276.09859237262174,\"qlt\":273.69837585552995,\"per\":217.56790696407575,\"dur\":264.9667168628118,\"rel\":325.73577876171254,\"aes\":280.86399009075933,\"fea\":298.5241834189786,\"data\":{\"Aevum\":[3046.0735606068124,10.107380570810477,7.2073764258426065],\"Chongqing\":[1930.5219154339356,10.386679430874503,8.146131362857401],\"Ishima\":[942.9457473837779,9.831457727666542,8.387030088695203],\"New Tokyo\":[2934.9641844672874,9.841249118673971,8.09570292708726],\"Sector-12\":[3996.3216412255247,12.925326938170485,7.833740080337414],\"Volhaven\":[4825.642565051648,8.98387543108031,8.63182338206795]},\"loc\":\"\",\"siz\":0.034999999999999996,\"reqMats\":{\"Hardware\":0.5,\"Energy\":0.5},\"prdman\":{\"Aevum\":[false,0],\"Chongqing\":[false,0],\"Ishima\":[false,0],\"New Tokyo\":[false,0],\"Sector-12\":[false,0],\"Volhaven\":[false,0]},\"sllman\":{\"Aevum\":[true,\"MAX\"],\"Chongqing\":[true,\"MAX\"],\"Ishima\":[true,\"MAX\"],\"New Tokyo\":[true,\"MAX\"],\"Sector-12\":[true,\"MAX\"],\"Volhaven\":[true,\"MAX\"]},\"marketTa1\":true,\"marketTa2\":false,\"marketTa2Price\":{\"Aevum\":0,\"Chongqing\":0,\"Ishima\":0,\"New Tokyo\":0,\"Sector-12\":0,\"Volhaven\":0}}},\"SkyNet Pro\":{\"ctor\":\"Product\",\"data\":{\"name\":\"SkyNet Pro\",\"dmd\":15.097093872404438,\"cmp\":38.6839999999984,\"mku\":2.851594351165795,\"pCost\":30044.941706374702,\"sCost\":\"MP\",\"fin\":true,\"prog\":0,\"createCity\":\"\",\"designCost\":0,\"advCost\":0,\"rat\":770.9249496155953,\"qlt\":796.9937638965052,\"per\":654.4187001375616,\"dur\":706.5895469088161,\"rel\":875.8378224055278,\"aes\":774.8280103948684,\"fea\":820.7849147295655,\"data\":{\"Aevum\":[0,10.107380570810477,10.107380570810477],\"Chongqing\":[0,10.386679430874503,10.386679430874503],\"Ishima\":[0,9.831457727666542,9.831457727666542],\"New Tokyo\":[0,9.841249118673971,9.841249118673971],\"Sector-12\":[0,12.925326938170485,12.925326938170485],\"Volhaven\":[0,8.98387543108031,8.98387543108031]},\"loc\":\"\",\"siz\":0.034999999999999996,\"reqMats\":{\"Hardware\":0.5,\"Energy\":0.5},\"prdman\":{\"Aevum\":[false,0],\"Chongqing\":[false,0],\"Ishima\":[false,0],\"New Tokyo\":[false,0],\"Sector-12\":[false,0],\"Volhaven\":[false,0]},\"sllman\":{\"Aevum\":[true,\"MAX\"],\"Chongqing\":[true,\"MAX\"],\"Ishima\":[true,\"MAX\"],\"New Tokyo\":[true,\"MAX\"],\"Sector-12\":[true,\"MAX\"],\"Volhaven\":[true,\"MAX\"]},\"marketTa1\":true,\"marketTa2\":false,\"marketTa2Price\":{\"Aevum\":0,\"Chongqing\":0,\"Ishima\":0,\"New Tokyo\":0,\"Sector-12\":0,\"Volhaven\":0}}}},\"makesProducts\":true,\"awareness\":183.26882344116083,\"popularity\":45.58873679098963,\"startingCost\":25000000000,\"reFac\":0.15,\"sciFac\":0.62,\"hwFac\":0.25,\"robFac\":0.05,\"aiFac\":0.18,\"advFac\":0.16,\"prodMult\":9.43420694174351,\"lastCycleRevenue\":\"5715533.4958342977\",\"lastCycleExpenses\":\"1588781.82114145291\",\"thisCycleRevenue\":\"0\",\"thisCycleExpenses\":\"791827.5000000001\",\"upgrades\":[85,6],\"state\":\"START\",\"newInd\":false,\"warehouses\":{\"Aevum\":{\"ctor\":\"Warehouse\",\"data\":{\"breakdown\":\"RealEstate: 0.0<br>Skynet 2.0: 106<br>Skynet Lite: 107<br>\",\"level\":6,\"sizeUsed\":212.41348487865628,\"smartSupplyEnabled\":true,\"smartSupplyConsiderExports\":false,\"smartSupplyStore\":50.536902854052386,\"loc\":\"Aevum\",\"size\":720,\"materials\":{\"Water\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Water\",\"qty\":0,\"qlt\":0,\"dmd\":75,\"dmdR\":[65,85],\"cmp\":50,\"cmpR\":[40,60],\"mv\":0.2,\"mku\":6,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":1500,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Energy\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Energy\",\"qty\":0,\"qlt\":0,\"dmd\":85.78630302670983,\"dmdR\":[80,99],\"cmp\":83.33731551529864,\"cmpR\":[65,95],\"mv\":0.2,\"mku\":6,\"buy\":25.269044657191046,\"sll\":0.0005932301648527982,\"prd\":-25.268451427026193,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":1963.6016840997227,\"sCost\":\"MP*0\",\"prdman\":[false,0],\"sllman\":[true,\"MAX\"],\"marketTa1\":true,\"marketTa2\":false,\"marketTa2Price\":0}},\"Food\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Food\",\"qty\":0,\"qlt\":0,\"dmd\":80,\"dmdR\":[70,90],\"cmp\":60,\"cmpR\":[35,85],\"mv\":1,\"mku\":3,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":5000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Plants\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Plants\",\"qty\":0,\"qlt\":0,\"dmd\":70,\"dmdR\":[20,90],\"cmp\":50,\"cmpR\":[30,70],\"mv\":0.6,\"mku\":3.75,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":3000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Metal\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Metal\",\"qty\":0,\"qlt\":0,\"dmd\":80,\"dmdR\":[75,85],\"cmp\":70,\"cmpR\":[60,80],\"mv\":1,\"mku\":6,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":2650,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Hardware\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Hardware\",\"qty\":0,\"qlt\":0,\"dmd\":81.73751563025088,\"dmdR\":[80,90],\"cmp\":73.52728952570831,\"cmpR\":[65,95],\"mv\":0.5,\"mku\":1,\"buy\":25.269044657191046,\"sll\":0.0005932301648527982,\"prd\":-25.268451427026193,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":7321.893083020771,\"sCost\":\"MP\",\"prdman\":[false,0],\"sllman\":[true,\"MAX\"],\"marketTa1\":true,\"marketTa2\":false,\"marketTa2Price\":0}},\"Chemicals\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Chemicals\",\"qty\":0,\"qlt\":0,\"dmd\":55,\"dmdR\":[40,70],\"cmp\":60,\"cmpR\":[40,80],\"mv\":1.2,\"mku\":2,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":9000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Drugs\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Drugs\",\"qty\":0,\"qlt\":0,\"dmd\":60,\"dmdR\":[45,75],\"cmp\":70,\"cmpR\":[40,99],\"mv\":1.6,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":40000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Robots\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Robots\",\"qty\":0,\"qlt\":0,\"dmd\":80,\"dmdR\":[80,9],\"cmp\":80,\"cmpR\":[80,9],\"mv\":0.5,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":77927.09258697723,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"AICores\":{\"ctor\":\"Material\",\"data\":{\"name\":\"AI Cores\",\"qty\":0,\"qlt\":471.9734676565308,\"dmd\":81.83506559161385,\"dmdR\":[80,99],\"cmp\":9,\"cmpR\":[80,9],\"mv\":0.8,\"mku\":0.5,\"buy\":0,\"sll\":20.214761141620954,\"prd\":20.214761141620954,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":12225.03175123916,\"sCost\":\"MP*1.05\",\"prdman\":[false,0],\"sllman\":[true,\"MAX\"],\"marketTa1\":true,\"marketTa2\":false,\"marketTa2Price\":0}},\"RealEstate\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Real Estate\",\"qty\":58520,\"qlt\":0,\"dmd\":31.142948853519723,\"dmdR\":[5,99],\"cmp\":75,\"cmpR\":[25,75],\"mv\":1.5,\"mku\":1.5,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":38419.76022945637,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}}}}},\"undefined\":0,\"Sector-12\":{\"ctor\":\"Warehouse\",\"data\":{\"breakdown\":\"Hardware: 0.4<br>RealEstate: 0.0<br>Skynet 2.0: 139<br>Skynet Lite: 140<br>\",\"level\":8,\"sizeUsed\":279.46166198531887,\"smartSupplyEnabled\":true,\"smartSupplyConsiderExports\":false,\"smartSupplyStore\":64.62663469085243,\"loc\":\"Sector-12\",\"size\":960,\"materials\":{\"Water\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Water\",\"qty\":0,\"qlt\":0,\"dmd\":75,\"dmdR\":[65,85],\"cmp\":50,\"cmpR\":[40,60],\"mv\":0.2,\"mku\":6,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":1500,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Energy\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Energy\",\"qty\":0,\"qlt\":0,\"dmd\":85.39231829561183,\"dmdR\":[80,99],\"cmp\":68.56169277022819,\"cmpR\":[65,95],\"mv\":0.2,\"mku\":6,\"buy\":32.31399959095314,\"sll\":0.0006822455269201555,\"prd\":-32.31331734542621,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":2200.0056899429633,\"sCost\":\"MP\",\"prdman\":[false,0],\"sllman\":[true,\"MAX\"],\"marketTa1\":true,\"marketTa2\":false,\"marketTa2Price\":0}},\"Food\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Food\",\"qty\":0,\"qlt\":0,\"dmd\":80,\"dmdR\":[70,90],\"cmp\":60,\"cmpR\":[35,85],\"mv\":1,\"mku\":3,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":5000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Plants\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Plants\",\"qty\":0,\"qlt\":0,\"dmd\":70,\"dmdR\":[20,90],\"cmp\":50,\"cmpR\":[30,70],\"mv\":0.6,\"mku\":3.75,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":3000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Metal\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Metal\",\"qty\":0,\"qlt\":0,\"dmd\":80,\"dmdR\":[75,85],\"cmp\":70,\"cmpR\":[60,80],\"mv\":1,\"mku\":6,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":2650,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Hardware\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Hardware\",\"qty\":6.49445560428211,\"qlt\":0,\"dmd\":83.6502131450408,\"dmdR\":[80,90],\"cmp\":95,\"cmpR\":[65,95],\"mv\":0.5,\"mku\":1,\"buy\":32.31399959095314,\"sll\":0.018920985134215508,\"prd\":-32.31331734542621,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":6014.155204862516,\"sCost\":\"MP\",\"prdman\":[false,0],\"sllman\":[true,\"MAX\"],\"marketTa1\":true,\"marketTa2\":false,\"marketTa2Price\":0}},\"Chemicals\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Chemicals\",\"qty\":0,\"qlt\":0,\"dmd\":55,\"dmdR\":[40,70],\"cmp\":60,\"cmpR\":[40,80],\"mv\":1.2,\"mku\":2,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":9000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Drugs\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Drugs\",\"qty\":0,\"qlt\":0,\"dmd\":60,\"dmdR\":[45,75],\"cmp\":70,\"cmpR\":[40,99],\"mv\":1.6,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":40000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Robots\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Robots\",\"qty\":0,\"qlt\":0,\"dmd\":80,\"dmdR\":[80,9],\"cmp\":80,\"cmpR\":[80,9],\"mv\":0.5,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":60337.15526012989,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"AICores\":{\"ctor\":\"Material\",\"data\":{\"name\":\"AI Cores\",\"qty\":0,\"qlt\":477.03728925389663,\"dmd\":81.9411643568266,\"dmdR\":[80,99],\"cmp\":80,\"cmpR\":[80,9],\"mv\":0.8,\"mku\":0.5,\"buy\":0,\"sll\":25.850653876340978,\"prd\":25.850653876340978,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":13217.815948272464,\"sCost\":\"MP*1.15\",\"prdman\":[false,0],\"sllman\":[true,\"MAX\"],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"RealEstate\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Real Estate\",\"qty\":58570,\"qlt\":0,\"dmd\":35.46372487523021,\"dmdR\":[5,99],\"cmp\":66.49089815971197,\"cmpR\":[25,75],\"mv\":1.5,\"mku\":1.5,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":48505.907323868596,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}}}}},\"New Tokyo\":{\"ctor\":\"Warehouse\",\"data\":{\"breakdown\":\"RealEstate: 0.0<br>Skynet 2.0: 448<br>Skynet Lite: 103<br>\",\"level\":5,\"sizeUsed\":550.9319296824901,\"smartSupplyEnabled\":true,\"smartSupplyConsiderExports\":false,\"smartSupplyStore\":49.20624559336986,\"loc\":\"New Tokyo\",\"size\":600,\"materials\":{\"Water\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Water\",\"qty\":0,\"qlt\":0,\"dmd\":75,\"dmdR\":[65,85],\"cmp\":50,\"cmpR\":[40,60],\"mv\":0.2,\"mku\":6,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":1500,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Energy\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Energy\",\"qty\":0,\"qlt\":0,\"dmd\":89.43691942464498,\"dmdR\":[80,99],\"cmp\":71.97084024272064,\"cmpR\":[65,95],\"mv\":0.2,\"mku\":6,\"buy\":24.603471887443234,\"sll\":0.00034909075830569236,\"prd\":-24.60312279668493,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":2119.505628823591,\"sCost\":\"MP*0\",\"prdman\":[false,0],\"sllman\":[true,\"MAX\"],\"marketTa1\":true,\"marketTa2\":false,\"marketTa2Price\":0}},\"Food\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Food\",\"qty\":0,\"qlt\":0,\"dmd\":80,\"dmdR\":[70,90],\"cmp\":60,\"cmpR\":[35,85],\"mv\":1,\"mku\":3,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":5000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Plants\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Plants\",\"qty\":0,\"qlt\":0,\"dmd\":70,\"dmdR\":[20,90],\"cmp\":50,\"cmpR\":[30,70],\"mv\":0.6,\"mku\":3.75,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":3000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Metal\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Metal\",\"qty\":0,\"qlt\":0,\"dmd\":80,\"dmdR\":[75,85],\"cmp\":70,\"cmpR\":[60,80],\"mv\":1,\"mku\":6,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":2650,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Hardware\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Hardware\",\"qty\":0,\"qlt\":0,\"dmd\":86.19946971115874,\"dmdR\":[80,90],\"cmp\":90.81173499268377,\"cmpR\":[65,95],\"mv\":0.5,\"mku\":1,\"buy\":24.603471887443234,\"sll\":0.00034909075830569236,\"prd\":-24.60312279668493,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":6112.7587584130915,\"sCost\":\"MP\",\"prdman\":[false,0],\"sllman\":[true,\"MAX\"],\"marketTa1\":true,\"marketTa2\":false,\"marketTa2Price\":0}},\"Chemicals\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Chemicals\",\"qty\":0,\"qlt\":0,\"dmd\":55,\"dmdR\":[40,70],\"cmp\":60,\"cmpR\":[40,80],\"mv\":1.2,\"mku\":2,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":9000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Drugs\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Drugs\",\"qty\":0,\"qlt\":0,\"dmd\":60,\"dmdR\":[45,75],\"cmp\":70,\"cmpR\":[40,99],\"mv\":1.6,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":40000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Robots\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Robots\",\"qty\":0,\"qlt\":0,\"dmd\":80,\"dmdR\":[80,9],\"cmp\":9,\"cmpR\":[80,9],\"mv\":0.5,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":53208.888448427,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"AICores\":{\"ctor\":\"Material\",\"data\":{\"name\":\"AI Cores\",\"qty\":0,\"qlt\":472.02427532466595,\"dmd\":81.06244290295649,\"dmdR\":[80,99],\"cmp\":9,\"cmpR\":[80,9],\"mv\":0.8,\"mku\":0.5,\"buy\":0,\"sll\":19.682498237347943,\"prd\":19.682498237347943,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":14193.294292961493,\"sCost\":\"MP*1.15\",\"prdman\":[false,0],\"sllman\":[true,\"MAX\"],\"marketTa1\":true,\"marketTa2\":false,\"marketTa2Price\":0}},\"RealEstate\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Real Estate\",\"qty\":58460,\"qlt\":0,\"dmd\":42.3995173586625,\"dmdR\":[5,99],\"cmp\":30.775554502834748,\"cmpR\":[25,75],\"mv\":1.5,\"mku\":1.5,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":100254.47607990229,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}}}}},\"Ishima\":{\"ctor\":\"Warehouse\",\"data\":{\"breakdown\":\"RealEstate: 0.0<br>Skynet 2.0: 33<br>Skynet Lite: 33<br>\",\"level\":6,\"sizeUsed\":66.02951020092083,\"smartSupplyEnabled\":true,\"smartSupplyConsiderExports\":false,\"smartSupplyStore\":49.157288638332716,\"loc\":\"Ishima\",\"size\":720,\"materials\":{\"Water\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Water\",\"qty\":0,\"qlt\":0,\"dmd\":75,\"dmdR\":[65,85],\"cmp\":50,\"cmpR\":[40,60],\"mv\":0.2,\"mku\":6,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":1500,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Energy\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Energy\",\"qty\":0,\"qlt\":0,\"dmd\":89.99338025584946,\"dmdR\":[80,99],\"cmp\":72.65510297258867,\"cmpR\":[65,95],\"mv\":0.2,\"mku\":6,\"buy\":24.579128578177148,\"sll\":0.0004842590107898559,\"prd\":-24.578644319166358,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":2154.2056450385594,\"sCost\":\"MP*0\",\"prdman\":[false,0],\"sllman\":[true,\"MAX\"],\"marketTa1\":true,\"marketTa2\":false,\"marketTa2Price\":0}},\"Food\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Food\",\"qty\":0,\"qlt\":0,\"dmd\":80,\"dmdR\":[70,90],\"cmp\":60,\"cmpR\":[35,85],\"mv\":1,\"mku\":3,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":5000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Plants\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Plants\",\"qty\":0,\"qlt\":0,\"dmd\":70,\"dmdR\":[20,90],\"cmp\":50,\"cmpR\":[30,70],\"mv\":0.6,\"mku\":3.75,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":3000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Metal\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Metal\",\"qty\":0,\"qlt\":0,\"dmd\":80,\"dmdR\":[75,85],\"cmp\":70,\"cmpR\":[60,80],\"mv\":1,\"mku\":6,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":2650,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Hardware\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Hardware\",\"qty\":0,\"qlt\":0,\"dmd\":84.99520947603979,\"dmdR\":[80,90],\"cmp\":71.40122041765528,\"cmpR\":[65,95],\"mv\":0.5,\"mku\":1,\"buy\":24.579128578177148,\"sll\":0.0004842590107898559,\"prd\":-24.578644319166358,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":11507.240570001728,\"sCost\":\"MP\",\"prdman\":[false,0],\"sllman\":[true,\"MAX\"],\"marketTa1\":true,\"marketTa2\":false,\"marketTa2Price\":0}},\"Chemicals\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Chemicals\",\"qty\":0,\"qlt\":0,\"dmd\":55,\"dmdR\":[40,70],\"cmp\":60,\"cmpR\":[40,80],\"mv\":1.2,\"mku\":2,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":9000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Drugs\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Drugs\",\"qty\":0,\"qlt\":0,\"dmd\":60,\"dmdR\":[45,75],\"cmp\":70,\"cmpR\":[40,99],\"mv\":1.6,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":40000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Robots\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Robots\",\"qty\":0,\"qlt\":0,\"dmd\":80,\"dmdR\":[80,9],\"cmp\":9,\"cmpR\":[80,9],\"mv\":0.5,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":69635.73256319657,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"AICores\":{\"ctor\":\"Material\",\"data\":{\"name\":\"AI Cores\",\"qty\":0,\"qlt\":472.79524045435704,\"dmd\":92.56749184443886,\"dmdR\":[80,99],\"cmp\":80,\"cmpR\":[80,9],\"mv\":0.8,\"mku\":0.5,\"buy\":0,\"sll\":19.66291545533309,\"prd\":19.66291545533309,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":12526.95966078877,\"sCost\":\"MP*1.15\",\"prdman\":[false,0],\"sllman\":[true,\"MAX\"],\"marketTa1\":true,\"marketTa2\":false,\"marketTa2Price\":0}},\"RealEstate\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Real Estate\",\"qty\":58460,\"qlt\":0,\"dmd\":64.1366912828195,\"dmdR\":[5,99],\"cmp\":54.586371021856415,\"cmpR\":[25,75],\"mv\":1.5,\"mku\":1.5,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":80613.44133849334,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}}}}},\"Volhaven\":{\"ctor\":\"Warehouse\",\"data\":{\"breakdown\":\"Skynet 2.0: 166<br>Skynet Lite: 169<br>\",\"level\":7,\"sizeUsed\":334.8034345623265,\"smartSupplyEnabled\":true,\"smartSupplyConsiderExports\":false,\"smartSupplyStore\":44.91937715540155,\"loc\":\"Volhaven\",\"size\":840,\"materials\":{\"Water\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Water\",\"qty\":0,\"qlt\":0,\"dmd\":75,\"dmdR\":[65,85],\"cmp\":50,\"cmpR\":[40,60],\"mv\":0.2,\"mku\":6,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":1500,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Energy\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Energy\",\"qty\":0,\"qlt\":0,\"dmd\":85.09694998132079,\"dmdR\":[80,99],\"cmp\":93.48881868072749,\"cmpR\":[65,95],\"mv\":0.2,\"mku\":6,\"buy\":22.460189589344516,\"sll\":0.0005010116437404122,\"prd\":-22.459688577700774,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":1903.7923618128689,\"sCost\":\"MP\",\"prdman\":[false,0],\"sllman\":[true,\"MAX\"],\"marketTa1\":true,\"marketTa2\":false,\"marketTa2Price\":0}},\"Food\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Food\",\"qty\":0,\"qlt\":0,\"dmd\":80,\"dmdR\":[70,90],\"cmp\":60,\"cmpR\":[35,85],\"mv\":1,\"mku\":3,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":5000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Plants\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Plants\",\"qty\":0,\"qlt\":0,\"dmd\":70,\"dmdR\":[20,90],\"cmp\":50,\"cmpR\":[30,70],\"mv\":0.6,\"mku\":3.75,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":3000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Metal\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Metal\",\"qty\":0,\"qlt\":0,\"dmd\":80,\"dmdR\":[75,85],\"cmp\":70,\"cmpR\":[60,80],\"mv\":1,\"mku\":6,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":2650,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Hardware\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Hardware\",\"qty\":0,\"qlt\":0,\"dmd\":86.5556176320244,\"dmdR\":[80,90],\"cmp\":75.827836594787,\"cmpR\":[65,95],\"mv\":0.5,\"mku\":1,\"buy\":22.460189589344516,\"sll\":0.0005010116437404122,\"prd\":-22.459688577700774,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":10107.287195913445,\"sCost\":\"MP*0\",\"prdman\":[false,0],\"sllman\":[true,\"MAX\"],\"marketTa1\":true,\"marketTa2\":false,\"marketTa2Price\":0}},\"Chemicals\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Chemicals\",\"qty\":0,\"qlt\":0,\"dmd\":55,\"dmdR\":[40,70],\"cmp\":60,\"cmpR\":[40,80],\"mv\":1.2,\"mku\":2,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":9000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Drugs\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Drugs\",\"qty\":0,\"qlt\":0,\"dmd\":60,\"dmdR\":[45,75],\"cmp\":70,\"cmpR\":[40,99],\"mv\":1.6,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":40000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Robots\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Robots\",\"qty\":0,\"qlt\":0,\"dmd\":80,\"dmdR\":[80,9],\"cmp\":9,\"cmpR\":[80,9],\"mv\":0.5,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":82629.45621581547,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"AICores\":{\"ctor\":\"Material\",\"data\":{\"name\":\"AI Cores\",\"qty\":0,\"qlt\":471.56050567691153,\"dmd\":89.35632296564667,\"dmdR\":[80,99],\"cmp\":9,\"cmpR\":[80,9],\"mv\":0.8,\"mku\":0.5,\"buy\":0,\"sll\":17.96775086216062,\"prd\":17.96775086216062,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":12835.152141650422,\"sCost\":\"MP*1.15\",\"prdman\":[false,0],\"sllman\":[true,\"MAX\"],\"marketTa1\":true,\"marketTa2\":false,\"marketTa2Price\":0}},\"RealEstate\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Real Estate\",\"qty\":0,\"qlt\":0,\"dmd\":47.655269272189,\"dmdR\":[5,99],\"cmp\":54.05513790018221,\"cmpR\":[25,75],\"mv\":1.5,\"mku\":1.5,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":32783.88101581088,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}}}}},\"Chongqing\":{\"ctor\":\"Warehouse\",\"data\":{\"breakdown\":\"RealEstate: 0.0<br>Skynet 2.0: 74<br>Skynet Lite: 68<br>\",\"level\":7,\"sizeUsed\":141.63065827483769,\"smartSupplyEnabled\":true,\"smartSupplyConsiderExports\":false,\"smartSupplyStore\":51.933397154372514,\"loc\":\"Chongqing\",\"size\":840,\"materials\":{\"Water\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Water\",\"qty\":0,\"qlt\":0,\"dmd\":75,\"dmdR\":[65,85],\"cmp\":50,\"cmpR\":[40,60],\"mv\":0.2,\"mku\":6,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":1500,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Energy\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Energy\",\"qty\":0,\"qlt\":0,\"dmd\":92.32848318304342,\"dmdR\":[80,99],\"cmp\":82.56597739075305,\"cmpR\":[65,95],\"mv\":0.2,\"mku\":6,\"buy\":25.96724346986994,\"sll\":0.0005448926836791656,\"prd\":-25.966698577186257,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":2124.883601493028,\"sCost\":\"MP*0\",\"prdman\":[false,0],\"sllman\":[true,\"MAX\"],\"marketTa1\":true,\"marketTa2\":false,\"marketTa2Price\":0}},\"Food\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Food\",\"qty\":0,\"qlt\":0,\"dmd\":80,\"dmdR\":[70,90],\"cmp\":60,\"cmpR\":[35,85],\"mv\":1,\"mku\":3,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":5000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Plants\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Plants\",\"qty\":0,\"qlt\":0,\"dmd\":70,\"dmdR\":[20,90],\"cmp\":50,\"cmpR\":[30,70],\"mv\":0.6,\"mku\":3.75,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":3000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Metal\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Metal\",\"qty\":0,\"qlt\":0,\"dmd\":80,\"dmdR\":[75,85],\"cmp\":70,\"cmpR\":[60,80],\"mv\":1,\"mku\":6,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":2650,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Hardware\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Hardware\",\"qty\":0,\"qlt\":0,\"dmd\":80.59794870395353,\"dmdR\":[80,90],\"cmp\":70.96784584520758,\"cmpR\":[65,95],\"mv\":0.5,\"mku\":1,\"buy\":25.96724346986994,\"sll\":0.0005448926836791656,\"prd\":-25.966698577186257,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":5604.289941180093,\"sCost\":\"MP\",\"prdman\":[false,0],\"sllman\":[true,\"MAX\"],\"marketTa1\":true,\"marketTa2\":false,\"marketTa2Price\":0}},\"Chemicals\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Chemicals\",\"qty\":0,\"qlt\":0,\"dmd\":55,\"dmdR\":[40,70],\"cmp\":60,\"cmpR\":[40,80],\"mv\":1.2,\"mku\":2,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":9000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Drugs\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Drugs\",\"qty\":0,\"qlt\":0,\"dmd\":60,\"dmdR\":[45,75],\"cmp\":70,\"cmpR\":[40,99],\"mv\":1.6,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":40000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Robots\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Robots\",\"qty\":0,\"qlt\":0,\"dmd\":80,\"dmdR\":[80,9],\"cmp\":80,\"cmpR\":[80,9],\"mv\":0.5,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":73636.0293825417,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"AICores\":{\"ctor\":\"Material\",\"data\":{\"name\":\"AI Cores\",\"qty\":0,\"qlt\":472.68868390472835,\"dmd\":93.40568965517721,\"dmdR\":[80,99],\"cmp\":9,\"cmpR\":[80,9],\"mv\":0.8,\"mku\":0.5,\"buy\":0,\"sll\":20.773358861749006,\"prd\":20.773358861749006,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":14336.84335510282,\"sCost\":\"MP*1.15\",\"prdman\":[false,0],\"sllman\":[true,\"MAX\"],\"marketTa1\":true,\"marketTa2\":false,\"marketTa2Price\":0}},\"RealEstate\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Real Estate\",\"qty\":58480,\"qlt\":0,\"dmd\":38.190779739788944,\"dmdR\":[5,99],\"cmp\":53.98896669433408,\"cmpR\":[25,75],\"mv\":1.5,\"mku\":1.5,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":72407.25270954,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}}}}}}}},{\"ctor\":\"Industry\",\"data\":{\"offices\":{\"Aevum\":{\"ctor\":\"OfficeSpace\",\"data\":{\"loc\":\"Aevum\",\"cost\":1,\"size\":18,\"comf\":1,\"beau\":1,\"tier\":\"Basic\",\"minEne\":0,\"maxEne\":100,\"minHap\":0,\"maxHap\":100,\"maxMor\":100,\"employees\":[{\"ctor\":\"Employee\",\"data\":{\"name\":\"PZGKbH4\",\"mor\":100,\"hap\":94.36149479604833,\"ene\":94.35582895326372,\"int\":51.59,\"cha\":49.28,\"exp\":113.01400000000213,\"cre\":61.6,\"eff\":45.43,\"sal\":794.64,\"pro\":0,\"cyclesUntilRaise\":122,\"loc\":\"\",\"pos\":\"Business\",\"salary\":2200}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"Ynm3pi3\",\"mor\":100,\"hap\":94.3338617100463,\"ene\":94.33127959083414,\"int\":81,\"cha\":72,\"exp\":140.0339999999451,\"cre\":89,\"eff\":96,\"sal\":1266,\"pro\":0,\"cyclesUntilRaise\":122,\"loc\":\"\",\"pos\":\"Research & Development\",\"salary\":2200}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"oIBNj5t\",\"mor\":100,\"hap\":94.2778458356372,\"ene\":94.27200524550034,\"int\":69,\"cha\":86,\"exp\":112.03400000000212,\"cre\":90,\"eff\":99,\"sal\":1200,\"pro\":0,\"cyclesUntilRaise\":122,\"loc\":\"\",\"pos\":\"Engineer\",\"salary\":2200}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"Otw64Ak\",\"mor\":100,\"hap\":94.34359857669963,\"ene\":94.33731688644215,\"int\":77.19,\"cha\":60.45,\"exp\":124.84500000000213,\"cre\":70.68,\"eff\":78.12,\"sal\":1065.78,\"pro\":0,\"cyclesUntilRaise\":125,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":2200}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"S10bXJB\",\"mor\":100,\"hap\":94.36725576378831,\"ene\":94.36172025501624,\"int\":42.400000000000006,\"cha\":57.6,\"exp\":108.82200000000212,\"cre\":44.800000000000004,\"eff\":69.60000000000001,\"sal\":801.6,\"pro\":0,\"cyclesUntilRaise\":126,\"loc\":\"\",\"pos\":\"Business\",\"salary\":2200}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"ktJeGc5\",\"mor\":100,\"hap\":94.30474999208948,\"ene\":94.29767590448978,\"int\":42.5,\"cha\":59.5,\"exp\":107.02200000000212,\"cre\":66.3,\"eff\":66.3,\"sal\":856.8,\"pro\":0,\"cyclesUntilRaise\":126,\"loc\":\"\",\"pos\":\"Research & Development\",\"salary\":2200}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"hfmIzzH\",\"mor\":100,\"hap\":94.34915072661231,\"ene\":94.34617078360024,\"int\":57.599999999999994,\"cha\":73.92,\"exp\":138.581999999952,\"cre\":96,\"eff\":86.39999999999999,\"sal\":1189.44,\"pro\":0,\"cyclesUntilRaise\":126,\"loc\":\"\",\"pos\":\"Management\",\"salary\":2200}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"STj5AJB\",\"mor\":100,\"hap\":94.37284918476534,\"ene\":94.3655682778659,\"int\":53.36,\"cha\":57.96,\"exp\":120.42200000000213,\"cre\":59.800000000000004,\"eff\":74.52000000000001,\"sal\":930.12,\"pro\":0,\"cyclesUntilRaise\":126,\"loc\":\"\",\"pos\":\"Management\",\"salary\":2200}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"Wy0uOar\",\"mor\":100,\"hap\":94.30241093256542,\"ene\":94.29579596532265,\"int\":59.800000000000004,\"cha\":88.32000000000001,\"exp\":113.98200000000212,\"cre\":81.88000000000001,\"eff\":82.8,\"sal\":1112.28,\"pro\":0,\"cyclesUntilRaise\":126,\"loc\":\"\",\"pos\":\"Management\",\"salary\":2200}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"fxYHZgz\",\"mor\":100,\"hap\":94.42267027080155,\"ene\":94.4143880227357,\"int\":56.7,\"cha\":76.14,\"exp\":124.06200000000213,\"cre\":54.27,\"eff\":42.93,\"sal\":894.24,\"pro\":0,\"cyclesUntilRaise\":126,\"loc\":\"\",\"pos\":\"Management\",\"salary\":2200}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"We1JBk4\",\"mor\":100,\"hap\":94.37775650042062,\"ene\":94.37055086798591,\"int\":66.99,\"cha\":80.04,\"exp\":127.36200000000213,\"cre\":49.589999999999996,\"eff\":66.99,\"sal\":1004.85,\"pro\":0,\"cyclesUntilRaise\":126,\"loc\":\"\",\"pos\":\"Management\",\"salary\":2200}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"eWUiweN\",\"mor\":100,\"hap\":94.32124280040685,\"ene\":94.31569152280984,\"int\":59.29,\"cha\":53.13,\"exp\":97.60200000000212,\"cre\":56.980000000000004,\"eff\":61.6,\"sal\":817.74,\"pro\":0,\"cyclesUntilRaise\":126,\"loc\":\"\",\"pos\":\"Engineer\",\"salary\":2200}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"NhX6YsD\",\"mor\":100,\"hap\":94.2410695186401,\"ene\":94.23220740582416,\"int\":49.199999999999996,\"cha\":44.279999999999994,\"exp\":60.64500000000043,\"cre\":44.279999999999994,\"eff\":50.019999999999996,\"sal\":710.9399999999999,\"pro\":0,\"cyclesUntilRaise\":185,\"loc\":\"\",\"pos\":\"Research & Development\",\"salary\":50}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"sa5Dcjb\",\"mor\":100,\"hap\":94.30339924930752,\"ene\":94.29786231638491,\"int\":70.5,\"cha\":81.78,\"exp\":68.78500000000042,\"cre\":80.83999999999999,\"eff\":49.82,\"sal\":1020.8399999999999,\"pro\":0,\"cyclesUntilRaise\":185,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":50}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"6m0HmHy\",\"mor\":100,\"hap\":73.82833770366068,\"ene\":94.43439460915818,\"int\":45.24,\"cha\":77.42999999999999,\"exp\":94.09500000000044,\"cre\":46.11,\"eff\":66.12,\"sal\":952.65,\"pro\":0,\"cyclesUntilRaise\":185,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":50}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"RS2w9Ws\",\"mor\":100,\"hap\":93.27686220031578,\"ene\":94.38969215608338,\"int\":49.3,\"cha\":46.75,\"exp\":59.89500000000043,\"cre\":69.7,\"eff\":57.8,\"sal\":816,\"pro\":0,\"cyclesUntilRaise\":185,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":50}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"on93m87\",\"mor\":100,\"hap\":94.32240611512002,\"ene\":94.31933335380683,\"int\":61.6,\"cha\":44.88,\"exp\":74.80500000000043,\"cre\":64.24,\"eff\":44,\"sal\":834.24,\"pro\":0,\"cyclesUntilRaise\":185,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":50}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"LxJ5ywd\",\"mor\":100,\"hap\":94.36505763675135,\"ene\":94.35747023914581,\"int\":80.36,\"cha\":61.49999999999999,\"exp\":93.44500000000043,\"cre\":77.08,\"eff\":47.559999999999995,\"sal\":1045.5,\"pro\":0,\"cyclesUntilRaise\":185,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":50}}],\"employeeProd\":{\"Operations\":1806.1784524600116,\"Engineer\":818.0548801727572,\"Business\":356.04891504845017,\"Management\":2446.7022702086883,\"Research & Development\":1187.8762719180866,\"total\":6614.860789807994,\"Unassigned\":0}}},\"Chongqing\":{\"ctor\":\"OfficeSpace\",\"data\":{\"loc\":\"Chongqing\",\"cost\":1,\"size\":18,\"comf\":1,\"beau\":1,\"tier\":\"Basic\",\"minEne\":0,\"maxEne\":100,\"minHap\":0,\"maxHap\":100,\"maxMor\":100,\"employees\":[{\"ctor\":\"Employee\",\"data\":{\"name\":\"2uJcESF\",\"mor\":100,\"hap\":94.33766452566788,\"ene\":94.33766452566788,\"int\":56,\"cha\":79.2,\"exp\":104.17500000000159,\"cre\":73.60000000000001,\"eff\":48,\"sal\":957.6,\"pro\":0,\"cyclesUntilRaise\":75,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":1100}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"xtHxYdb\",\"mor\":100,\"hap\":94.2708858431664,\"ene\":94.2708858431664,\"int\":77.35000000000001,\"cha\":48.230000000000004,\"exp\":116.39500000000159,\"cre\":60.97,\"eff\":85.54,\"sal\":1040.13,\"pro\":0,\"cyclesUntilRaise\":75,\"loc\":\"\",\"pos\":\"Engineer\",\"salary\":1100}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"SeKdUXY\",\"mor\":100,\"hap\":94.44525952705264,\"ene\":94.44525952705264,\"int\":82,\"cha\":55,\"exp\":119.77500000000158,\"cre\":74,\"eff\":58,\"sal\":1041,\"pro\":0,\"cyclesUntilRaise\":75,\"loc\":\"\",\"pos\":\"Management\",\"salary\":1100}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"tqkbpUQ\",\"mor\":100,\"hap\":94.31952215556666,\"ene\":94.31952215556666,\"int\":70.2,\"cha\":42.120000000000005,\"exp\":81.46200000000158,\"cre\":60.84,\"eff\":70.2,\"sal\":849.4200000000001,\"pro\":0,\"cyclesUntilRaise\":106,\"loc\":\"\",\"pos\":\"Business\",\"salary\":1100}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"C6dtUNs\",\"mor\":100,\"hap\":94.39197114342483,\"ene\":85.64749889252671,\"int\":75.53,\"cha\":78.85,\"exp\":123.02200000000157,\"cre\":67.22999999999999,\"eff\":48.97,\"sal\":1055.76,\"pro\":0,\"cyclesUntilRaise\":106,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":1100}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"GtkCuQb\",\"mor\":100,\"hap\":94.35663140058293,\"ene\":94.35663140058293,\"int\":42.64,\"cha\":50.839999999999996,\"exp\":99.08200000000157,\"cre\":73.8,\"eff\":62.31999999999999,\"sal\":861,\"pro\":0,\"cyclesUntilRaise\":106,\"loc\":\"\",\"pos\":\"Research & Development\",\"salary\":1100}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"Sz0sD7Q\",\"mor\":100,\"hap\":94.42787539528463,\"ene\":94.42787539528463,\"int\":61.38,\"cha\":62.31,\"exp\":106.5510000000007,\"cre\":84.63000000000001,\"eff\":86.49000000000001,\"sal\":1149.48,\"pro\":0,\"cyclesUntilRaise\":333,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":550}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"OnpEGae\",\"mor\":100,\"hap\":94.26872392698566,\"ene\":94.26872392698566,\"int\":54.81,\"cha\":82.65,\"exp\":102.59100000000069,\"cre\":85.26,\"eff\":81.78,\"sal\":1166.67,\"pro\":0,\"cyclesUntilRaise\":333,\"loc\":\"\",\"pos\":\"Management\",\"salary\":550}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"7lT4QfR\",\"mor\":100,\"hap\":94.33588681733565,\"ene\":94.33588681733565,\"int\":57.76,\"cha\":39.52,\"exp\":75.20100000000069,\"cre\":54.72,\"eff\":52.44,\"sal\":784.32,\"pro\":0,\"cyclesUntilRaise\":333,\"loc\":\"\",\"pos\":\"Management\",\"salary\":550}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"mOew820\",\"mor\":100,\"hap\":94.3279767328757,\"ene\":60.236007997929576,\"int\":42.660000000000004,\"cha\":75.84,\"exp\":78.1630000000007,\"cre\":74.26,\"eff\":52.14,\"sal\":914.82,\"pro\":0,\"cyclesUntilRaise\":359,\"loc\":\"\",\"pos\":\"Research & Development\",\"salary\":550}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"lDfC2PL\",\"mor\":100,\"hap\":94.3410648175486,\"ene\":85.67681977204809,\"int\":52.93,\"cha\":59.25,\"exp\":90.01300000000069,\"cre\":39.5,\"eff\":63.2,\"sal\":860.3100000000001,\"pro\":0,\"cyclesUntilRaise\":359,\"loc\":\"\",\"pos\":\"Management\",\"salary\":550}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"HWz70Pn\",\"mor\":100,\"hap\":83.78057022217399,\"ene\":94.39010935629635,\"int\":54,\"cha\":67.5,\"exp\":98.2230000000007,\"cre\":51.300000000000004,\"eff\":59.4,\"sal\":936.9,\"pro\":0,\"cyclesUntilRaise\":359,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":550}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"qoqixYz\",\"mor\":100,\"hap\":76.74146808193149,\"ene\":94.31912224775127,\"int\":53.940000000000005,\"cha\":59.52,\"exp\":74.61600000000043,\"cre\":73.47,\"eff\":81.84,\"sal\":996.0300000000001,\"pro\":0,\"cyclesUntilRaise\":208,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":50}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"CPn22ZX\",\"mor\":100,\"hap\":94.33647456777815,\"ene\":63.192629809053074,\"int\":62.05,\"cha\":62.05,\"exp\":55.57600000000043,\"cre\":64.6,\"eff\":59.5,\"sal\":877.1999999999999,\"pro\":0,\"cyclesUntilRaise\":208,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":50}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"SSERjBw\",\"mor\":100,\"hap\":94.38601007377869,\"ene\":94.38601007377869,\"int\":59.2,\"cha\":61.6,\"exp\":88.17600000000044,\"cre\":42.400000000000006,\"eff\":75.2,\"sal\":945.6,\"pro\":0,\"cyclesUntilRaise\":208,\"loc\":\"\",\"pos\":\"Engineer\",\"salary\":50}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"WBp9QKm\",\"mor\":78,\"hap\":94.30786041986124,\"ene\":94.30786041986124,\"int\":61.38,\"cha\":74.4,\"exp\":88.56600000000043,\"cre\":69.75,\"eff\":66.96000000000001,\"sal\":1049.04,\"pro\":0,\"cyclesUntilRaise\":208,\"loc\":\"\",\"pos\":\"Business\",\"salary\":50}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"fqE7OHz\",\"mor\":100,\"hap\":94.36156943764517,\"ene\":90.02518541378667,\"int\":91.14,\"cha\":84.63000000000001,\"exp\":100.65600000000043,\"cre\":90.21000000000001,\"eff\":76.26,\"sal\":1294.5600000000002,\"pro\":0,\"cyclesUntilRaise\":208,\"loc\":\"\",\"pos\":\"Management\",\"salary\":50}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"ez6sGWo\",\"mor\":100,\"hap\":94.35105166284316,\"ene\":94.35105166284316,\"int\":78.32000000000001,\"cha\":87.22,\"exp\":90.58600000000044,\"cre\":52.51,\"eff\":64.08,\"sal\":1084.02,\"pro\":0,\"cyclesUntilRaise\":208,\"loc\":\"\",\"pos\":\"Research & Development\",\"salary\":50}}],\"employeeProd\":{\"Operations\":1754.9100935077954,\"Engineer\":821.5256220287806,\"Business\":329.1496108476558,\"Management\":2042.4061163168683,\"Research & Development\":986.899863590894,\"total\":5934.8913062919955,\"Unassigned\":0}}},\"Sector-12\":{\"ctor\":\"OfficeSpace\",\"data\":{\"loc\":\"Sector-12\",\"cost\":1,\"size\":18,\"comf\":1,\"beau\":1,\"tier\":\"Basic\",\"minEne\":0,\"maxEne\":100,\"minHap\":0,\"maxHap\":100,\"maxMor\":100,\"employees\":[{\"ctor\":\"Employee\",\"data\":{\"name\":\"saRZVP2\",\"mor\":100,\"hap\":94.35543828130393,\"ene\":94.35543828130393,\"int\":49.019999999999996,\"cha\":47.3,\"exp\":128.28400000000082,\"cre\":65.36,\"eff\":80.84,\"sal\":941.6999999999999,\"pro\":0,\"cyclesUntilRaise\":232,\"loc\":\"\",\"pos\":\"Research & Development\",\"salary\":2300}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"Ffs1Sbi\",\"mor\":100,\"hap\":94.50785600961244,\"ene\":94.50785600961244,\"int\":77.28,\"cha\":60.48,\"exp\":116.54400000000216,\"cre\":47.879999999999995,\"eff\":47.04,\"sal\":876.9599999999999,\"pro\":0,\"cyclesUntilRaise\":232,\"loc\":\"\",\"pos\":\"Management\",\"salary\":2300}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"Ov0zmpt\",\"mor\":100,\"hap\":94.32061570984469,\"ene\":92.75726026330152,\"int\":83.72,\"cha\":54.28,\"exp\":115.78400000000215,\"cre\":73.60000000000001,\"eff\":69,\"sal\":1018.44,\"pro\":0,\"cyclesUntilRaise\":232,\"loc\":\"\",\"pos\":\"Management\",\"salary\":2300}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"ARKsycz\",\"mor\":100,\"hap\":94.40985923431074,\"ene\":94.40985923431074,\"int\":76.56,\"cha\":59.16,\"exp\":128.241000000001,\"cre\":43.5,\"eff\":80.91,\"sal\":994.41,\"pro\":0,\"cyclesUntilRaise\":233,\"loc\":\"\",\"pos\":\"Management\",\"salary\":2300}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"qFg28Y4\",\"mor\":100,\"hap\":94.4465411467245,\"ene\":94.4465411467245,\"int\":86.33,\"cha\":85.36,\"exp\":124.80100000000215,\"cre\":62.08,\"eff\":97,\"sal\":1196.01,\"pro\":0,\"cyclesUntilRaise\":233,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":2300}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"bQIhbjt\",\"mor\":100,\"hap\":94.47987023869706,\"ene\":94.47987023869706,\"int\":82.56,\"cha\":80.84,\"exp\":115.38100000000215,\"cre\":73.96,\"eff\":48.16,\"sal\":1032,\"pro\":0,\"cyclesUntilRaise\":233,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":2300}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"3PMHOtJ\",\"mor\":100,\"hap\":94.30773135768284,\"ene\":94.30773135768284,\"int\":59.28,\"cha\":47.12,\"exp\":95.64300000000215,\"cre\":69.16,\"eff\":63.84,\"sal\":834.48,\"pro\":0,\"cyclesUntilRaise\":239,\"loc\":\"\",\"pos\":\"Business\",\"salary\":2300}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"FLZamSx\",\"mor\":100,\"hap\":94.34997969695203,\"ene\":94.34997969695203,\"int\":73.92,\"cha\":69.12,\"exp\":123.12300000000215,\"cre\":64.32,\"eff\":48,\"sal\":964.8,\"pro\":0,\"cyclesUntilRaise\":239,\"loc\":\"\",\"pos\":\"Research & Development\",\"salary\":2300}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"Qvk5J8k\",\"mor\":100,\"hap\":94.38913999149295,\"ene\":94.38913999149295,\"int\":54.870000000000005,\"cha\":67.89,\"exp\":126.63300000000216,\"cre\":49.29,\"eff\":57.660000000000004,\"sal\":898.38,\"pro\":0,\"cyclesUntilRaise\":239,\"loc\":\"\",\"pos\":\"Management\",\"salary\":2300}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"yZrGi82\",\"mor\":100,\"hap\":94.35520407222178,\"ene\":94.35520407222178,\"int\":91.14,\"cha\":56.730000000000004,\"exp\":126.59400000000215,\"cre\":52.080000000000005,\"eff\":72.54,\"sal\":1026.72,\"pro\":0,\"cyclesUntilRaise\":252,\"loc\":\"\",\"pos\":\"Engineer\",\"salary\":2300}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"U3H7FqP\",\"mor\":100,\"hap\":94.4075034753317,\"ene\":94.4075034753317,\"int\":52.25,\"cha\":66.5,\"exp\":128.0940000000017,\"cre\":79.8,\"eff\":51.3,\"sal\":963.3,\"pro\":0,\"cyclesUntilRaise\":252,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":2300}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"M8GfBqT\",\"mor\":100,\"hap\":94.35861789296513,\"ene\":94.35861789296513,\"int\":93.1,\"cha\":70.56,\"exp\":140.059999999945,\"cre\":56.839999999999996,\"eff\":72.52,\"sal\":1128.96,\"pro\":0,\"cyclesUntilRaise\":280,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":2250}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"MG1iBof\",\"mor\":100,\"hap\":94.40436265880834,\"ene\":74.7584095882288,\"int\":75.65,\"cha\":47.17,\"exp\":60.323000000000434,\"cre\":67.64,\"eff\":47.17,\"sal\":859.74,\"pro\":0,\"cyclesUntilRaise\":209,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":50}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"8uPIaRw\",\"mor\":81,\"hap\":94.35684279753565,\"ene\":78.53920471806272,\"int\":74.8,\"cha\":74.8,\"exp\":95.85300000000043,\"cre\":58.08,\"eff\":74.8,\"sal\":1100.88,\"pro\":0,\"cyclesUntilRaise\":209,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":50}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"nf7qQFN\",\"mor\":100,\"hap\":94.41271733796728,\"ene\":94.41271733796728,\"int\":46.64,\"cha\":48.4,\"exp\":99.37300000000043,\"cre\":82.72,\"eff\":50.160000000000004,\"sal\":947.76,\"pro\":0,\"cyclesUntilRaise\":209,\"loc\":\"\",\"pos\":\"Engineer\",\"salary\":50}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"4buXOqd\",\"mor\":100,\"hap\":94.2664125112489,\"ene\":69.49609033465597,\"int\":71.10000000000001,\"cha\":69.3,\"exp\":75.27300000000042,\"cre\":73.8,\"eff\":67.5,\"sal\":1036.8,\"pro\":0,\"cyclesUntilRaise\":209,\"loc\":\"\",\"pos\":\"Business\",\"salary\":50}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"NfnkB9g\",\"mor\":88.5,\"hap\":94.31329359828995,\"ene\":94.31329359828995,\"int\":45.65,\"cha\":47.309999999999995,\"exp\":66.15300000000042,\"cre\":57.269999999999996,\"eff\":62.25,\"sal\":801.78,\"pro\":0,\"cyclesUntilRaise\":209,\"loc\":\"\",\"pos\":\"Management\",\"salary\":50}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"FL1JiCw\",\"mor\":100,\"hap\":78.3774475883396,\"ene\":73.51736903402339,\"int\":54.29,\"cha\":67.64,\"exp\":63.88300000000043,\"cre\":49.84,\"eff\":70.31,\"sal\":883.77,\"pro\":0,\"cyclesUntilRaise\":209,\"loc\":\"\",\"pos\":\"Research & Development\",\"salary\":50}}],\"employeeProd\":{\"Operations\":2006.3130638097116,\"Engineer\":784.6718791371986,\"Business\":321.24547079434683,\"Management\":1961.8592861303887,\"Research & Development\":1045.3933269583017,\"total\":6119.483026829948,\"Unassigned\":0}}},\"New Tokyo\":{\"ctor\":\"OfficeSpace\",\"data\":{\"loc\":\"New Tokyo\",\"cost\":1,\"size\":18,\"comf\":1,\"beau\":1,\"tier\":\"Basic\",\"minEne\":0,\"maxEne\":100,\"minHap\":0,\"maxHap\":100,\"maxMor\":100,\"employees\":[{\"ctor\":\"Employee\",\"data\":{\"name\":\"eOXGEar\",\"mor\":100,\"hap\":94.37720627568385,\"ene\":94.37720627568385,\"int\":45.6,\"cha\":58.52,\"exp\":80.50800000000157,\"cre\":68.4,\"eff\":69.16,\"sal\":841.32,\"pro\":0,\"cyclesUntilRaise\":84,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":1100}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"HrCCsve\",\"mor\":100,\"hap\":94.3185689329397,\"ene\":94.3185689329397,\"int\":62.370000000000005,\"cha\":66.42,\"exp\":94.39800000000159,\"cre\":72.09,\"eff\":74.52000000000001,\"sal\":984.1500000000001,\"pro\":0,\"cyclesUntilRaise\":84,\"loc\":\"\",\"pos\":\"Engineer\",\"salary\":1100}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"5jBspEQ\",\"mor\":100,\"hap\":94.41084807548415,\"ene\":94.41084807548415,\"int\":95,\"cha\":85.5,\"exp\":95.89800000000157,\"cre\":77.89999999999999,\"eff\":87.39999999999999,\"sal\":1199.85,\"pro\":0,\"cyclesUntilRaise\":84,\"loc\":\"\",\"pos\":\"Management\",\"salary\":1100}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"eIfWElf\",\"mor\":100,\"hap\":94.40222287239315,\"ene\":94.40222287239315,\"int\":69.84,\"cha\":83.42,\"exp\":111.98900000000141,\"cre\":92.14999999999999,\"eff\":58.199999999999996,\"sal\":1134.8999999999999,\"pro\":0,\"cyclesUntilRaise\":367,\"loc\":\"\",\"pos\":\"Business\",\"salary\":1100}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"UyJ8oWu\",\"mor\":100,\"hap\":94.42078014657595,\"ene\":94.42078014657595,\"int\":60.48,\"cha\":57.12,\"exp\":93.57900000000141,\"cre\":84,\"eff\":61.32,\"sal\":957.5999999999999,\"pro\":0,\"cyclesUntilRaise\":367,\"loc\":\"\",\"pos\":\"Research & Development\",\"salary\":1100}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"a6d01iN\",\"mor\":100,\"hap\":94.44686105011756,\"ene\":94.44686105011756,\"int\":40.29,\"cha\":41.08,\"exp\":76.79900000000141,\"cre\":62.410000000000004,\"eff\":70.31,\"sal\":760.77,\"pro\":0,\"cyclesUntilRaise\":367,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":1100}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"bhH2a2p\",\"mor\":100,\"hap\":94.3029047687687,\"ene\":94.3029047687687,\"int\":67.2,\"cha\":63.36,\"exp\":86.36700000000069,\"cre\":67.2,\"eff\":73.92,\"sal\":1019.52,\"pro\":0,\"cyclesUntilRaise\":331,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":550}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"8PbYYR2\",\"mor\":100,\"hap\":94.3854516698728,\"ene\":94.3854516698728,\"int\":61.49999999999999,\"cha\":62.31999999999999,\"exp\":70.68700000000068,\"cre\":51.66,\"eff\":73.8,\"sal\":905.28,\"pro\":0,\"cyclesUntilRaise\":331,\"loc\":\"\",\"pos\":\"Management\",\"salary\":550}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"pqObD6I\",\"mor\":100,\"hap\":94.38188498679914,\"ene\":94.38188498679914,\"int\":89.24000000000001,\"cha\":89.24000000000001,\"exp\":105.6070000000007,\"cre\":48.760000000000005,\"eff\":79.12,\"sal\":1181.28,\"pro\":0,\"cyclesUntilRaise\":331,\"loc\":\"\",\"pos\":\"Management\",\"salary\":550}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"ezmlHcO\",\"mor\":100,\"hap\":94.39457567204487,\"ene\":94.39457567204487,\"int\":62.9,\"cha\":67.14999999999999,\"exp\":70.81100000000067,\"cre\":53.55,\"eff\":61.199999999999996,\"sal\":892.5,\"pro\":0,\"cyclesUntilRaise\":363,\"loc\":\"\",\"pos\":\"Research & Development\",\"salary\":550}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"Mi2qCeF\",\"mor\":100,\"hap\":94.30411798420452,\"ene\":75.34214358631138,\"int\":60.8,\"cha\":62.699999999999996,\"exp\":87.46100000000068,\"cre\":86.45,\"eff\":82.64999999999999,\"sal\":1085.85,\"pro\":0,\"cyclesUntilRaise\":363,\"loc\":\"\",\"pos\":\"Management\",\"salary\":550}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"gqvdEwd\",\"mor\":100,\"hap\":68.66063430525844,\"ene\":68.27761080451768,\"int\":81.84,\"cha\":88,\"exp\":103.47100000000069,\"cre\":56.32,\"eff\":70.4,\"sal\":1145.76,\"pro\":0,\"cyclesUntilRaise\":363,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":550}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"YMqkw4w\",\"mor\":100,\"hap\":94.34565137351231,\"ene\":94.34565137351231,\"int\":51.300000000000004,\"cha\":63.9,\"exp\":86.07000000000043,\"cre\":84.60000000000001,\"eff\":85.5,\"sal\":1080,\"pro\":0,\"cyclesUntilRaise\":210,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":50}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"ZIgQnjd\",\"mor\":100,\"hap\":90.24148652251613,\"ene\":70.22893049325442,\"int\":58.88,\"cha\":69,\"exp\":61.97000000000043,\"cre\":59.800000000000004,\"eff\":75.44,\"sal\":941.1600000000001,\"pro\":0,\"cyclesUntilRaise\":210,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":50}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"6X7XBTs\",\"mor\":100,\"hap\":94.40758603181048,\"ene\":94.40758603181048,\"int\":87.22,\"cha\":50.730000000000004,\"exp\":62.100000000000435,\"cre\":60.52,\"eff\":76.54,\"sal\":977.22,\"pro\":0,\"cyclesUntilRaise\":210,\"loc\":\"\",\"pos\":\"Engineer\",\"salary\":50}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"VHVldiN\",\"mor\":100,\"hap\":94.37802423170301,\"ene\":94.37802423170301,\"int\":56.120000000000005,\"cha\":74.52000000000001,\"exp\":73.01000000000043,\"cre\":69.92,\"eff\":61.64,\"sal\":971.5200000000001,\"pro\":0,\"cyclesUntilRaise\":210,\"loc\":\"\",\"pos\":\"Business\",\"salary\":50}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"EHHxTzD\",\"mor\":100,\"hap\":88.7398855881994,\"ene\":87.11277232094224,\"int\":75.84,\"cha\":48.96,\"exp\":85.29000000000043,\"cre\":54.72,\"eff\":52.8,\"sal\":918.7199999999999,\"pro\":0,\"cyclesUntilRaise\":210,\"loc\":\"\",\"pos\":\"Management\",\"salary\":50}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"RSbJdPg\",\"mor\":84,\"hap\":94.38353096069636,\"ene\":74.52513724473877,\"int\":70.81,\"cha\":50.44,\"exp\":69.57000000000042,\"cre\":85.36,\"eff\":80.50999999999999,\"sal\":1035.96,\"pro\":0,\"cyclesUntilRaise\":210,\"loc\":\"\",\"pos\":\"Research & Development\",\"salary\":50}}],\"employeeProd\":{\"Operations\":1726.3185513519654,\"Engineer\":765.3138545374413,\"Business\":453.63576398547497,\"Management\":2078.7529939678548,\"Research & Development\":1073.7527763327275,\"total\":6097.773940175465,\"Unassigned\":0}}},\"Ishima\":{\"ctor\":\"OfficeSpace\",\"data\":{\"loc\":\"Ishima\",\"cost\":1,\"size\":18,\"comf\":1,\"beau\":1,\"tier\":\"Basic\",\"minEne\":0,\"maxEne\":100,\"minHap\":0,\"maxHap\":100,\"maxMor\":100,\"employees\":[{\"ctor\":\"Employee\",\"data\":{\"name\":\"7b56IIC\",\"mor\":100,\"hap\":94.29945429424066,\"ene\":94.30141487497366,\"int\":64.67999999999999,\"cha\":60.48,\"exp\":106.41000000000157,\"cre\":69.72,\"eff\":42,\"sal\":904.68,\"pro\":0,\"cyclesUntilRaise\":90,\"loc\":\"\",\"pos\":\"Engineer\",\"salary\":1100}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"yyCm3l5\",\"mor\":100,\"hap\":94.33450617583648,\"ene\":94.33639106000807,\"int\":70.68,\"cha\":52.44,\"exp\":112.41000000000159,\"cre\":60.8,\"eff\":41.8,\"sal\":889.2,\"pro\":0,\"cyclesUntilRaise\":90,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":1100}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"fvehD28\",\"mor\":100,\"hap\":94.42408243850532,\"ene\":94.42445887649146,\"int\":43.35,\"cha\":49.3,\"exp\":118.23000000000158,\"cre\":51,\"eff\":51,\"sal\":813.4499999999999,\"pro\":0,\"cyclesUntilRaise\":90,\"loc\":\"\",\"pos\":\"Management\",\"salary\":1100}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"4ectutM\",\"mor\":100,\"hap\":94.34542461498613,\"ene\":94.34649507786345,\"int\":79.12,\"cha\":75.44,\"exp\":112.72100000000141,\"cre\":72.68,\"eff\":49.68,\"sal\":1057.0800000000002,\"pro\":0,\"cyclesUntilRaise\":373,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":1100}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"7GTuPVB\",\"mor\":100,\"hap\":94.30592568647194,\"ene\":94.3063773053277,\"int\":51.870000000000005,\"cha\":76.44,\"exp\":95.51800000000141,\"cre\":56.42,\"eff\":79.17,\"sal\":966.4200000000001,\"pro\":0,\"cyclesUntilRaise\":374,\"loc\":\"\",\"pos\":\"Business\",\"salary\":1100}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"6B9Ndey\",\"mor\":100,\"hap\":94.29824210571901,\"ene\":94.29861572291256,\"int\":84.28,\"cha\":61.06,\"exp\":82.85800000000141,\"cre\":71.38,\"eff\":67.08,\"sal\":988.14,\"pro\":0,\"cyclesUntilRaise\":374,\"loc\":\"\",\"pos\":\"Research & Development\",\"salary\":1100}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"I08k7Xb\",\"mor\":100,\"hap\":94.27706109854459,\"ene\":94.2797121703659,\"int\":82.32,\"cha\":51.239999999999995,\"exp\":102.25200000000069,\"cre\":68.03999999999999,\"eff\":78.96,\"sal\":1093.68,\"pro\":0,\"cyclesUntilRaise\":316,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":550}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"kkdoOmJ\",\"mor\":100,\"hap\":94.25858810175744,\"ene\":87.08823195027492,\"int\":83,\"cha\":76.36,\"exp\":77.18200000000068,\"cre\":81.33999999999999,\"eff\":69.72,\"sal\":1108.05,\"pro\":0,\"cyclesUntilRaise\":316,\"loc\":\"\",\"pos\":\"Management\",\"salary\":550}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"AC7KRhU\",\"mor\":100,\"hap\":94.3027476318227,\"ene\":94.3041746242353,\"int\":73.92,\"cha\":53.68,\"exp\":63.132000000000694,\"cre\":86.24,\"eff\":61.6,\"sal\":960.96,\"pro\":0,\"cyclesUntilRaise\":316,\"loc\":\"\",\"pos\":\"Management\",\"salary\":550}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"yoJbGCQ\",\"mor\":78,\"hap\":76.71498127001966,\"ene\":79.99600244791878,\"int\":74.76,\"cha\":68.53,\"exp\":69.10400000000065,\"cre\":71.2,\"eff\":48.95,\"sal\":945.1800000000001,\"pro\":0,\"cyclesUntilRaise\":172,\"loc\":\"\",\"pos\":\"Research & Development\",\"salary\":500}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"vEEwefg\",\"mor\":100,\"hap\":94.30754412407622,\"ene\":94.30770675526091,\"int\":90,\"cha\":84,\"exp\":101.48400000000066,\"cre\":82,\"eff\":61,\"sal\":1203,\"pro\":0,\"cyclesUntilRaise\":172,\"loc\":\"\",\"pos\":\"Management\",\"salary\":500}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"0FnP2pj\",\"mor\":96,\"hap\":94.42632845128472,\"ene\":94.42677160481074,\"int\":79.05,\"cha\":56.949999999999996,\"exp\":66.78400000000066,\"cre\":48.449999999999996,\"eff\":74.8,\"sal\":925.65,\"pro\":0,\"cyclesUntilRaise\":172,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":500}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"mjL5703\",\"mor\":87,\"hap\":94.36155039492596,\"ene\":65.3187265715603,\"int\":96,\"cha\":52.8,\"exp\":66.08400000000043,\"cre\":78.72,\"eff\":78.72,\"sal\":1082.8799999999999,\"pro\":0,\"cyclesUntilRaise\":212,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":50}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"Bwpdq2M\",\"mor\":79.5,\"hap\":94.40396162987113,\"ene\":94.40523527904685,\"int\":77.22,\"cha\":98.01,\"exp\":93.53400000000043,\"cre\":71.28,\"eff\":52.47,\"sal\":1143.45,\"pro\":0,\"cyclesUntilRaise\":212,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":50}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"P5MrIWt\",\"mor\":100,\"hap\":94.41780673694248,\"ene\":72.08464985570309,\"int\":64.08,\"cha\":71.2,\"exp\":55.86400000000043,\"cre\":68.53,\"eff\":82.77,\"sal\":993.24,\"pro\":0,\"cyclesUntilRaise\":212,\"loc\":\"\",\"pos\":\"Engineer\",\"salary\":50}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"oDhINgF\",\"mor\":100,\"hap\":94.463576469607,\"ene\":94.46433814501037,\"int\":59.28,\"cha\":39.78,\"exp\":68.30400000000043,\"cre\":57.72,\"eff\":70.2,\"sal\":851.76,\"pro\":0,\"cyclesUntilRaise\":212,\"loc\":\"\",\"pos\":\"Management\",\"salary\":50}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"65Hi6Cf\",\"mor\":94.5,\"hap\":94.38824370377965,\"ene\":66.69998602462923,\"int\":99,\"cha\":93,\"exp\":79.36400000000043,\"cre\":92,\"eff\":85,\"sal\":1311,\"pro\":0,\"cyclesUntilRaise\":212,\"loc\":\"\",\"pos\":\"Research & Development\",\"salary\":50}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"hocIcQC\",\"mor\":79.5,\"hap\":94.37851866119078,\"ene\":94.38103302293901,\"int\":75.33,\"cha\":77.19,\"exp\":95.99400000000044,\"cre\":75.33,\"eff\":62.31,\"sal\":1124.3700000000001,\"pro\":0,\"cyclesUntilRaise\":212,\"loc\":\"\",\"pos\":\"Business\",\"salary\":50}}],\"employeeProd\":{\"Operations\":1839.874300418782,\"Engineer\":609.0455993456901,\"Business\":401.33551736676833,\"Management\":1931.4028822286612,\"Research & Development\":1039.8364008073072,\"total\":5821.494700167209,\"Unassigned\":0}}},\"Volhaven\":{\"ctor\":\"OfficeSpace\",\"data\":{\"loc\":\"Volhaven\",\"cost\":1,\"size\":18,\"comf\":1,\"beau\":1,\"tier\":\"Basic\",\"minEne\":0,\"maxEne\":100,\"minHap\":0,\"maxHap\":100,\"maxMor\":100,\"employees\":[{\"ctor\":\"Employee\",\"data\":{\"name\":\"Q6CnZjy\",\"mor\":100,\"hap\":94.3968085697831,\"ene\":94.3968085697831,\"int\":61.88,\"cha\":62.79,\"exp\":126.34200000000159,\"cre\":56.42,\"eff\":73.71000000000001,\"sal\":1018.2900000000001,\"pro\":0,\"cyclesUntilRaise\":96,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":1100}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"2qxVBEH\",\"mor\":100,\"hap\":94.43627570930369,\"ene\":94.43627570930369,\"int\":65.12,\"cha\":54.56,\"exp\":108.59200000000158,\"cre\":50.160000000000004,\"eff\":77.44,\"sal\":942.48,\"pro\":0,\"cyclesUntilRaise\":96,\"loc\":\"\",\"pos\":\"Engineer\",\"salary\":1100}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"k4sEWpx\",\"mor\":100,\"hap\":94.32387423501469,\"ene\":94.32387423501469,\"int\":54.870000000000005,\"cha\":87.42,\"exp\":99.37200000000158,\"cre\":54.870000000000005,\"eff\":61.38,\"sal\":948.6,\"pro\":0,\"cyclesUntilRaise\":96,\"loc\":\"\",\"pos\":\"Research & Development\",\"salary\":1100}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"YEJ1uPj\",\"mor\":100,\"hap\":94.3275430430624,\"ene\":94.3275430430624,\"int\":67.22999999999999,\"cha\":82.17,\"exp\":115.49500000000157,\"cre\":48.97,\"eff\":73.03999999999999,\"sal\":1035.84,\"pro\":0,\"cyclesUntilRaise\":125,\"loc\":\"\",\"pos\":\"Business\",\"salary\":1100}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"KmnwO2I\",\"mor\":100,\"hap\":94.31290115894119,\"ene\":94.31290115894119,\"int\":69,\"cha\":53,\"exp\":91.62500000000158,\"cre\":93,\"eff\":68,\"sal\":999,\"pro\":0,\"cyclesUntilRaise\":125,\"loc\":\"\",\"pos\":\"Management\",\"salary\":1100}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"5RASPcZ\",\"mor\":100,\"hap\":94.44564502901073,\"ene\":94.44564502901073,\"int\":69.92,\"cha\":79.12,\"exp\":106.94500000000158,\"cre\":85.56,\"eff\":74.52000000000001,\"sal\":1123.32,\"pro\":0,\"cyclesUntilRaise\":125,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":1100}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"7gQTjRR\",\"mor\":100,\"hap\":94.430814202063,\"ene\":94.430814202063,\"int\":60.8,\"cha\":59.849999999999994,\"exp\":76.16900000000068,\"cre\":82.64999999999999,\"eff\":93.1,\"sal\":1063.05,\"pro\":0,\"cyclesUntilRaise\":327,\"loc\":\"\",\"pos\":\"Management\",\"salary\":550}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"c2urDGQ\",\"mor\":100,\"hap\":94.37534932845287,\"ene\":94.37534932845287,\"int\":63.19,\"cha\":69.42,\"exp\":82.29900000000069,\"cre\":64.97,\"eff\":63.19,\"sal\":974.5500000000001,\"pro\":0,\"cyclesUntilRaise\":327,\"loc\":\"\",\"pos\":\"Management\",\"salary\":550}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"lV8Ku99\",\"mor\":100,\"hap\":94.39154263882307,\"ene\":94.39154263882307,\"int\":58.08,\"cha\":56.32,\"exp\":84.21900000000069,\"cre\":80.96,\"eff\":81.84,\"sal\":1029.6,\"pro\":0,\"cyclesUntilRaise\":327,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":550}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"1XSB5LD\",\"mor\":100,\"hap\":94.32786002394573,\"ene\":72.47014412502493,\"int\":77.19,\"cha\":82.77000000000001,\"exp\":68.64000000000067,\"cre\":54.870000000000005,\"eff\":51.150000000000006,\"sal\":951.3900000000001,\"pro\":0,\"cyclesUntilRaise\":170,\"loc\":\"\",\"pos\":\"Research & Development\",\"salary\":500}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"3bA8mhe\",\"mor\":99,\"hap\":94.4116267773291,\"ene\":94.4116267773291,\"int\":77,\"cha\":75.46000000000001,\"exp\":68.31000000000066,\"cre\":50.050000000000004,\"eff\":68.53,\"sal\":965.58,\"pro\":0,\"cyclesUntilRaise\":170,\"loc\":\"\",\"pos\":\"Management\",\"salary\":500}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"QPXUQ3a\",\"mor\":100,\"hap\":94.36989096226368,\"ene\":94.36989096226368,\"int\":53.72,\"cha\":73.47,\"exp\":72.00000000000067,\"cre\":53.72,\"eff\":75.84,\"sal\":933.7800000000001,\"pro\":0,\"cyclesUntilRaise\":170,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":500}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"4zgaQQo\",\"mor\":90,\"hap\":72.41092968374906,\"ene\":69.76228125571484,\"int\":62.9,\"cha\":47.6,\"exp\":56.43200000000043,\"cre\":50.15,\"eff\":44.199999999999996,\"sal\":749.6999999999999,\"pro\":0,\"cyclesUntilRaise\":206,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":50}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"TtGRaCd\",\"mor\":100,\"hap\":69.20090054092611,\"ene\":94.29938964402129,\"int\":59.2,\"cha\":76.80000000000001,\"exp\":61.78200000000044,\"cre\":40.800000000000004,\"eff\":53.6,\"sal\":842.4000000000001,\"pro\":0,\"cyclesUntilRaise\":206,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":50}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"kg6m7gJ\",\"mor\":87,\"hap\":94.41434223606467,\"ene\":94.41434223606467,\"int\":50.400000000000006,\"cha\":70.4,\"exp\":88.18200000000044,\"cre\":62.400000000000006,\"eff\":63.2,\"sal\":969.6,\"pro\":0,\"cyclesUntilRaise\":206,\"loc\":\"\",\"pos\":\"Engineer\",\"salary\":50}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"EWmBHR5\",\"mor\":100,\"hap\":94.31834284088075,\"ene\":94.31834284088075,\"int\":76.36,\"cha\":70.84,\"exp\":75.78200000000044,\"cre\":53.36,\"eff\":83.72,\"sal\":1046.04,\"pro\":0,\"cyclesUntilRaise\":206,\"loc\":\"\",\"pos\":\"Business\",\"salary\":50}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"9BP26PU\",\"mor\":100,\"hap\":94.39398503344066,\"ene\":94.39398503344066,\"int\":67.5,\"cha\":87.3,\"exp\":78.88200000000043,\"cre\":77.4,\"eff\":72.9,\"sal\":1117.8,\"pro\":0,\"cyclesUntilRaise\":206,\"loc\":\"\",\"pos\":\"Management\",\"salary\":50}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"fLHKfx6\",\"mor\":100,\"hap\":94.1973769769581,\"ene\":94.1973769769581,\"int\":65.28,\"cha\":58.559999999999995,\"exp\":84.34200000000043,\"cre\":56.64,\"eff\":77.75999999999999,\"sal\":993.5999999999999,\"pro\":0,\"cyclesUntilRaise\":206,\"loc\":\"\",\"pos\":\"Research & Development\",\"salary\":50}}],\"employeeProd\":{\"Operations\":1738.835894547868,\"Engineer\":698.9737871537307,\"Business\":459.5508193370091,\"Management\":2153.3329063021647,\"Research & Development\":1051.0868789610054,\"total\":6101.780286301777,\"Unassigned\":0}}}},\"name\":\"FarmyFarm\",\"type\":\"Agriculture\",\"sciResearch\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Scientific Research\",\"qty\":5096.863624409931,\"qlt\":0,\"dmd\":0,\"dmdR\":[0,0],\"cmp\":0,\"cmpR\":[0,0],\"mv\":0,\"mku\":0,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":0,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"researched\":{\"Hi-Tech R&D Laboratory\":true,\"Drones\":true,\"Bulk Purchasing\":true,\"Market-TA.I\":true},\"reqMats\":{\"Water\":0.5,\"Energy\":0.5},\"prodMats\":[\"Plants\",\"Food\"],\"products\":{},\"makesProducts\":false,\"awareness\":185.47555373660242,\"popularity\":49.210057300333474,\"startingCost\":40000000000,\"reFac\":0.72,\"sciFac\":0.5,\"hwFac\":0.2,\"robFac\":0.3,\"aiFac\":0.3,\"advFac\":0.04,\"prodMult\":183.4643500733419,\"lastCycleRevenue\":\"25190745.43778166\",\"lastCycleExpenses\":\"4423747.5948271896\",\"thisCycleRevenue\":\"0\",\"thisCycleExpenses\":\"1067845.8\",\"upgrades\":[139,9],\"state\":\"START\",\"newInd\":false,\"warehouses\":{\"Aevum\":{\"ctor\":\"Warehouse\",\"data\":{\"breakdown\":\"Water: 3.7<br>Energy: 0.7<br>Hardware: 60.0<br>Robots: 500.0<br>AICores: 100.0<br>RealEstate: 0.0<br>\",\"level\":11,\"sizeUsed\":664.4439163517214,\"smartSupplyEnabled\":true,\"smartSupplyConsiderExports\":false,\"smartSupplyStore\":439.48071932900785,\"loc\":\"Aevum\",\"size\":1320,\"materials\":{\"Water\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Water\",\"qty\":74.06527252869091,\"qlt\":0,\"dmd\":66.23578591006402,\"dmdR\":[65,85],\"cmp\":46.52294003839495,\"cmpR\":[40,60],\"mv\":0.2,\"mku\":6,\"buy\":219.742497876001,\"sll\":0,\"prd\":-219.74035966450393,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":1417.4841331373502,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Energy\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Energy\",\"qty\":74.06527252869091,\"qlt\":0,\"dmd\":91.1023212311132,\"dmdR\":[80,99],\"cmp\":85.53725708368339,\"cmpR\":[65,95],\"mv\":0.2,\"mku\":6,\"buy\":219.742497876001,\"sll\":0,\"prd\":-219.74035966450393,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":1715.5315638314655,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Food\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Food\",\"qty\":0,\"qlt\":80.4557071544026,\"dmd\":82.42465768525653,\"dmdR\":[70,90],\"cmp\":68.70133228877337,\"cmpR\":[35,85],\"mv\":1,\"mku\":3,\"buy\":0,\"sll\":439.48071932900785,\"prd\":439.48071932900785,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":8106.251758924354,\"sCost\":\"MP\",\"prdman\":[false,0],\"sllman\":[true,\"MAX\"],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Plants\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Plants\",\"qty\":0,\"qlt\":80.4557071544026,\"dmd\":34.085723288278174,\"dmdR\":[20,90],\"cmp\":46.51140008869403,\"cmpR\":[30,70],\"mv\":0.6,\"mku\":3.75,\"buy\":0,\"sll\":439.48071932900785,\"prd\":439.48071932900785,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":3056.2779851918335,\"sCost\":\"MP\",\"prdman\":[false,0],\"sllman\":[true,\"MAX\"],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Metal\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Metal\",\"qty\":0,\"qlt\":0,\"dmd\":80,\"dmdR\":[75,85],\"cmp\":70,\"cmpR\":[60,80],\"mv\":1,\"mku\":6,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":2650,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Hardware\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Hardware\",\"qty\":1000,\"qlt\":0,\"dmd\":88.06032799768852,\"dmdR\":[80,90],\"cmp\":72.49576500996857,\"cmpR\":[65,95],\"mv\":0.5,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":9816.048417560292,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Chemicals\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Chemicals\",\"qty\":0,\"qlt\":0,\"dmd\":55,\"dmdR\":[40,70],\"cmp\":60,\"cmpR\":[40,80],\"mv\":1.2,\"mku\":2,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":9000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Drugs\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Drugs\",\"qty\":0,\"qlt\":0,\"dmd\":60,\"dmdR\":[45,75],\"cmp\":70,\"cmpR\":[40,99],\"mv\":1.6,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":40000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Robots\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Robots\",\"qty\":1000,\"qlt\":0,\"dmd\":80,\"dmdR\":[80,9],\"cmp\":80,\"cmpR\":[80,9],\"mv\":0.5,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":69384.77505116376,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"AICores\":{\"ctor\":\"Material\",\"data\":{\"name\":\"AI Cores\",\"qty\":1000,\"qlt\":0,\"dmd\":98.27465452118136,\"dmdR\":[80,99],\"cmp\":9,\"cmpR\":[80,9],\"mv\":0.8,\"mku\":0.5,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":33167.592462377914,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"RealEstate\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Real Estate\",\"qty\":118673,\"qlt\":0,\"dmd\":13.621996263286157,\"dmdR\":[5,99],\"cmp\":27.52365657229867,\"cmpR\":[25,75],\"mv\":1.5,\"mku\":1.5,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":79411.16519323239,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}}}}},\"undefined\":0,\"Sector-12\":{\"ctor\":\"Warehouse\",\"data\":{\"breakdown\":\"Water: 56.1<br>Energy: 0.7<br>Hardware: 60.0<br>Robots: 500.0<br>AICores: 100.0<br>RealEstate: 0.0<br>\",\"level\":10,\"sizeUsed\":716.8262450829567,\"smartSupplyEnabled\":true,\"smartSupplyConsiderExports\":false,\"smartSupplyStore\":433.0243894518124,\"loc\":\"Sector-12\",\"size\":1200,\"materials\":{\"Water\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Water\",\"qty\":1121.8838687263083,\"qlt\":0,\"dmd\":68.85966805909266,\"dmdR\":[65,85],\"cmp\":57.72824192309988,\"cmpR\":[40,60],\"mv\":0.2,\"mku\":6,\"buy\":216.51454547982976,\"sll\":0,\"prd\":-216.5121947259062,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":1318.2506053756463,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Energy\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Energy\",\"qty\":73.20516466412755,\"qlt\":0,\"dmd\":88.78874093236084,\"dmdR\":[80,99],\"cmp\":78.05495882237936,\"cmpR\":[65,95],\"mv\":0.2,\"mku\":6,\"buy\":216.51454547982976,\"sll\":0,\"prd\":-216.5121947259062,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":1909.5075788595022,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Food\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Food\",\"qty\":0,\"qlt\":80.0878277097421,\"dmd\":83.55259113073184,\"dmdR\":[70,90],\"cmp\":56.17420534703183,\"cmpR\":[35,85],\"mv\":1,\"mku\":3,\"buy\":0,\"sll\":433.0243894518124,\"prd\":433.0243894518124,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":2111.3153633538122,\"sCost\":\"MP\",\"prdman\":[false,0],\"sllman\":[true,\"MAX\"],\"marketTa1\":true,\"marketTa2\":false,\"marketTa2Price\":0}},\"Plants\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Plants\",\"qty\":0,\"qlt\":80.0878277097421,\"dmd\":62.26255898267288,\"dmdR\":[20,90],\"cmp\":30.285208385676214,\"cmpR\":[30,70],\"mv\":0.6,\"mku\":3.75,\"buy\":0,\"sll\":433.0243894518124,\"prd\":433.0243894518124,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":3872.394073865943,\"sCost\":\"MP\",\"prdman\":[false,0],\"sllman\":[true,\"MAX\"],\"marketTa1\":true,\"marketTa2\":false,\"marketTa2Price\":0}},\"Metal\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Metal\",\"qty\":0,\"qlt\":0,\"dmd\":80,\"dmdR\":[75,85],\"cmp\":70,\"cmpR\":[60,80],\"mv\":1,\"mku\":6,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":2650,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Hardware\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Hardware\",\"qty\":1000,\"qlt\":0,\"dmd\":90,\"dmdR\":[80,90],\"cmp\":80.37232497995018,\"cmpR\":[65,95],\"mv\":0.5,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":9641.690272423393,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Chemicals\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Chemicals\",\"qty\":0,\"qlt\":0,\"dmd\":55,\"dmdR\":[40,70],\"cmp\":60,\"cmpR\":[40,80],\"mv\":1.2,\"mku\":2,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":9000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Drugs\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Drugs\",\"qty\":0,\"qlt\":0,\"dmd\":60,\"dmdR\":[45,75],\"cmp\":70,\"cmpR\":[40,99],\"mv\":1.6,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":40000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Robots\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Robots\",\"qty\":1000,\"qlt\":0,\"dmd\":80,\"dmdR\":[80,9],\"cmp\":9,\"cmpR\":[80,9],\"mv\":0.5,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":62922.18364154479,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"AICores\":{\"ctor\":\"Material\",\"data\":{\"name\":\"AI Cores\",\"qty\":1000,\"qlt\":0,\"dmd\":81.64625054374135,\"dmdR\":[80,99],\"cmp\":9,\"cmpR\":[80,9],\"mv\":0.8,\"mku\":0.5,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":8259.355980063561,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"RealEstate\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Real Estate\",\"qty\":122609,\"qlt\":0,\"dmd\":25.39980466059464,\"dmdR\":[5,99],\"cmp\":25.08407551896109,\"cmpR\":[25,75],\"mv\":1.5,\"mku\":1.5,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":91881.22038469673,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}}}}},\"New Tokyo\":{\"ctor\":\"Warehouse\",\"data\":{\"breakdown\":\"Water: 3.7<br>Energy: 0.7<br>Hardware: 60.0<br>Robots: 500.0<br>AICores: 100.0<br>RealEstate: 0.0<br>\",\"level\":10,\"sizeUsed\":664.4838342793579,\"smartSupplyEnabled\":true,\"smartSupplyConsiderExports\":false,\"smartSupplyStore\":424.2855337380559,\"loc\":\"New Tokyo\",\"size\":1200,\"materials\":{\"Water\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Water\",\"qty\":74.73057132263102,\"qlt\":0,\"dmd\":74.57214365761482,\"dmdR\":[65,85],\"cmp\":41.12742430503931,\"cmpR\":[40,60],\"mv\":0.2,\"mku\":6,\"buy\":212.14499923680881,\"sll\":0,\"prd\":-212.14276686902795,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":1638.9784774846273,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Energy\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Energy\",\"qty\":74.73057132263102,\"qlt\":0,\"dmd\":89.94340913523976,\"dmdR\":[80,99],\"cmp\":80.76072205921527,\"cmpR\":[65,95],\"mv\":0.2,\"mku\":6,\"buy\":212.14499923680881,\"sll\":0,\"prd\":-212.14276686902795,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":1789.4260285417438,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Food\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Food\",\"qty\":0,\"qlt\":79.8743669222239,\"dmd\":89.50294945029012,\"dmdR\":[70,90],\"cmp\":43.96128984560181,\"cmpR\":[35,85],\"mv\":1,\"mku\":3,\"buy\":0,\"sll\":424.2855337380559,\"prd\":424.2855337380559,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":4539.348319254923,\"sCost\":\"MP\",\"prdman\":[false,0],\"sllman\":[true,\"MAX\"],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Plants\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Plants\",\"qty\":0,\"qlt\":79.8743669222239,\"dmd\":62.933490484045656,\"dmdR\":[20,90],\"cmp\":56.59428187732547,\"cmpR\":[30,70],\"mv\":0.6,\"mku\":3.75,\"buy\":0,\"sll\":424.2855337380559,\"prd\":424.2855337380559,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":3142.9149740551065,\"sCost\":\"MP\",\"prdman\":[false,0],\"sllman\":[true,\"MAX\"],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Metal\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Metal\",\"qty\":0,\"qlt\":0,\"dmd\":80,\"dmdR\":[75,85],\"cmp\":70,\"cmpR\":[60,80],\"mv\":1,\"mku\":6,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":2650,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Hardware\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Hardware\",\"qty\":1000,\"qlt\":0,\"dmd\":87.65278806603354,\"dmdR\":[80,90],\"cmp\":67.63144592314111,\"cmpR\":[65,95],\"mv\":0.5,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":8135.221871754134,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Chemicals\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Chemicals\",\"qty\":0,\"qlt\":0,\"dmd\":55,\"dmdR\":[40,70],\"cmp\":60,\"cmpR\":[40,80],\"mv\":1.2,\"mku\":2,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":9000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Drugs\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Drugs\",\"qty\":0,\"qlt\":0,\"dmd\":60,\"dmdR\":[45,75],\"cmp\":70,\"cmpR\":[40,99],\"mv\":1.6,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":40000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Robots\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Robots\",\"qty\":1000,\"qlt\":0,\"dmd\":80,\"dmdR\":[80,9],\"cmp\":80,\"cmpR\":[80,9],\"mv\":0.5,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":90956.28927675918,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"AICores\":{\"ctor\":\"Material\",\"data\":{\"name\":\"AI Cores\",\"qty\":1000,\"qlt\":0,\"dmd\":81.93115505206401,\"dmdR\":[80,99],\"cmp\":9,\"cmpR\":[80,9],\"mv\":0.8,\"mku\":0.5,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":18063.407087413176,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"RealEstate\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Real Estate\",\"qty\":88020,\"qlt\":0,\"dmd\":53.53972211953657,\"dmdR\":[5,99],\"cmp\":33.46386495971334,\"cmpR\":[25,75],\"mv\":1.5,\"mku\":1.5,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":168338.69975895065,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}}}}},\"Ishima\":{\"ctor\":\"Warehouse\",\"data\":{\"breakdown\":\"Water: 3.6<br>Energy: 0.7<br>Hardware: 60.0<br>Robots: 500.0<br>AICores: 100.0<br>RealEstate: 0.0<br>\",\"level\":10,\"sizeUsed\":664.2998489717223,\"smartSupplyEnabled\":true,\"smartSupplyConsiderExports\":false,\"smartSupplyStore\":421.0843079417024,\"loc\":\"Ishima\",\"size\":1200,\"materials\":{\"Water\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Water\",\"qty\":71.66414952870582,\"qlt\":0,\"dmd\":66.8348174690447,\"dmdR\":[65,85],\"cmp\":42.53324534204367,\"cmpR\":[40,60],\"mv\":0.2,\"mku\":6,\"buy\":210.54413319916307,\"sll\":0,\"prd\":-210.5421539708512,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":1540.7392087585135,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Energy\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Energy\",\"qty\":71.66414952870582,\"qlt\":0,\"dmd\":98.59825749668695,\"dmdR\":[80,99],\"cmp\":81.77817605391688,\"cmpR\":[65,95],\"mv\":0.2,\"mku\":6,\"buy\":210.54413319916307,\"sll\":0,\"prd\":-210.5421539708512,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":2042.1554638301334,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Food\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Food\",\"qty\":0,\"qlt\":78.13950488682175,\"dmd\":89.44116944768328,\"dmdR\":[70,90],\"cmp\":40.71334333510537,\"cmpR\":[35,85],\"mv\":1,\"mku\":3,\"buy\":0,\"sll\":421.0843079417024,\"prd\":421.0843079417024,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":6475.684376872828,\"sCost\":\"MP\",\"prdman\":[false,0],\"sllman\":[true,\"MAX\"],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Plants\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Plants\",\"qty\":0,\"qlt\":78.13950488682175,\"dmd\":26.31547267308763,\"dmdR\":[20,90],\"cmp\":31.18063605024727,\"cmpR\":[30,70],\"mv\":0.6,\"mku\":3.75,\"buy\":0,\"sll\":421.0843079417024,\"prd\":421.0843079417024,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":2580.864851628436,\"sCost\":\"MP\",\"prdman\":[false,0],\"sllman\":[true,\"MAX\"],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Metal\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Metal\",\"qty\":0,\"qlt\":0,\"dmd\":80,\"dmdR\":[75,85],\"cmp\":70,\"cmpR\":[60,80],\"mv\":1,\"mku\":6,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":2650,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Hardware\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Hardware\",\"qty\":1000,\"qlt\":0,\"dmd\":80.52894345062096,\"dmdR\":[80,90],\"cmp\":74.84433894641859,\"cmpR\":[65,95],\"mv\":0.5,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":7447.984757387318,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Chemicals\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Chemicals\",\"qty\":0,\"qlt\":0,\"dmd\":55,\"dmdR\":[40,70],\"cmp\":60,\"cmpR\":[40,80],\"mv\":1.2,\"mku\":2,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":9000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Drugs\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Drugs\",\"qty\":0,\"qlt\":0,\"dmd\":60,\"dmdR\":[45,75],\"cmp\":70,\"cmpR\":[40,99],\"mv\":1.6,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":40000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Robots\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Robots\",\"qty\":1000,\"qlt\":0,\"dmd\":80,\"dmdR\":[80,9],\"cmp\":9,\"cmpR\":[80,9],\"mv\":0.5,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":105596.71171798602,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"AICores\":{\"ctor\":\"Material\",\"data\":{\"name\":\"AI Cores\",\"qty\":1000,\"qlt\":0,\"dmd\":89.75848529208267,\"dmdR\":[80,99],\"cmp\":80,\"cmpR\":[80,9],\"mv\":0.8,\"mku\":0.5,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":10348.644780267745,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"RealEstate\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Real Estate\",\"qty\":87740,\"qlt\":0,\"dmd\":25.972056828842575,\"dmdR\":[5,99],\"cmp\":40.43218152401939,\"cmpR\":[25,75],\"mv\":1.5,\"mku\":1.5,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":86222.88464926332,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}}}}},\"Volhaven\":{\"ctor\":\"Warehouse\",\"data\":{\"breakdown\":\"Water: 3.6<br>Energy: 0.7<br>Hardware: 60.0<br>Robots: 500.0<br>AICores: 100.0<br>RealEstate: 0.0<br>\",\"level\":10,\"sizeUsed\":664.3099219663758,\"smartSupplyEnabled\":true,\"smartSupplyConsiderExports\":false,\"smartSupplyStore\":425.7130691379276,\"loc\":\"Volhaven\",\"size\":1200,\"materials\":{\"Water\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Water\",\"qty\":71.83203277292978,\"qlt\":0,\"dmd\":73.71747669637236,\"dmdR\":[65,85],\"cmp\":58.058259757145976,\"cmpR\":[40,60],\"mv\":0.2,\"mku\":6,\"buy\":212.85897170596144,\"sll\":0,\"prd\":-212.8565345689638,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":1306.81421531898,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Energy\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Energy\",\"qty\":71.83203277292978,\"qlt\":0,\"dmd\":98.78366397318057,\"dmdR\":[80,99],\"cmp\":75.10722508427033,\"cmpR\":[65,95],\"mv\":0.2,\"mku\":6,\"buy\":212.85897170596144,\"sll\":0,\"prd\":-212.8565345689638,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":1941.9562464910027,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Food\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Food\",\"qty\":0,\"qlt\":79.14006737854922,\"dmd\":73.77818454734563,\"dmdR\":[70,90],\"cmp\":45.24600999696892,\"cmpR\":[35,85],\"mv\":1,\"mku\":3,\"buy\":0,\"sll\":425.7130691379276,\"prd\":425.7130691379276,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":8743.402612646456,\"sCost\":\"MP\",\"prdman\":[false,0],\"sllman\":[true,\"MAX\"],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Plants\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Plants\",\"qty\":0,\"qlt\":79.14006737854922,\"dmd\":77.41321176434033,\"dmdR\":[20,90],\"cmp\":42.46398772253687,\"cmpR\":[30,70],\"mv\":0.6,\"mku\":3.75,\"buy\":0,\"sll\":425.7130691379276,\"prd\":425.7130691379276,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":2876.823838979724,\"sCost\":\"MP\",\"prdman\":[false,0],\"sllman\":[true,\"MAX\"],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Metal\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Metal\",\"qty\":0,\"qlt\":0,\"dmd\":80,\"dmdR\":[75,85],\"cmp\":70,\"cmpR\":[60,80],\"mv\":1,\"mku\":6,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":2650,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Hardware\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Hardware\",\"qty\":1000,\"qlt\":0,\"dmd\":82.34872748520506,\"dmdR\":[80,90],\"cmp\":65.29813256358578,\"cmpR\":[65,95],\"mv\":0.5,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":10157.62579312033,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Chemicals\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Chemicals\",\"qty\":0,\"qlt\":0,\"dmd\":55,\"dmdR\":[40,70],\"cmp\":60,\"cmpR\":[40,80],\"mv\":1.2,\"mku\":2,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":9000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Drugs\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Drugs\",\"qty\":0,\"qlt\":0,\"dmd\":60,\"dmdR\":[45,75],\"cmp\":70,\"cmpR\":[40,99],\"mv\":1.6,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":40000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Robots\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Robots\",\"qty\":1000,\"qlt\":0,\"dmd\":9,\"dmdR\":[80,9],\"cmp\":9,\"cmpR\":[80,9],\"mv\":0.5,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":61189.85185069647,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"AICores\":{\"ctor\":\"Material\",\"data\":{\"name\":\"AI Cores\",\"qty\":1000,\"qlt\":0,\"dmd\":85.67893884593008,\"dmdR\":[80,99],\"cmp\":9,\"cmpR\":[80,9],\"mv\":0.8,\"mku\":0.5,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":11921.840021838252,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"RealEstate\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Real Estate\",\"qty\":87460,\"qlt\":0,\"dmd\":41.8221638251185,\"dmdR\":[5,99],\"cmp\":42.82211940297153,\"cmpR\":[25,75],\"mv\":1.5,\"mku\":1.5,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":64545.37058600449,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}}}}},\"Chongqing\":{\"ctor\":\"Warehouse\",\"data\":{\"breakdown\":\"Water: 3.7<br>Energy: 0.7<br>Hardware: 60.0<br>Robots: 500.0<br>AICores: 100.0<br>RealEstate: 0.0<br>\",\"level\":10,\"sizeUsed\":664.4376094900028,\"smartSupplyEnabled\":true,\"smartSupplyConsiderExports\":false,\"smartSupplyStore\":425.520377295623,\"loc\":\"Chongqing\",\"size\":1200,\"materials\":{\"Water\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Water\",\"qty\":73.96015816671434,\"qlt\":0,\"dmd\":69.77486104345407,\"dmdR\":[65,85],\"cmp\":48.042648914760996,\"cmpR\":[40,60],\"mv\":0.2,\"mku\":6,\"buy\":212.76192711933987,\"sll\":0,\"prd\":-212.7601886478115,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":1537.87840612904,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Energy\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Energy\",\"qty\":73.96015816671434,\"qlt\":0,\"dmd\":88.3057475759073,\"dmdR\":[80,99],\"cmp\":84.76874301189062,\"cmpR\":[65,95],\"mv\":0.2,\"mku\":6,\"buy\":212.76192711933987,\"sll\":0,\"prd\":-212.7601886478115,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":2013.9086506118597,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Food\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Food\",\"qty\":0,\"qlt\":80.49584368668982,\"dmd\":77.83399429989564,\"dmdR\":[70,90],\"cmp\":36.42330727052396,\"cmpR\":[35,85],\"mv\":1,\"mku\":3,\"buy\":0,\"sll\":425.520377295623,\"prd\":425.520377295623,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":9658.526112919306,\"sCost\":\"MP\",\"prdman\":[false,0],\"sllman\":[true,\"MAX\"],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Plants\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Plants\",\"qty\":0,\"qlt\":80.49584368668982,\"dmd\":45.89344424765993,\"dmdR\":[20,90],\"cmp\":47.94231708014979,\"cmpR\":[30,70],\"mv\":0.6,\"mku\":3.75,\"buy\":0,\"sll\":425.520377295623,\"prd\":425.520377295623,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":3536.4987975358895,\"sCost\":\"MP\",\"prdman\":[false,0],\"sllman\":[true,\"MAX\"],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Metal\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Metal\",\"qty\":0,\"qlt\":0,\"dmd\":80,\"dmdR\":[75,85],\"cmp\":70,\"cmpR\":[60,80],\"mv\":1,\"mku\":6,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":2650,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Hardware\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Hardware\",\"qty\":1000,\"qlt\":0,\"dmd\":88.45511673403219,\"dmdR\":[80,90],\"cmp\":68.7889451677142,\"cmpR\":[65,95],\"mv\":0.5,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":7567.177277059455,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Chemicals\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Chemicals\",\"qty\":0,\"qlt\":0,\"dmd\":55,\"dmdR\":[40,70],\"cmp\":60,\"cmpR\":[40,80],\"mv\":1.2,\"mku\":2,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":9000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Drugs\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Drugs\",\"qty\":0,\"qlt\":0,\"dmd\":60,\"dmdR\":[45,75],\"cmp\":70,\"cmpR\":[40,99],\"mv\":1.6,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":40000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Robots\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Robots\",\"qty\":1000,\"qlt\":0,\"dmd\":9,\"dmdR\":[80,9],\"cmp\":9,\"cmpR\":[80,9],\"mv\":0.5,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":84989.11658697367,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"AICores\":{\"ctor\":\"Material\",\"data\":{\"name\":\"AI Cores\",\"qty\":1000,\"qlt\":0,\"dmd\":89.29448318649072,\"dmdR\":[80,99],\"cmp\":80,\"cmpR\":[80,9],\"mv\":0.8,\"mku\":0.5,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":9776.84235792267,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"RealEstate\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Real Estate\",\"qty\":88800,\"qlt\":0,\"dmd\":8.26861548229763,\"dmdR\":[5,99],\"cmp\":38.681326438906275,\"cmpR\":[25,75],\"mv\":1.5,\"mku\":1.5,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":68051.53706597022,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}}}}}}}},{\"ctor\":\"Industry\",\"data\":{\"offices\":{\"Aevum\":0,\"Chongqing\":0,\"Sector-12\":{\"ctor\":\"OfficeSpace\",\"data\":{\"loc\":\"Sector-12\",\"cost\":1,\"size\":6,\"comf\":1,\"beau\":1,\"tier\":\"Basic\",\"minEne\":0,\"maxEne\":100,\"minHap\":0,\"maxHap\":100,\"maxMor\":100,\"employees\":[{\"ctor\":\"Employee\",\"data\":{\"name\":\"StTCO4q\",\"mor\":100,\"hap\":85.96257142440075,\"ene\":85.96015743435626,\"int\":68,\"cha\":65.45,\"exp\":115.63900000000145,\"cre\":79.89999999999999,\"eff\":65.45,\"sal\":1068.45,\"pro\":0,\"cyclesUntilRaise\":37,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":1100}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"5R2GLNK\",\"mor\":100,\"hap\":86.0368038385873,\"ene\":86.03543189215712,\"int\":71.10000000000001,\"cha\":45.9,\"exp\":98.58900000000145,\"cre\":65.7,\"eff\":90,\"sal\":999,\"pro\":0,\"cyclesUntilRaise\":37,\"loc\":\"\",\"pos\":\"Engineer\",\"salary\":1100}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"8CyNPkh\",\"mor\":100,\"hap\":85.89590026707761,\"ene\":85.89403857029167,\"int\":65.57000000000001,\"cha\":79,\"exp\":101.48900000000145,\"cre\":48.190000000000005,\"eff\":79,\"sal\":1004.88,\"pro\":0,\"cyclesUntilRaise\":37,\"loc\":\"\",\"pos\":\"Management\",\"salary\":1100}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"oFjuFx7\",\"mor\":100,\"hap\":44.2016317798083,\"ene\":85.90514306983393,\"int\":48.96,\"cha\":96,\"exp\":91.52700000000107,\"cre\":88.32,\"eff\":67.2,\"sal\":1091.52,\"pro\":0,\"cyclesUntilRaise\":211,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":1100}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"QODt7QV\",\"mor\":55.00000000000001,\"hap\":74.86736866059344,\"ene\":67.44926073551099,\"int\":68.25,\"cha\":70.07000000000001,\"exp\":94.59700000000107,\"cre\":91,\"eff\":86.45,\"sal\":1146.6000000000001,\"pro\":0,\"cyclesUntilRaise\":211,\"loc\":\"\",\"pos\":\"Business\",\"salary\":1100}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"afbzLJm\",\"mor\":100,\"hap\":82.81054974591368,\"ene\":49.8248052326799,\"int\":48.5,\"cha\":52.379999999999995,\"exp\":85.39400000000106,\"cre\":80.50999999999999,\"eff\":77.6,\"sal\":948.66,\"pro\":0,\"cyclesUntilRaise\":212,\"loc\":\"\",\"pos\":\"Research & Development\",\"salary\":1100}}],\"employeeProd\":{\"Operations\":450.8532266385499,\"Engineer\":354.7610786600006,\"Business\":67.22284763212213,\"Management\":402.4207558440867,\"Research & Development\":180.03192970648684,\"total\":1455.2898384812463,\"Unassigned\":0}}},\"New Tokyo\":0,\"Ishima\":0,\"Volhaven\":0},\"name\":\"Food Co.\",\"type\":\"Food\",\"sciResearch\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Scientific Research\",\"qty\":2563.8661538950887,\"qlt\":0,\"dmd\":0,\"dmdR\":[0,0],\"cmp\":0,\"cmpR\":[0,0],\"mv\":0,\"mku\":0,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":0,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"researched\":{},\"reqMats\":{\"Food\":0.5,\"Water\":0.5,\"Energy\":0.2},\"prodMats\":[],\"products\":{\"Three Star\":{\"ctor\":\"Product\",\"data\":{\"name\":\"Three Star\",\"dmd\":17.706346257808487,\"cmp\":35.23559999999501,\"mku\":19.46781823838696,\"pCost\":18411.955358020172,\"sCost\":\"MP\",\"fin\":true,\"prog\":0,\"createCity\":\"\",\"designCost\":0,\"advCost\":0,\"rat\":50.803051974760706,\"qlt\":57.578264749166465,\"per\":64.62127665281939,\"dur\":38.582485596264526,\"rel\":48.76568913765358,\"aes\":33.20009045358866,\"fea\":59.27573351969148,\"data\":{\"Aevum\":[0,0.6485965799460731,0.6485965799460731],\"Chongqing\":[0,0.6485965799460731,0.6485965799460731],\"Ishima\":[0,0.6485965799460731,0.6485965799460731],\"New Tokyo\":[0,0.6485965799460731,0.6485965799460731],\"Sector-12\":[0,0.749602713079796,0.749602713079796],\"Volhaven\":[0,0.6485965799460731,0.6485965799460731]},\"loc\":\"\",\"siz\":0.042,\"reqMats\":{\"Food\":0.5,\"Water\":0.5,\"Energy\":0.2},\"prdman\":{\"Aevum\":[false,0],\"Chongqing\":[false,0],\"Ishima\":[false,0],\"New Tokyo\":[false,0],\"Sector-12\":[false,0],\"Volhaven\":[false,0]},\"sllman\":{\"Aevum\":[true,\"MAX\"],\"Chongqing\":[true,\"MAX\"],\"Ishima\":[true,\"MAX\"],\"New Tokyo\":[true,\"MAX\"],\"Sector-12\":[true,\"MAX\"],\"Volhaven\":[true,\"MAX\"]},\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":{\"Aevum\":0,\"Chongqing\":0,\"Ishima\":0,\"New Tokyo\":0,\"Sector-12\":0,\"Volhaven\":0}}},\"Four Star\":{\"ctor\":\"Product\",\"data\":{\"name\":\"Four Star\",\"dmd\":18.548153199796573,\"cmp\":7.701199999999354,\"mku\":19.339389704631415,\"pCost\":18411.955358020172,\"sCost\":\"MP\",\"fin\":true,\"prog\":0,\"createCity\":\"\",\"designCost\":0,\"advCost\":0,\"rat\":50.63538840758762,\"qlt\":57.4179263218807,\"per\":64.53219069978842,\"dur\":38.47868965952608,\"rel\":48.510490511043145,\"aes\":32.97485508159262,\"fea\":59.09051626142694,\"data\":{\"Aevum\":[0,0.6485965799460731,0.6485965799460731],\"Chongqing\":[0,0.6485965799460731,0.6485965799460731],\"Ishima\":[0,0.6485965799460731,0.6485965799460731],\"New Tokyo\":[0,0.6485965799460731,0.6485965799460731],\"Sector-12\":[0,0.749602713079796,0.749602713079796],\"Volhaven\":[0,0.6485965799460731,0.6485965799460731]},\"loc\":\"\",\"siz\":0.042,\"reqMats\":{\"Food\":0.5,\"Water\":0.5,\"Energy\":0.2},\"prdman\":{\"Aevum\":[false,0],\"Chongqing\":[false,0],\"Ishima\":[false,0],\"New Tokyo\":[false,0],\"Sector-12\":[false,0],\"Volhaven\":[false,0]},\"sllman\":{\"Aevum\":[true,\"MAX\"],\"Chongqing\":[true,\"MAX\"],\"Ishima\":[true,\"MAX\"],\"New Tokyo\":[true,\"MAX\"],\"Sector-12\":[true,\"MAX\"],\"Volhaven\":[true,\"MAX\"]},\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":{\"Aevum\":0,\"Chongqing\":0,\"Ishima\":0,\"New Tokyo\":0,\"Sector-12\":0,\"Volhaven\":0}}},\"Five Star\":{\"ctor\":\"Product\",\"data\":{\"name\":\"Five Star\",\"dmd\":19.457891527909176,\"cmp\":39.1791999999856,\"mku\":19.113035660991283,\"pCost\":18411.955358020172,\"sCost\":\"MP\",\"fin\":true,\"prog\":0,\"createCity\":\"\",\"designCost\":0,\"advCost\":0,\"rat\":50.64552022992121,\"qlt\":57.46747599081869,\"per\":64.6961496227594,\"dur\":38.49764081269665,\"rel\":48.39495616569514,\"aes\":32.84261477539227,\"fea\":59.10286731433301,\"data\":{\"Aevum\":[0,0.6485965799460731,0.6485965799460731],\"Chongqing\":[0,0.6485965799460731,0.6485965799460731],\"Ishima\":[0,0.6485965799460731,0.6485965799460731],\"New Tokyo\":[0,0.6485965799460731,0.6485965799460731],\"Sector-12\":[0,0.749602713079796,0.749602713079796],\"Volhaven\":[0,0.6485965799460731,0.6485965799460731]},\"loc\":\"\",\"siz\":0.042,\"reqMats\":{\"Food\":0.5,\"Water\":0.5,\"Energy\":0.2},\"prdman\":{\"Aevum\":[false,0],\"Chongqing\":[false,0],\"Ishima\":[false,0],\"New Tokyo\":[false,0],\"Sector-12\":[false,0],\"Volhaven\":[false,0]},\"sllman\":{\"Aevum\":[true,\"MAX\"],\"Chongqing\":[true,\"MAX\"],\"Ishima\":[true,\"MAX\"],\"New Tokyo\":[true,\"MAX\"],\"Sector-12\":[true,\"MAX\"],\"Volhaven\":[true,\"MAX\"]},\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":{\"Aevum\":0,\"Chongqing\":0,\"Ishima\":0,\"New Tokyo\":0,\"Sector-12\":0,\"Volhaven\":0}}}},\"makesProducts\":true,\"awareness\":132.63839891431553,\"popularity\":35.87328520839093,\"startingCost\":10000000000,\"reFac\":0.05,\"sciFac\":0.12,\"hwFac\":0.15,\"robFac\":0.3,\"aiFac\":0.25,\"advFac\":0.25,\"prodMult\":1.0911768065826186,\"lastCycleRevenue\":\"41410.86016313422\",\"lastCycleExpenses\":\"14540.255934977755\",\"thisCycleRevenue\":\"0\",\"thisCycleExpenses\":\"62591.1\",\"upgrades\":[14,8],\"state\":\"START\",\"newInd\":false,\"warehouses\":{\"Aevum\":0,\"undefined\":0,\"Sector-12\":{\"ctor\":\"Warehouse\",\"data\":{\"breakdown\":\"Water: 0.4<br>Energy: 0.0<br>Food: 0.0<br>RealEstate: 0.0<br>\",\"level\":1,\"sizeUsed\":0.4494664240008807,\"smartSupplyEnabled\":true,\"smartSupplyConsiderExports\":false,\"smartSupplyStore\":2.248808139239388,\"loc\":\"Sector-12\",\"size\":120,\"materials\":{\"Water\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Water\",\"qty\":8.147551226837487,\"qlt\":0,\"dmd\":79.53358437359512,\"dmdR\":[65,85],\"cmp\":54.27245231989641,\"cmpR\":[40,60],\"mv\":0.2,\"mku\":6,\"buy\":1.124425105040585,\"sll\":0,\"prd\":-1.124404069619694,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":1463.48134352168,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Energy\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Energy\",\"qty\":2.2590204907343256,\"qlt\":0,\"dmd\":86.71178252147045,\"dmdR\":[80,99],\"cmp\":78.43593484352893,\"cmpR\":[65,95],\"mv\":0.2,\"mku\":6,\"buy\":0.449770042016234,\"sll\":0,\"prd\":-0.44976162784787754,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":2055.053225159499,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Food\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Food\",\"qty\":0.649955258388768,\"qlt\":0,\"dmd\":76.80793772888562,\"dmdR\":[70,90],\"cmp\":45.52902123793551,\"cmpR\":[35,85],\"mv\":1,\"mku\":3,\"buy\":1.124425105040585,\"sll\":0,\"prd\":-1.124404069619694,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":5079.279509622588,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Plants\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Plants\",\"qty\":0,\"qlt\":0,\"dmd\":70,\"dmdR\":[20,90],\"cmp\":50,\"cmpR\":[30,70],\"mv\":0.6,\"mku\":3.75,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":3000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Metal\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Metal\",\"qty\":0,\"qlt\":0,\"dmd\":80,\"dmdR\":[75,85],\"cmp\":70,\"cmpR\":[60,80],\"mv\":1,\"mku\":6,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":2650,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Hardware\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Hardware\",\"qty\":0,\"qlt\":0,\"dmd\":83.33462525291006,\"dmdR\":[80,90],\"cmp\":68.40134214409332,\"cmpR\":[65,95],\"mv\":0.5,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":8485.649563080164,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Chemicals\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Chemicals\",\"qty\":0,\"qlt\":0,\"dmd\":55,\"dmdR\":[40,70],\"cmp\":60,\"cmpR\":[40,80],\"mv\":1.2,\"mku\":2,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":9000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Drugs\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Drugs\",\"qty\":0,\"qlt\":0,\"dmd\":60,\"dmdR\":[45,75],\"cmp\":70,\"cmpR\":[40,99],\"mv\":1.6,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":40000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Robots\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Robots\",\"qty\":0,\"qlt\":0,\"dmd\":9,\"dmdR\":[80,9],\"cmp\":80,\"cmpR\":[80,9],\"mv\":0.5,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":83206.29357671516,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"AICores\":{\"ctor\":\"Material\",\"data\":{\"name\":\"AI Cores\",\"qty\":0,\"qlt\":0,\"dmd\":92.38840152474165,\"dmdR\":[80,99],\"cmp\":80,\"cmpR\":[80,9],\"mv\":0.8,\"mku\":0.5,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":17322.86254179959,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"RealEstate\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Real Estate\",\"qty\":4960,\"qlt\":0,\"dmd\":88.65446608863182,\"dmdR\":[5,99],\"cmp\":68.79653116150097,\"cmpR\":[25,75],\"mv\":1.5,\"mku\":1.5,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":78282.1153869764,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}}}}},\"New Tokyo\":0,\"Ishima\":0,\"Volhaven\":0}}},{\"ctor\":\"Industry\",\"data\":{\"offices\":{\"Aevum\":0,\"Chongqing\":0,\"Sector-12\":{\"ctor\":\"OfficeSpace\",\"data\":{\"loc\":\"Sector-12\",\"cost\":1,\"size\":6,\"comf\":1,\"beau\":1,\"tier\":\"Basic\",\"minEne\":0,\"maxEne\":100,\"minHap\":0,\"maxHap\":100,\"maxMor\":100,\"employees\":[{\"ctor\":\"Employee\",\"data\":{\"name\":\"VgBnYv7\",\"mor\":100,\"hap\":93.14860509951667,\"ene\":87.34841706300908,\"int\":55,\"cha\":53,\"exp\":105.3180000000007,\"cre\":66,\"eff\":57,\"sal\":954,\"pro\":0,\"cyclesUntilRaise\":294,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":550}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"LZFMTrj\",\"mor\":100,\"hap\":93.04381869616397,\"ene\":71.76178377595477,\"int\":47.85,\"cha\":66.12,\"exp\":75.7350000000007,\"cre\":52.2,\"eff\":45.24,\"sal\":806.49,\"pro\":0,\"cyclesUntilRaise\":295,\"loc\":\"\",\"pos\":\"Engineer\",\"salary\":550}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"jfvw9LP\",\"mor\":100,\"hap\":93.06983002756394,\"ene\":93.06716829799107,\"int\":53.76,\"cha\":71.03999999999999,\"exp\":87.4350000000007,\"cre\":60.48,\"eff\":55.68,\"sal\":930.24,\"pro\":0,\"cyclesUntilRaise\":295,\"loc\":\"\",\"pos\":\"Research & Development\",\"salary\":550}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"8i7549j\",\"mor\":100,\"hap\":93.11579170122141,\"ene\":93.11384169568909,\"int\":77.28,\"cha\":75.6,\"exp\":67.87200000000068,\"cre\":52.08,\"eff\":63,\"sal\":952.56,\"pro\":0,\"cyclesUntilRaise\":296,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":550}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"6tdXxHA\",\"mor\":100,\"hap\":93.1942305251793,\"ene\":93.19329908183981,\"int\":75.60000000000001,\"cha\":86.4,\"exp\":76.8120000000007,\"cre\":46.800000000000004,\"eff\":70.2,\"sal\":1012.5,\"pro\":0,\"cyclesUntilRaise\":296,\"loc\":\"\",\"pos\":\"Business\",\"salary\":550}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"HprdtIX\",\"mor\":100,\"hap\":93.00435807230164,\"ene\":93.00366863134394,\"int\":66.36,\"cha\":79.8,\"exp\":75.43200000000068,\"cre\":51.239999999999995,\"eff\":63,\"sal\":952.56,\"pro\":0,\"cyclesUntilRaise\":296,\"loc\":\"\",\"pos\":\"Management\",\"salary\":550}}],\"employeeProd\":{\"Operations\":591.3494072389482,\"Engineer\":208.9941395313099,\"Business\":235.96140466369292,\"Management\":433.5931085638473,\"Research & Development\":342.807635373583,\"total\":1812.7056953713814,\"Unassigned\":0}}},\"New Tokyo\":0,\"Ishima\":0,\"Volhaven\":0},\"name\":\"Tobac Co.\",\"type\":\"Tobacco\",\"sciResearch\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Scientific Research\",\"qty\":2332.35323637906,\"qlt\":0,\"dmd\":0,\"dmdR\":[0,0],\"cmp\":0,\"cmpR\":[0,0],\"mv\":0,\"mku\":0,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":0,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"researched\":{},\"reqMats\":{\"Plants\":1,\"Water\":0.2},\"prodMats\":[],\"products\":{\"Product 1\":{\"ctor\":\"Product\",\"data\":{\"name\":\"Product 1\",\"dmd\":22.854666565128646,\"cmp\":11.78280000000173,\"mku\":0,\"pCost\":14004.065371632722,\"sCost\":15000,\"fin\":true,\"prog\":0,\"createCity\":\"\",\"designCost\":0,\"advCost\":0,\"rat\":26.809652436748856,\"qlt\":30.474483431609023,\"per\":27.741912373706672,\"dur\":38.21131834550948,\"rel\":16.732051233102098,\"aes\":18.15592574191464,\"fea\":24.12318584691873,\"data\":{\"Aevum\":[0,0.7409517640406331,0.7409517640406331],\"Chongqing\":[0,0.7409517640406331,0.7409517640406331],\"Ishima\":[0,0.7409517640406331,0.7409517640406331],\"New Tokyo\":[0,0.7409517640406331,0.7409517640406331],\"Sector-12\":[0,0.7138506037210244,0.7138506037210244],\"Volhaven\":[0,0.7409517640406331,0.7409517640406331]},\"loc\":\"\",\"siz\":0.060000000000000005,\"reqMats\":{\"Plants\":1,\"Water\":0.2},\"prdman\":{\"Aevum\":[false,0],\"Chongqing\":[false,0],\"Ishima\":[false,0],\"New Tokyo\":[false,0],\"Sector-12\":[false,0],\"Volhaven\":[false,0]},\"sllman\":{\"Aevum\":[true,\"MAX\"],\"Chongqing\":[true,\"MAX\"],\"Ishima\":[true,\"MAX\"],\"New Tokyo\":[true,\"MAX\"],\"Sector-12\":[true,\"MAX\"],\"Volhaven\":[true,\"MAX\"]},\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":{\"Aevum\":0,\"Chongqing\":0,\"Ishima\":0,\"New Tokyo\":0,\"Sector-12\":0,\"Volhaven\":0}}}},\"makesProducts\":true,\"awareness\":48.872000000003,\"popularity\":11.607200000001763,\"startingCost\":20000000000,\"reFac\":0.15,\"sciFac\":0.75,\"hwFac\":0.15,\"robFac\":0.2,\"aiFac\":0.15,\"advFac\":0.2,\"prodMult\":1,\"lastCycleRevenue\":\"10707.759055815365\",\"lastCycleExpenses\":\"7607.725849732781\",\"thisCycleRevenue\":\"0\",\"thisCycleExpenses\":\"56083.5\",\"upgrades\":[9,0],\"state\":\"START\",\"newInd\":false,\"warehouses\":{\"Aevum\":0,\"undefined\":0,\"Sector-12\":{\"ctor\":\"Warehouse\",\"data\":{\"breakdown\":\"Water: 0.0<br>Plants: 0.0<br>\",\"level\":1,\"sizeUsed\":0.01765071091148035,\"smartSupplyEnabled\":true,\"smartSupplyConsiderExports\":false,\"smartSupplyStore\":0.7138506037210244,\"loc\":\"Sector-12\",\"size\":120,\"materials\":{\"Water\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Water\",\"qty\":0.05883570303821117,\"qlt\":0,\"dmd\":76.22123481855941,\"dmdR\":[65,85],\"cmp\":45.792150325962794,\"cmpR\":[40,60],\"mv\":0.2,\"mku\":6,\"buy\":0.14277110229596676,\"sll\":0,\"prd\":-0.14277012074420486,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":1559.3446218592178,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Energy\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Energy\",\"qty\":0,\"qlt\":0,\"dmd\":90,\"dmdR\":[80,99],\"cmp\":80,\"cmpR\":[65,95],\"mv\":0.2,\"mku\":6,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":2000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Food\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Food\",\"qty\":0,\"qlt\":0,\"dmd\":80,\"dmdR\":[70,90],\"cmp\":60,\"cmpR\":[35,85],\"mv\":1,\"mku\":3,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":5000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Plants\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Plants\",\"qty\":0.2941785151913958,\"qlt\":0,\"dmd\":64.11324275912116,\"dmdR\":[20,90],\"cmp\":67.02800021311225,\"cmpR\":[30,70],\"mv\":0.6,\"mku\":3.75,\"buy\":0.7138555114798338,\"sll\":0,\"prd\":-0.7138506037210244,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":2479.0332082914106,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Metal\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Metal\",\"qty\":0,\"qlt\":0,\"dmd\":80,\"dmdR\":[75,85],\"cmp\":70,\"cmpR\":[60,80],\"mv\":1,\"mku\":6,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":2650,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Hardware\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Hardware\",\"qty\":0,\"qlt\":0,\"dmd\":80.46318471530903,\"dmdR\":[80,90],\"cmp\":73.30721717564617,\"cmpR\":[65,95],\"mv\":0.5,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":8660.628953651541,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Chemicals\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Chemicals\",\"qty\":0,\"qlt\":0,\"dmd\":55,\"dmdR\":[40,70],\"cmp\":60,\"cmpR\":[40,80],\"mv\":1.2,\"mku\":2,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":9000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Drugs\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Drugs\",\"qty\":0,\"qlt\":0,\"dmd\":60,\"dmdR\":[45,75],\"cmp\":70,\"cmpR\":[40,99],\"mv\":1.6,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":40000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Robots\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Robots\",\"qty\":0,\"qlt\":0,\"dmd\":9,\"dmdR\":[80,9],\"cmp\":80,\"cmpR\":[80,9],\"mv\":0.5,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":62203.0634571949,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"AICores\":{\"ctor\":\"Material\",\"data\":{\"name\":\"AI Cores\",\"qty\":0,\"qlt\":0,\"dmd\":85.82057718829815,\"dmdR\":[80,99],\"cmp\":9,\"cmpR\":[80,9],\"mv\":0.8,\"mku\":0.5,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":16873.098913286743,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"RealEstate\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Real Estate\",\"qty\":0,\"qlt\":0,\"dmd\":46.15579187175824,\"dmdR\":[5,99],\"cmp\":45.24214284912032,\"cmpR\":[25,75],\"mv\":1.5,\"mku\":1.5,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":84349.4030517148,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}}}}},\"New Tokyo\":0,\"Ishima\":0,\"Volhaven\":0}}},{\"ctor\":\"Industry\",\"data\":{\"offices\":{\"Aevum\":{\"ctor\":\"OfficeSpace\",\"data\":{\"loc\":\"Aevum\",\"cost\":1,\"size\":12,\"comf\":1,\"beau\":1,\"tier\":\"Basic\",\"minEne\":0,\"maxEne\":100,\"minHap\":0,\"maxHap\":100,\"maxMor\":100,\"employees\":[{\"ctor\":\"Employee\",\"data\":{\"name\":\"TOB3XXJ\",\"mor\":100,\"hap\":99.55159261676376,\"ene\":99.55273647389473,\"int\":73.32,\"cha\":74.25999999999999,\"exp\":55.11600000000006,\"cre\":86.47999999999999,\"eff\":93.05999999999999,\"sal\":1142.1,\"pro\":0,\"cyclesUntilRaise\":288,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"UShFPi0\",\"mor\":100,\"hap\":99.55998601370557,\"ene\":99.56179355514492,\"int\":77.60000000000001,\"cha\":41.6,\"exp\":53.53300000000006,\"cre\":60,\"eff\":46.400000000000006,\"sal\":832.8000000000001,\"pro\":0,\"cyclesUntilRaise\":289,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"dKICLvp\",\"mor\":100,\"hap\":99.55438046973994,\"ene\":99.55697580830854,\"int\":81,\"cha\":83,\"exp\":98.53300000000006,\"cre\":51,\"eff\":88,\"sal\":1200,\"pro\":0,\"cyclesUntilRaise\":289,\"loc\":\"\",\"pos\":\"Engineer\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"rxClgih\",\"mor\":100,\"hap\":99.55338150867165,\"ene\":99.5554978310216,\"int\":54.4,\"cha\":44.199999999999996,\"exp\":68.68300000000005,\"cre\":76.5,\"eff\":54.4,\"sal\":889.9499999999999,\"pro\":0,\"cyclesUntilRaise\":289,\"loc\":\"\",\"pos\":\"Business\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"9bIymBT\",\"mor\":100,\"hap\":99.5584053607095,\"ene\":99.56133481317653,\"int\":68.73,\"cha\":64.78,\"exp\":77.37300000000006,\"cre\":70.31,\"eff\":56.09,\"sal\":1007.25,\"pro\":0,\"cyclesUntilRaise\":289,\"loc\":\"\",\"pos\":\"Management\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"gNc6t6E\",\"mor\":100,\"hap\":99.561751946504,\"ene\":99.56214517339592,\"int\":41,\"cha\":72.97999999999999,\"exp\":44.99300000000006,\"cre\":74.61999999999999,\"eff\":75.44,\"sal\":922.5,\"pro\":0,\"cyclesUntilRaise\":289,\"loc\":\"\",\"pos\":\"Research & Development\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"OMb8WjD\",\"mor\":99,\"hap\":99.57627568352898,\"ene\":78.2553423025077,\"int\":82.77000000000001,\"cha\":51.150000000000006,\"exp\":92.55300000000005,\"cre\":55.800000000000004,\"eff\":77.19,\"sal\":1074.15,\"pro\":0,\"cyclesUntilRaise\":329,\"loc\":\"\",\"pos\":\"Research & Development\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"8CLz5wQ\",\"mor\":100,\"hap\":84.65587092679662,\"ene\":84.46381924665691,\"int\":85,\"cha\":48.449999999999996,\"exp\":49.86300000000005,\"cre\":65.45,\"eff\":50.15,\"sal\":892.5,\"pro\":0,\"cyclesUntilRaise\":329,\"loc\":\"\",\"pos\":\"Management\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"GDxi6oa\",\"mor\":100,\"hap\":92.17600051375557,\"ene\":99.56859914692325,\"int\":60.75000000000001,\"cha\":63.18000000000001,\"exp\":72.69300000000005,\"cre\":66.42,\"eff\":50.220000000000006,\"sal\":935.5500000000001,\"pro\":0,\"cyclesUntilRaise\":329,\"loc\":\"\",\"pos\":\"Management\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"JWYZ5Sp\",\"mor\":93,\"hap\":99.58872094786038,\"ene\":99.58999977221528,\"int\":38,\"cha\":65.36,\"exp\":44.733000000000054,\"cre\":51.68,\"eff\":57.76,\"sal\":768.36,\"pro\":0,\"cyclesUntilRaise\":329,\"loc\":\"\",\"pos\":\"Management\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"96wpfOH\",\"mor\":100,\"hap\":99.57159905710539,\"ene\":96.88792751370123,\"int\":79.53999999999999,\"cha\":60.14,\"exp\":85.80300000000005,\"cre\":79.53999999999999,\"eff\":52.379999999999995,\"sal\":1067.97,\"pro\":0,\"cyclesUntilRaise\":329,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"2Vcvswz\",\"mor\":90,\"hap\":99.55567672630742,\"ene\":99.55597435330908,\"int\":52.919999999999995,\"cha\":80.64,\"exp\":77.85300000000005,\"cre\":42.839999999999996,\"eff\":51.239999999999995,\"sal\":912.24,\"pro\":0,\"cyclesUntilRaise\":329,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":0}}],\"employeeProd\":{\"Operations\":1340.1374640695437,\"Engineer\":497.94487676672867,\"Business\":164.7832100946801,\"Management\":1437.027692071143,\"Research & Development\":751.2358547773306,\"total\":4191.129097779427,\"Unassigned\":0}}},\"Chongqing\":{\"ctor\":\"OfficeSpace\",\"data\":{\"loc\":\"Chongqing\",\"cost\":1,\"size\":12,\"comf\":1,\"beau\":1,\"tier\":\"Basic\",\"minEne\":0,\"maxEne\":100,\"minHap\":0,\"maxHap\":100,\"maxMor\":100,\"employees\":[{\"ctor\":\"Employee\",\"data\":{\"name\":\"VTIsElY\",\"mor\":100,\"hap\":99.59722745254798,\"ene\":99.59722745254798,\"int\":82.72,\"cha\":67.76,\"exp\":56.964000000000055,\"cre\":58.96,\"eff\":49.28,\"sal\":942.48,\"pro\":0,\"cyclesUntilRaise\":292,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"CDsCxIa\",\"mor\":100,\"hap\":99.55322387228932,\"ene\":99.55322387228932,\"int\":83.7,\"cha\":81,\"exp\":79.82400000000005,\"cre\":51.300000000000004,\"eff\":80.10000000000001,\"sal\":1123.2,\"pro\":0,\"cyclesUntilRaise\":292,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"AujS1Rt\",\"mor\":100,\"hap\":99.56153824417788,\"ene\":99.56153824417788,\"int\":78.85,\"cha\":81.33999999999999,\"exp\":74.56400000000005,\"cre\":58.93,\"eff\":82.17,\"sal\":1122.99,\"pro\":0,\"cyclesUntilRaise\":292,\"loc\":\"\",\"pos\":\"Engineer\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"vy4QFl5\",\"mor\":100,\"hap\":99.56862789512061,\"ene\":99.56862789512061,\"int\":47.04,\"cha\":81.48,\"exp\":83.00400000000006,\"cre\":84,\"eff\":66.36,\"sal\":1081.08,\"pro\":0,\"cyclesUntilRaise\":292,\"loc\":\"\",\"pos\":\"Business\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"xtfaR8v\",\"mor\":100,\"hap\":99.54495496177736,\"ene\":99.54495496177736,\"int\":77.6,\"cha\":78.57,\"exp\":55.84400000000006,\"cre\":96.03,\"eff\":69.84,\"sal\":1129.08,\"pro\":0,\"cyclesUntilRaise\":292,\"loc\":\"\",\"pos\":\"Management\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"fsecKe3\",\"mor\":100,\"hap\":99.56147586584083,\"ene\":99.56147586584083,\"int\":79.2,\"cha\":67.32,\"exp\":78.74400000000006,\"cre\":98.01,\"eff\":93.06,\"sal\":1244.43,\"pro\":0,\"cyclesUntilRaise\":292,\"loc\":\"\",\"pos\":\"Research & Development\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"qwMBT5V\",\"mor\":87,\"hap\":99.54951622688465,\"ene\":93.5830221468555,\"int\":89.1,\"cha\":81.17999999999999,\"exp\":61.800000000000054,\"cre\":90.09,\"eff\":60.39,\"sal\":1143.45,\"pro\":0,\"cyclesUntilRaise\":330,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"N4yvYOr\",\"mor\":100,\"hap\":99.57696080774124,\"ene\":91.99726781727531,\"int\":67.45,\"cha\":81.7,\"exp\":63.16000000000005,\"cre\":90.25,\"eff\":62.699999999999996,\"sal\":1091.55,\"pro\":0,\"cyclesUntilRaise\":330,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"lY3CvjD\",\"mor\":100,\"hap\":99.55777633882879,\"ene\":87.07313139312596,\"int\":88.2,\"cha\":79.2,\"exp\":61.71000000000006,\"cre\":72.9,\"eff\":72,\"sal\":1117.8,\"pro\":0,\"cyclesUntilRaise\":330,\"loc\":\"\",\"pos\":\"Management\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"8SVFSdG\",\"mor\":100,\"hap\":83.15707423294577,\"ene\":99.57613370667896,\"int\":48.190000000000005,\"cha\":73.47,\"exp\":61.45000000000006,\"cre\":73.47,\"eff\":56.09,\"sal\":933.7800000000001,\"pro\":0,\"cyclesUntilRaise\":330,\"loc\":\"\",\"pos\":\"Management\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"NJZlxnh\",\"mor\":87,\"hap\":99.55046981901067,\"ene\":99.55046981901067,\"int\":50.96,\"cha\":63.7,\"exp\":56.010000000000055,\"cre\":53.690000000000005,\"eff\":74.62,\"sal\":892.71,\"pro\":0,\"cyclesUntilRaise\":330,\"loc\":\"\",\"pos\":\"Management\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"D8k003g\",\"mor\":100,\"hap\":99.58343055320901,\"ene\":99.58343055320901,\"int\":92.07000000000001,\"cha\":58.59,\"exp\":72.08700000000006,\"cre\":79.05,\"eff\":48.36,\"sal\":1046.25,\"pro\":0,\"cyclesUntilRaise\":331,\"loc\":\"\",\"pos\":\"Research & Development\",\"salary\":0}}],\"employeeProd\":{\"Operations\":1367.840829094885,\"Engineer\":446.2151478880326,\"Business\":240.0098529638038,\"Management\":1692.032960608738,\"Research & Development\":1085.252987635294,\"total\":4831.351778190754,\"Unassigned\":0}}},\"Sector-12\":{\"ctor\":\"OfficeSpace\",\"data\":{\"loc\":\"Sector-12\",\"cost\":1,\"size\":12,\"comf\":1,\"beau\":1,\"tier\":\"Basic\",\"minEne\":0,\"maxEne\":100,\"minHap\":0,\"maxHap\":100,\"maxMor\":100,\"employees\":[{\"ctor\":\"Employee\",\"data\":{\"name\":\"9NIiUx3\",\"mor\":100,\"hap\":99.59414201158089,\"ene\":99.59414201158089,\"int\":71.89,\"cha\":79.17,\"exp\":70.74400000000006,\"cre\":67.34,\"eff\":81.9,\"sal\":1108.38,\"pro\":0,\"cyclesUntilRaise\":272,\"loc\":\"\",\"pos\":\"Management\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"aqNqaff\",\"mor\":100,\"hap\":99.5598578076851,\"ene\":99.5598578076851,\"int\":57.12,\"cha\":76.44,\"exp\":44.424000000000056,\"cre\":49.559999999999995,\"eff\":54.6,\"sal\":841.68,\"pro\":0,\"cyclesUntilRaise\":272,\"loc\":\"\",\"pos\":\"Research & Development\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"tfEThkL\",\"mor\":100,\"hap\":99.58382899123654,\"ene\":99.58382899123654,\"int\":96.03,\"cha\":81.48,\"exp\":80.15400000000005,\"cre\":82.45,\"eff\":96.03,\"sal\":1303.68,\"pro\":0,\"cyclesUntilRaise\":272,\"loc\":\"\",\"pos\":\"Business\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"gQf2coO\",\"mor\":100,\"hap\":99.55805653182715,\"ene\":99.55805653182715,\"int\":79.38000000000001,\"cha\":52.650000000000006,\"exp\":55.85400000000006,\"cre\":41.31,\"eff\":47.790000000000006,\"sal\":826.2,\"pro\":0,\"cyclesUntilRaise\":272,\"loc\":\"\",\"pos\":\"Engineer\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"9AmN0oZ\",\"mor\":100,\"hap\":99.56453121638741,\"ene\":99.56453121638741,\"int\":54.779999999999994,\"cha\":49.8,\"exp\":56.364000000000054,\"cre\":73.86999999999999,\"eff\":77.19,\"sal\":931.26,\"pro\":0,\"cyclesUntilRaise\":272,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"hWj2UYh\",\"mor\":100,\"hap\":99.5826605132648,\"ene\":99.5826605132648,\"int\":59.16,\"cha\":66.12,\"exp\":77.27400000000006,\"cre\":81.78,\"eff\":80.04,\"sal\":1088.37,\"pro\":0,\"cyclesUntilRaise\":272,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"5AqErRd\",\"mor\":91.5,\"hap\":99.56796989586022,\"ene\":99.56796989586022,\"int\":57,\"cha\":72.2,\"exp\":87.85400000000006,\"cre\":76.95,\"eff\":67.45,\"sal\":1080.1499999999999,\"pro\":0,\"cyclesUntilRaise\":332,\"loc\":\"\",\"pos\":\"Research & Development\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"AvgFvsE\",\"mor\":100,\"hap\":99.55845737131158,\"ene\":99.55845737131158,\"int\":68.4,\"cha\":54.9,\"exp\":53.604000000000056,\"cre\":77.4,\"eff\":84.60000000000001,\"sal\":1012.5,\"pro\":0,\"cyclesUntilRaise\":332,\"loc\":\"\",\"pos\":\"Management\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"lxDkYJY\",\"mor\":76.5,\"hap\":92.15418985226465,\"ene\":79.38483198479878,\"int\":48,\"cha\":69.12,\"exp\":93.56400000000005,\"cre\":94.08,\"eff\":57.599999999999994,\"sal\":1082.8799999999999,\"pro\":0,\"cyclesUntilRaise\":332,\"loc\":\"\",\"pos\":\"Management\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"81QkfUa\",\"mor\":87,\"hap\":84.67646330059848,\"ene\":99.58129334180732,\"int\":49.14,\"cha\":65.52,\"exp\":85.12400000000005,\"cre\":88.27,\"eff\":54.6,\"sal\":1023.75,\"pro\":0,\"cyclesUntilRaise\":332,\"loc\":\"\",\"pos\":\"Management\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"5JY0sGb\",\"mor\":100,\"hap\":99.55968869799791,\"ene\":99.55968869799791,\"int\":81.17999999999999,\"cha\":77.08,\"exp\":45.68400000000005,\"cre\":44.279999999999994,\"eff\":70.52,\"sal\":952.02,\"pro\":0,\"cyclesUntilRaise\":332,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"v3RKbrT\",\"mor\":100,\"hap\":99.54354136912804,\"ene\":99.54354136912804,\"int\":70.98,\"cha\":63.7,\"exp\":47.81400000000006,\"cre\":87.36,\"eff\":55.510000000000005,\"sal\":971.88,\"pro\":0,\"cyclesUntilRaise\":332,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":0}}],\"employeeProd\":{\"Operations\":1410.481396005505,\"Engineer\":345.57612900071604,\"Business\":277.53644645151155,\"Management\":1543.150101936671,\"Research & Development\":753.3259673645825,\"total\":4330.070040758987,\"Unassigned\":0}}},\"New Tokyo\":{\"ctor\":\"OfficeSpace\",\"data\":{\"loc\":\"New Tokyo\",\"cost\":1,\"size\":12,\"comf\":1,\"beau\":1,\"tier\":\"Basic\",\"minEne\":0,\"maxEne\":100,\"minHap\":0,\"maxHap\":100,\"maxMor\":100,\"employees\":[{\"ctor\":\"Employee\",\"data\":{\"name\":\"ckyMc5h\",\"mor\":100,\"hap\":99.57170098057252,\"ene\":99.57363296126317,\"int\":80.96,\"cha\":65.12,\"exp\":81.58300000000006,\"cre\":60.72,\"eff\":66,\"sal\":1058.64,\"pro\":0,\"cyclesUntilRaise\":299,\"loc\":\"\",\"pos\":\"Engineer\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"vBI0bRP\",\"mor\":100,\"hap\":99.54763734740143,\"ene\":99.55047339540695,\"int\":80.08,\"cha\":84.63000000000001,\"exp\":84.31300000000006,\"cre\":69.16,\"eff\":72.8,\"sal\":1168.44,\"pro\":0,\"cyclesUntilRaise\":299,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"EPOrlhX\",\"mor\":100,\"hap\":99.55396880020216,\"ene\":99.55654145503583,\"int\":83.3,\"cha\":73.95,\"exp\":86.50300000000006,\"cre\":82.45,\"eff\":68.85,\"sal\":1180.6499999999999,\"pro\":0,\"cyclesUntilRaise\":299,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"XlHfPbM\",\"mor\":100,\"hap\":99.5600517334459,\"ene\":99.56271513570884,\"int\":61.49999999999999,\"cha\":67.24,\"exp\":58.083000000000055,\"cre\":50.839999999999996,\"eff\":45.919999999999995,\"sal\":846.2399999999999,\"pro\":0,\"cyclesUntilRaise\":299,\"loc\":\"\",\"pos\":\"Business\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"L0tPyrL\",\"mor\":100,\"hap\":99.5595240407684,\"ene\":99.56198799635412,\"int\":59,\"cha\":54,\"exp\":96.50300000000006,\"cre\":89,\"eff\":66,\"sal\":1089,\"pro\":0,\"cyclesUntilRaise\":299,\"loc\":\"\",\"pos\":\"Management\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"9hcfolB\",\"mor\":100,\"hap\":99.57812667181814,\"ene\":99.57942737510733,\"int\":54.72,\"cha\":72,\"exp\":61.02300000000005,\"cre\":76.8,\"eff\":69.12,\"sal\":996.48,\"pro\":0,\"cyclesUntilRaise\":299,\"loc\":\"\",\"pos\":\"Research & Development\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"rplfTgJ\",\"mor\":78,\"hap\":99.57764378751793,\"ene\":99.57820896056229,\"int\":81.7,\"cha\":51.3,\"exp\":66.00100000000005,\"cre\":93.1,\"eff\":74.1,\"sal\":1094.3999999999999,\"pro\":0,\"cyclesUntilRaise\":333,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"xo7pJZw\",\"mor\":100,\"hap\":99.58501395224937,\"ene\":99.58726756264304,\"int\":48.36,\"cha\":73.32000000000001,\"exp\":63.80100000000006,\"cre\":46.800000000000004,\"eff\":41.34,\"sal\":816.6600000000001,\"pro\":0,\"cyclesUntilRaise\":333,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"vX04ptC\",\"mor\":100,\"hap\":99.56849413440973,\"ene\":99.57056738839391,\"int\":65,\"cha\":86,\"exp\":96.40100000000005,\"cre\":65,\"eff\":93,\"sal\":1212,\"pro\":0,\"cyclesUntilRaise\":333,\"loc\":\"\",\"pos\":\"Management\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"5HysTIN\",\"mor\":100,\"hap\":87.72162770856147,\"ene\":84.68634506738375,\"int\":56.88,\"cha\":53.72,\"exp\":74.08100000000006,\"cre\":53.72,\"eff\":63.99,\"sal\":902.97,\"pro\":0,\"cyclesUntilRaise\":333,\"loc\":\"\",\"pos\":\"Management\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"sl1wSKC\",\"mor\":100,\"hap\":99.57970982011516,\"ene\":99.58173361179556,\"int\":66.99,\"cha\":51.33,\"exp\":55.34100000000005,\"cre\":80.91,\"eff\":62.64,\"sal\":947.43,\"pro\":0,\"cyclesUntilRaise\":333,\"loc\":\"\",\"pos\":\"Management\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"4UrHh4L\",\"mor\":100,\"hap\":92.15942579461253,\"ene\":96.58905249479906,\"int\":48.64,\"cha\":44.84,\"exp\":62.20100000000005,\"cre\":60.04,\"eff\":52.44,\"sal\":800.28,\"pro\":0,\"cyclesUntilRaise\":333,\"loc\":\"\",\"pos\":\"Research & Development\",\"salary\":0}}],\"employeeProd\":{\"Operations\":1384.4002833660002,\"Engineer\":425.65710039517035,\"Business\":210.8595289196045,\"Management\":1691.9194328338094,\"Research & Development\":733.8730183705827,\"total\":4446.7093638851675,\"Unassigned\":0}}},\"Ishima\":{\"ctor\":\"OfficeSpace\",\"data\":{\"loc\":\"Ishima\",\"cost\":1,\"size\":12,\"comf\":1,\"beau\":1,\"tier\":\"Basic\",\"minEne\":0,\"maxEne\":100,\"minHap\":0,\"maxHap\":100,\"maxMor\":100,\"employees\":[{\"ctor\":\"Employee\",\"data\":{\"name\":\"woJhNpO\",\"mor\":100,\"hap\":99.56739390148635,\"ene\":99.56780384832355,\"int\":81.48,\"cha\":46.199999999999996,\"exp\":74.57700000000006,\"cre\":43.68,\"eff\":73.92,\"sal\":955.0799999999999,\"pro\":0,\"cyclesUntilRaise\":301,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"nczBfEY\",\"mor\":100,\"hap\":99.60503671850269,\"ene\":99.60751895404006,\"int\":68.88,\"cha\":83.16,\"exp\":76.25700000000005,\"cre\":57.12,\"eff\":61.32,\"sal\":1035.72,\"pro\":0,\"cyclesUntilRaise\":301,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"znUD4ju\",\"mor\":100,\"hap\":99.56854760625524,\"ene\":99.56896303696179,\"int\":67.76,\"cha\":41.58,\"exp\":54.62700000000006,\"cre\":76.23,\"eff\":48.51,\"sal\":861.63,\"pro\":0,\"cyclesUntilRaise\":301,\"loc\":\"\",\"pos\":\"Engineer\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"8RM4oj0\",\"mor\":100,\"hap\":99.56984843517536,\"ene\":99.57271649468154,\"int\":81.7,\"cha\":76.95,\"exp\":55.647000000000055,\"cre\":51.3,\"eff\":57.949999999999996,\"sal\":966.15,\"pro\":0,\"cyclesUntilRaise\":301,\"loc\":\"\",\"pos\":\"Business\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"WY7t5bJ\",\"mor\":100,\"hap\":99.58029914616776,\"ene\":99.58185894433767,\"int\":63.08,\"cha\":41.8,\"exp\":43.297000000000054,\"cre\":47.88,\"eff\":65.36,\"sal\":779.76,\"pro\":0,\"cyclesUntilRaise\":301,\"loc\":\"\",\"pos\":\"Management\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"nUsAVlL\",\"mor\":100,\"hap\":99.58106294772804,\"ene\":99.5839077107567,\"int\":93.12,\"cha\":54.32,\"exp\":72.30700000000006,\"cre\":59.17,\"eff\":69.84,\"sal\":1041.78,\"pro\":0,\"cyclesUntilRaise\":301,\"loc\":\"\",\"pos\":\"Research & Development\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"PGwkxH3\",\"mor\":100,\"hap\":99.55785913310139,\"ene\":99.55986156240577,\"int\":69.7,\"cha\":71.39999999999999,\"exp\":50.69800000000005,\"cre\":80.75,\"eff\":63.75,\"sal\":1004.6999999999999,\"pro\":0,\"cyclesUntilRaise\":334,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"KWWHpQu\",\"mor\":100,\"hap\":99.55428969711417,\"ene\":99.5562924092189,\"int\":58.93,\"cha\":42.33,\"exp\":69.45500000000006,\"cre\":44.82,\"eff\":61.419999999999995,\"sal\":826.68,\"pro\":0,\"cyclesUntilRaise\":335,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"ONyUhjg\",\"mor\":97.5,\"hap\":99.5716118225263,\"ene\":99.57206557870013,\"int\":46.02,\"cha\":67.08,\"exp\":52.095000000000056,\"cre\":62.400000000000006,\"eff\":68.64,\"sal\":884.52,\"pro\":0,\"cyclesUntilRaise\":335,\"loc\":\"\",\"pos\":\"Management\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"1UqzNh2\",\"mor\":100,\"hap\":74.22537021794221,\"ene\":99.60040838091389,\"int\":45.65,\"cha\":52.29,\"exp\":70.28500000000005,\"cre\":62.25,\"eff\":68.06,\"sal\":891.42,\"pro\":0,\"cyclesUntilRaise\":335,\"loc\":\"\",\"pos\":\"Management\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"TXWNOm7\",\"mor\":100,\"hap\":99.56536485428843,\"ene\":99.56818287309403,\"int\":44.800000000000004,\"cha\":62.400000000000006,\"exp\":63.79500000000006,\"cre\":51.2,\"eff\":66.4,\"sal\":861.6,\"pro\":0,\"cyclesUntilRaise\":335,\"loc\":\"\",\"pos\":\"Management\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"zWEmwBy\",\"mor\":87,\"hap\":99.57590766518977,\"ene\":99.57618753803413,\"int\":46.36,\"cha\":68.4,\"exp\":75.11500000000005,\"cre\":72.2,\"eff\":47.88,\"sal\":925.6800000000001,\"pro\":0,\"cyclesUntilRaise\":335,\"loc\":\"\",\"pos\":\"Research & Development\",\"salary\":0}}],\"employeeProd\":{\"Operations\":1367.1788357566631,\"Engineer\":320.01841765222605,\"Business\":244.96946073087554,\"Management\":1455.6264806625227,\"Research & Development\":834.4974493786762,\"total\":4222.290644180964,\"Unassigned\":0}}},\"Volhaven\":{\"ctor\":\"OfficeSpace\",\"data\":{\"loc\":\"Volhaven\",\"cost\":1,\"size\":12,\"comf\":1,\"beau\":1,\"tier\":\"Basic\",\"minEne\":0,\"maxEne\":100,\"minHap\":0,\"maxHap\":100,\"maxMor\":100,\"employees\":[{\"ctor\":\"Employee\",\"data\":{\"name\":\"9Nj4DzF\",\"mor\":100,\"hap\":99.56787447227026,\"ene\":99.56918154772147,\"int\":79.21000000000001,\"cha\":71.2,\"exp\":65.63700000000006,\"cre\":89,\"eff\":53.4,\"sal\":1070.67,\"pro\":0,\"cyclesUntilRaise\":281,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"7ywpBun\",\"mor\":100,\"hap\":99.56891417750766,\"ene\":99.57056624267192,\"int\":49.410000000000004,\"cha\":51.03,\"exp\":53.39700000000006,\"cre\":68.04,\"eff\":72.9,\"sal\":879.6600000000001,\"pro\":0,\"cyclesUntilRaise\":281,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"JF8nRRj\",\"mor\":100,\"hap\":99.56164376149142,\"ene\":99.56230159490683,\"int\":48.96,\"cha\":63.36,\"exp\":91.79700000000005,\"cre\":61.44,\"eff\":77.75999999999999,\"sal\":1025.28,\"pro\":0,\"cyclesUntilRaise\":281,\"loc\":\"\",\"pos\":\"Engineer\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"M0fPZsE\",\"mor\":100,\"hap\":99.58070086123529,\"ene\":99.58097031692746,\"int\":76.63,\"cha\":66.92999999999999,\"exp\":58.787000000000056,\"cre\":62.08,\"eff\":89.24,\"sal\":1056.33,\"pro\":0,\"cyclesUntilRaise\":281,\"loc\":\"\",\"pos\":\"Business\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"Qf80nij\",\"mor\":100,\"hap\":99.58616310110774,\"ene\":99.58638189134514,\"int\":76.26,\"cha\":83.7,\"exp\":52.707000000000065,\"cre\":82.77000000000001,\"eff\":51.150000000000006,\"sal\":1035.0900000000001,\"pro\":0,\"cyclesUntilRaise\":281,\"loc\":\"\",\"pos\":\"Management\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"dJ3NIUh\",\"mor\":100,\"hap\":99.56782167407788,\"ene\":99.56848159291839,\"int\":45.36,\"cha\":80.19000000000001,\"exp\":49.347000000000065,\"cre\":59.13,\"eff\":46.980000000000004,\"sal\":838.35,\"pro\":0,\"cyclesUntilRaise\":281,\"loc\":\"\",\"pos\":\"Research & Development\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"1BdS8d9\",\"mor\":100,\"hap\":89.13119848261049,\"ene\":86.3073257693448,\"int\":49.14,\"cha\":70.2,\"exp\":48.97200000000005,\"cre\":43.68,\"eff\":69.42,\"sal\":840.0600000000001,\"pro\":0,\"cyclesUntilRaise\":336,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"57updiT\",\"mor\":100,\"hap\":99.56995206072487,\"ene\":99.57009756362696,\"int\":94.09,\"cha\":60.14,\"exp\":74.14200000000005,\"cre\":73.72,\"eff\":95.06,\"sal\":1187.28,\"pro\":0,\"cyclesUntilRaise\":336,\"loc\":\"\",\"pos\":\"Operations\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"pDwYdN5\",\"mor\":100,\"hap\":99.56819057059379,\"ene\":73.03414681209232,\"int\":66.36,\"cha\":75.6,\"exp\":71.11200000000005,\"cre\":63,\"eff\":44.519999999999996,\"sal\":957.5999999999999,\"pro\":0,\"cyclesUntilRaise\":336,\"loc\":\"\",\"pos\":\"Management\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"sQQgL8s\",\"mor\":100,\"hap\":99.58125088027768,\"ene\":99.58315777702896,\"int\":71.61,\"cha\":54.67,\"exp\":46.82200000000005,\"cre\":40.81,\"eff\":47.74,\"sal\":780.78,\"pro\":0,\"cyclesUntilRaise\":336,\"loc\":\"\",\"pos\":\"Management\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"nego9jt\",\"mor\":85.5,\"hap\":78.680492288327,\"ene\":99.57462965853053,\"int\":60.83,\"cha\":70.84,\"exp\":76.85200000000006,\"cre\":50.82,\"eff\":73.92,\"sal\":995.61,\"pro\":0,\"cyclesUntilRaise\":336,\"loc\":\"\",\"pos\":\"Management\",\"salary\":0}},{\"ctor\":\"Employee\",\"data\":{\"name\":\"g3aYNtJ\",\"mor\":100,\"hap\":99.56909740985219,\"ene\":98.15988940313292,\"int\":68.53,\"cha\":56.980000000000004,\"exp\":77.62200000000006,\"cre\":73.15,\"eff\":44.660000000000004,\"sal\":958.65,\"pro\":0,\"cyclesUntilRaise\":336,\"loc\":\"\",\"pos\":\"Research & Development\",\"salary\":0}}],\"employeeProd\":{\"Operations\":1368.3300987919797,\"Engineer\":400.2776734117712,\"Business\":222.67891520389924,\"Management\":1485.3107723802889,\"Research & Development\":760.1055264059555,\"total\":4236.7029861938945,\"Unassigned\":0}}}},\"name\":\"Energy Co.\",\"type\":\"Energy\",\"sciResearch\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Scientific Research\",\"qty\":1911.821166545949,\"qlt\":0,\"dmd\":0,\"dmdR\":[0,0],\"cmp\":0,\"cmpR\":[0,0],\"mv\":0,\"mku\":0,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":0,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"researched\":{},\"reqMats\":{\"Hardware\":0.1,\"Metal\":0.2},\"prodMats\":[\"Energy\"],\"products\":{},\"makesProducts\":false,\"awareness\":26.115222823182126,\"popularity\":8.555251083777152,\"startingCost\":225000000000,\"reFac\":0.65,\"sciFac\":0.7,\"hwFac\":0,\"robFac\":0.05,\"aiFac\":0.3,\"advFac\":0.08,\"prodMult\":94.47691953910889,\"lastCycleRevenue\":\"2347810.435927289\",\"lastCycleExpenses\":\"1638233.8817963063\",\"thisCycleRevenue\":\"0\",\"thisCycleExpenses\":\"715101.9\",\"upgrades\":[120,7],\"state\":\"START\",\"newInd\":false,\"warehouses\":{\"Aevum\":{\"ctor\":\"Warehouse\",\"data\":{\"breakdown\":\"Metal: 0.1<br>Hardware: 0.0<br>RealEstate: 0.0<br>\",\"level\":4,\"sizeUsed\":0.12000394124670664,\"smartSupplyEnabled\":true,\"smartSupplyConsiderExports\":false,\"smartSupplyStore\":194.08239024636467,\"loc\":\"Aevum\",\"size\":480,\"materials\":{\"Water\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Water\",\"qty\":0,\"qlt\":0,\"dmd\":75,\"dmdR\":[65,85],\"cmp\":50,\"cmpR\":[40,60],\"mv\":0.2,\"mku\":6,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":1500,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Energy\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Energy\",\"qty\":0,\"qlt\":203.46780383119815,\"dmd\":89.11114607851722,\"dmdR\":[80,99],\"cmp\":79.45273591396847,\"cmpR\":[65,95],\"mv\":0.2,\"mku\":6,\"buy\":0,\"sll\":194.08239024636467,\"prd\":194.08239024636467,\"imp\":0,\"exp\":[{\"ind\":\"Skynet\",\"city\":\"Aevum\",\"amt\":\"MAX\"}],\"totalExp\":0,\"bCost\":1991.3960303898068,\"sCost\":\"MP\",\"prdman\":[false,0],\"sllman\":[true,\"MAX\"],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Food\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Food\",\"qty\":0,\"qlt\":0,\"dmd\":80,\"dmdR\":[70,90],\"cmp\":60,\"cmpR\":[35,85],\"mv\":1,\"mku\":3,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":5000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Plants\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Plants\",\"qty\":0,\"qlt\":0,\"dmd\":70,\"dmdR\":[20,90],\"cmp\":50,\"cmpR\":[30,70],\"mv\":0.6,\"mku\":3.75,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":3000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Metal\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Metal\",\"qty\":1.1538764711285125,\"qlt\":0,\"dmd\":75.82729300432493,\"dmdR\":[75,85],\"cmp\":67.67929779157762,\"cmpR\":[60,80],\"mv\":1,\"mku\":6,\"buy\":38.81677109592746,\"sll\":0,\"prd\":-38.81647804927293,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":2842.205546183879,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Hardware\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Hardware\",\"qty\":0.07693823556425627,\"qlt\":0,\"dmd\":89.34960858427539,\"dmdR\":[80,90],\"cmp\":90.03678498076685,\"cmpR\":[65,95],\"mv\":0.5,\"mku\":1,\"buy\":19.40838554796373,\"sll\":0,\"prd\":-19.408239024636465,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":8264.366152908933,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Chemicals\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Chemicals\",\"qty\":0,\"qlt\":0,\"dmd\":55,\"dmdR\":[40,70],\"cmp\":60,\"cmpR\":[40,80],\"mv\":1.2,\"mku\":2,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":9000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Drugs\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Drugs\",\"qty\":0,\"qlt\":0,\"dmd\":60,\"dmdR\":[45,75],\"cmp\":70,\"cmpR\":[40,99],\"mv\":1.6,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":40000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Robots\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Robots\",\"qty\":0,\"qlt\":0,\"dmd\":9,\"dmdR\":[80,9],\"cmp\":80,\"cmpR\":[80,9],\"mv\":0.5,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":74174.67596358046,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"AICores\":{\"ctor\":\"Material\",\"data\":{\"name\":\"AI Cores\",\"qty\":0,\"qlt\":0,\"dmd\":80.63392991853958,\"dmdR\":[80,99],\"cmp\":9,\"cmpR\":[80,9],\"mv\":0.8,\"mku\":0.5,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":14029.80593838648,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"RealEstate\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Real Estate\",\"qty\":167120,\"qlt\":0,\"dmd\":44.475112524665214,\"dmdR\":[5,99],\"cmp\":42.89109615582415,\"cmpR\":[25,75],\"mv\":1.5,\"mku\":1.5,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":78802.04753022426,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}}}}},\"undefined\":0,\"Sector-12\":{\"ctor\":\"Warehouse\",\"data\":{\"breakdown\":\"Metal: 0.0<br>Hardware: 0.0<br>RealEstate: 0.0<br>\",\"level\":2,\"sizeUsed\":0.019905594925376136,\"smartSupplyEnabled\":true,\"smartSupplyConsiderExports\":false,\"smartSupplyStore\":195.06527556366038,\"loc\":\"Sector-12\",\"size\":240,\"materials\":{\"Water\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Water\",\"qty\":0,\"qlt\":0,\"dmd\":75,\"dmdR\":[65,85],\"cmp\":50,\"cmpR\":[40,60],\"mv\":0.2,\"mku\":6,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":1500,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Energy\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Energy\",\"qty\":0,\"qlt\":201.80084189560284,\"dmd\":90.9288564533611,\"dmdR\":[80,99],\"cmp\":77.84860698508804,\"cmpR\":[65,95],\"mv\":0.2,\"mku\":6,\"buy\":0,\"sll\":195.06527556366038,\"prd\":195.06527556366038,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":1986.0095454306238,\"sCost\":\"MP\",\"prdman\":[false,0],\"sllman\":[true,\"MAX\"],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Food\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Food\",\"qty\":0,\"qlt\":0,\"dmd\":80,\"dmdR\":[70,90],\"cmp\":60,\"cmpR\":[35,85],\"mv\":1,\"mku\":3,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":5000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Plants\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Plants\",\"qty\":0,\"qlt\":0,\"dmd\":70,\"dmdR\":[20,90],\"cmp\":50,\"cmpR\":[30,70],\"mv\":0.6,\"mku\":3.75,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":3000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Metal\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Metal\",\"qty\":0.1531199609644318,\"qlt\":0,\"dmd\":76.7276391895723,\"dmdR\":[75,85],\"cmp\":74.00507980962664,\"cmpR\":[60,80],\"mv\":1,\"mku\":6,\"buy\":39.013505464669834,\"sll\":0,\"prd\":-39.01305511273208,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":2514.6184707739512,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Hardware\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Hardware\",\"qty\":0.0765599804822159,\"qlt\":0,\"dmd\":85.48983455660121,\"dmdR\":[80,90],\"cmp\":66.95926512837752,\"cmpR\":[65,95],\"mv\":0.5,\"mku\":1,\"buy\":19.506752732334917,\"sll\":0,\"prd\":-19.50652755636604,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":8761.805580072105,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Chemicals\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Chemicals\",\"qty\":0,\"qlt\":0,\"dmd\":55,\"dmdR\":[40,70],\"cmp\":60,\"cmpR\":[40,80],\"mv\":1.2,\"mku\":2,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":9000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Drugs\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Drugs\",\"qty\":0,\"qlt\":0,\"dmd\":60,\"dmdR\":[45,75],\"cmp\":70,\"cmpR\":[40,99],\"mv\":1.6,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":40000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Robots\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Robots\",\"qty\":0,\"qlt\":0,\"dmd\":80,\"dmdR\":[80,9],\"cmp\":80,\"cmpR\":[80,9],\"mv\":0.5,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":72674.41393930935,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"AICores\":{\"ctor\":\"Material\",\"data\":{\"name\":\"AI Cores\",\"qty\":0,\"qlt\":0,\"dmd\":90.82606100970338,\"dmdR\":[80,99],\"cmp\":80,\"cmpR\":[80,9],\"mv\":0.8,\"mku\":0.5,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":15203.535594301,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"RealEstate\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Real Estate\",\"qty\":165210,\"qlt\":0,\"dmd\":62.535368948607996,\"dmdR\":[5,99],\"cmp\":42.712498645620784,\"cmpR\":[25,75],\"mv\":1.5,\"mku\":1.5,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":87998.95745807386,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}}}}},\"New Tokyo\":{\"ctor\":\"Warehouse\",\"data\":{\"breakdown\":\"Metal: 0.0<br>Hardware: 0.0<br>RealEstate: 0.0<br>\",\"level\":2,\"sizeUsed\":0.021131448517050445,\"smartSupplyEnabled\":true,\"smartSupplyConsiderExports\":false,\"smartSupplyStore\":198.81635594913075,\"loc\":\"New Tokyo\",\"size\":240,\"materials\":{\"Water\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Water\",\"qty\":0,\"qlt\":0,\"dmd\":75,\"dmdR\":[65,85],\"cmp\":50,\"cmpR\":[40,60],\"mv\":0.2,\"mku\":6,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":1500,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Energy\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Energy\",\"qty\":0,\"qlt\":202.70261916183216,\"dmd\":88.9221679895505,\"dmdR\":[80,99],\"cmp\":77.14390411790463,\"cmpR\":[65,95],\"mv\":0.2,\"mku\":6,\"buy\":0,\"sll\":198.81635594913075,\"prd\":198.81635594913075,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":2015.3105194630277,\"sCost\":\"MP\",\"prdman\":[false,0],\"sllman\":[true,\"MAX\"],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Food\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Food\",\"qty\":0,\"qlt\":0,\"dmd\":80,\"dmdR\":[70,90],\"cmp\":60,\"cmpR\":[35,85],\"mv\":1,\"mku\":3,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":5000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Plants\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Plants\",\"qty\":0,\"qlt\":0,\"dmd\":70,\"dmdR\":[20,90],\"cmp\":50,\"cmpR\":[30,70],\"mv\":0.6,\"mku\":3.75,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":3000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Metal\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Metal\",\"qty\":0.1625496039773111,\"qlt\":0,\"dmd\":75.64255046203114,\"dmdR\":[75,85],\"cmp\":68.43452250926677,\"cmpR\":[60,80],\"mv\":1,\"mku\":6,\"buy\":39.76339301592526,\"sll\":0,\"prd\":-39.76327118982615,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":2642.521143005187,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Hardware\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Hardware\",\"qty\":0.08127480198865555,\"qlt\":0,\"dmd\":80.6727684269245,\"dmdR\":[80,90],\"cmp\":84.97845343538532,\"cmpR\":[65,95],\"mv\":0.5,\"mku\":1,\"buy\":19.88169650796263,\"sll\":0,\"prd\":-19.881635594913075,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":7514.181761787279,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Chemicals\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Chemicals\",\"qty\":0,\"qlt\":0,\"dmd\":55,\"dmdR\":[40,70],\"cmp\":60,\"cmpR\":[40,80],\"mv\":1.2,\"mku\":2,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":9000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Drugs\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Drugs\",\"qty\":0,\"qlt\":0,\"dmd\":60,\"dmdR\":[45,75],\"cmp\":70,\"cmpR\":[40,99],\"mv\":1.6,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":40000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Robots\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Robots\",\"qty\":0,\"qlt\":0,\"dmd\":9,\"dmdR\":[80,9],\"cmp\":9,\"cmpR\":[80,9],\"mv\":0.5,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":76522.06755515364,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"AICores\":{\"ctor\":\"Material\",\"data\":{\"name\":\"AI Cores\",\"qty\":0,\"qlt\":0,\"dmd\":98.65451630212529,\"dmdR\":[80,99],\"cmp\":80,\"cmpR\":[80,9],\"mv\":0.8,\"mku\":0.5,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":15729.506585439569,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"RealEstate\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Real Estate\",\"qty\":165000,\"qlt\":0,\"dmd\":71.99525920469438,\"dmdR\":[5,99],\"cmp\":49.93183485593581,\"cmpR\":[25,75],\"mv\":1.5,\"mku\":1.5,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":92118.00516321902,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}}}}},\"Ishima\":{\"ctor\":\"Warehouse\",\"data\":{\"breakdown\":\"Metal: 0.0<br>Hardware: 0.0<br>RealEstate: 0.0<br>\",\"level\":2,\"sizeUsed\":0.01876009013874807,\"smartSupplyEnabled\":true,\"smartSupplyConsiderExports\":false,\"smartSupplyStore\":191.63239424799121,\"loc\":\"Ishima\",\"size\":240,\"materials\":{\"Water\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Water\",\"qty\":0,\"qlt\":0,\"dmd\":75,\"dmdR\":[65,85],\"cmp\":50,\"cmpR\":[40,60],\"mv\":0.2,\"mku\":6,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":1500,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Energy\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Energy\",\"qty\":0,\"qlt\":201.54076990400387,\"dmd\":89.53230418691442,\"dmdR\":[80,99],\"cmp\":80.65044020644919,\"cmpR\":[65,95],\"mv\":0.2,\"mku\":6,\"buy\":0,\"sll\":191.63239424799121,\"prd\":191.63239424799121,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":1995.775100145043,\"sCost\":\"MP\",\"prdman\":[false,0],\"sllman\":[true,\"MAX\"],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Food\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Food\",\"qty\":0,\"qlt\":0,\"dmd\":80,\"dmdR\":[70,90],\"cmp\":60,\"cmpR\":[35,85],\"mv\":1,\"mku\":3,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":5000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Plants\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Plants\",\"qty\":0,\"qlt\":0,\"dmd\":70,\"dmdR\":[20,90],\"cmp\":50,\"cmpR\":[30,70],\"mv\":0.6,\"mku\":3.75,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":3000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Metal\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Metal\",\"qty\":0.14430838568267745,\"qlt\":0,\"dmd\":81.95974886356763,\"dmdR\":[75,85],\"cmp\":69.99668800713822,\"cmpR\":[60,80],\"mv\":1,\"mku\":6,\"buy\":38.32683464557099,\"sll\":0,\"prd\":-38.326478849598246,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":2589.30270547906,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Hardware\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Hardware\",\"qty\":0.07215419284133873,\"qlt\":0,\"dmd\":81.15044859385488,\"dmdR\":[80,90],\"cmp\":78.4256497040547,\"cmpR\":[65,95],\"mv\":0.5,\"mku\":1,\"buy\":19.163417322785495,\"sll\":0,\"prd\":-19.163239424799123,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":7857.978202884986,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Chemicals\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Chemicals\",\"qty\":0,\"qlt\":0,\"dmd\":55,\"dmdR\":[40,70],\"cmp\":60,\"cmpR\":[40,80],\"mv\":1.2,\"mku\":2,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":9000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Drugs\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Drugs\",\"qty\":0,\"qlt\":0,\"dmd\":60,\"dmdR\":[45,75],\"cmp\":70,\"cmpR\":[40,99],\"mv\":1.6,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":40000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Robots\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Robots\",\"qty\":0,\"qlt\":0,\"dmd\":9,\"dmdR\":[80,9],\"cmp\":80,\"cmpR\":[80,9],\"mv\":0.5,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":69582.08835857817,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"AICores\":{\"ctor\":\"Material\",\"data\":{\"name\":\"AI Cores\",\"qty\":0,\"qlt\":0,\"dmd\":94.84103013484997,\"dmdR\":[80,99],\"cmp\":9,\"cmpR\":[80,9],\"mv\":0.8,\"mku\":0.5,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":14260.803662521024,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"RealEstate\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Real Estate\",\"qty\":165930,\"qlt\":0,\"dmd\":83.5964929460431,\"dmdR\":[5,99],\"cmp\":56.42907846258635,\"cmpR\":[25,75],\"mv\":1.5,\"mku\":1.5,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":91944.75178759929,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}}}}},\"Volhaven\":{\"ctor\":\"Warehouse\",\"data\":{\"breakdown\":\"Metal: 0.0<br>Hardware: 0.0<br>RealEstate: 0.0<br>\",\"level\":2,\"sizeUsed\":0.02249842296585882,\"smartSupplyEnabled\":true,\"smartSupplyConsiderExports\":false,\"smartSupplyStore\":194.07975902372877,\"loc\":\"Volhaven\",\"size\":240,\"materials\":{\"Water\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Water\",\"qty\":0,\"qlt\":0,\"dmd\":75,\"dmdR\":[65,85],\"cmp\":50,\"cmpR\":[40,60],\"mv\":0.2,\"mku\":6,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":1500,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Energy\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Energy\",\"qty\":0,\"qlt\":202.44500660185932,\"dmd\":90.77578532146221,\"dmdR\":[80,99],\"cmp\":84.1011005024455,\"cmpR\":[65,95],\"mv\":0.2,\"mku\":6,\"buy\":0,\"sll\":194.07975902372877,\"prd\":194.07975902372877,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":1995.9462680718284,\"sCost\":\"MP*1.02\",\"prdman\":[false,0],\"sllman\":[true,\"MAX\"],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Food\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Food\",\"qty\":0,\"qlt\":0,\"dmd\":80,\"dmdR\":[70,90],\"cmp\":60,\"cmpR\":[35,85],\"mv\":1,\"mku\":3,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":5000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Plants\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Plants\",\"qty\":0,\"qlt\":0,\"dmd\":70,\"dmdR\":[20,90],\"cmp\":50,\"cmpR\":[30,70],\"mv\":0.6,\"mku\":3.75,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":3000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Metal\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Metal\",\"qty\":0.17306479204506786,\"qlt\":0,\"dmd\":78.12310949827086,\"dmdR\":[75,85],\"cmp\":79.29177109507171,\"cmpR\":[60,80],\"mv\":1,\"mku\":6,\"buy\":38.816236355646794,\"sll\":0,\"prd\":-38.81595180474576,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":2320.640216128334,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Hardware\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Hardware\",\"qty\":0.08653239602253393,\"qlt\":0,\"dmd\":88.68797201123674,\"dmdR\":[80,90],\"cmp\":72.46449541583132,\"cmpR\":[65,95],\"mv\":0.5,\"mku\":1,\"buy\":19.408118177823397,\"sll\":0,\"prd\":-19.40797590237288,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":8882.719283089715,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Chemicals\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Chemicals\",\"qty\":0,\"qlt\":0,\"dmd\":55,\"dmdR\":[40,70],\"cmp\":60,\"cmpR\":[40,80],\"mv\":1.2,\"mku\":2,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":9000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Drugs\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Drugs\",\"qty\":0,\"qlt\":0,\"dmd\":60,\"dmdR\":[45,75],\"cmp\":70,\"cmpR\":[40,99],\"mv\":1.6,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":40000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Robots\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Robots\",\"qty\":0,\"qlt\":0,\"dmd\":80,\"dmdR\":[80,9],\"cmp\":9,\"cmpR\":[80,9],\"mv\":0.5,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":76200.96424863518,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"AICores\":{\"ctor\":\"Material\",\"data\":{\"name\":\"AI Cores\",\"qty\":0,\"qlt\":0,\"dmd\":87.71592470727785,\"dmdR\":[80,99],\"cmp\":9,\"cmpR\":[80,9],\"mv\":0.8,\"mku\":0.5,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":16040.642930142536,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"RealEstate\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Real Estate\",\"qty\":167080,\"qlt\":0,\"dmd\":46.96461772723988,\"dmdR\":[5,99],\"cmp\":44.600174029784284,\"cmpR\":[25,75],\"mv\":1.5,\"mku\":1.5,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":84648.15237933745,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}}}}},\"Chongqing\":{\"ctor\":\"Warehouse\",\"data\":{\"breakdown\":\"Metal: 0.0<br>Hardware: 0.0<br>RealEstate: 0.0<br>\",\"level\":2,\"sizeUsed\":0.021695390797652293,\"smartSupplyEnabled\":true,\"smartSupplyConsiderExports\":false,\"smartSupplyStore\":198.76159591736345,\"loc\":\"Chongqing\",\"size\":240,\"materials\":{\"Water\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Water\",\"qty\":0,\"qlt\":0,\"dmd\":75,\"dmdR\":[65,85],\"cmp\":50,\"cmpR\":[40,60],\"mv\":0.2,\"mku\":6,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":1500,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Energy\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Energy\",\"qty\":0,\"qlt\":202.90479305543897,\"dmd\":87.45112136140513,\"dmdR\":[80,99],\"cmp\":80.38319703047206,\"cmpR\":[65,95],\"mv\":0.2,\"mku\":6,\"buy\":0,\"sll\":198.76159591736345,\"prd\":198.76159591736345,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":1987.415198841814,\"sCost\":\"MP\",\"prdman\":[false,0],\"sllman\":[true,\"MAX\"],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Food\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Food\",\"qty\":0,\"qlt\":0,\"dmd\":80,\"dmdR\":[70,90],\"cmp\":60,\"cmpR\":[35,85],\"mv\":1,\"mku\":3,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":5000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Plants\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Plants\",\"qty\":0,\"qlt\":0,\"dmd\":70,\"dmdR\":[20,90],\"cmp\":50,\"cmpR\":[30,70],\"mv\":0.6,\"mku\":3.75,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":3000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Metal\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Metal\",\"qty\":0.16688762152040226,\"qlt\":0,\"dmd\":83.79343041514194,\"dmdR\":[75,85],\"cmp\":61.48177754006414,\"cmpR\":[60,80],\"mv\":1,\"mku\":6,\"buy\":39.7528157496358,\"sll\":0,\"prd\":-39.75231918347269,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":2654.7688230711674,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Hardware\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Hardware\",\"qty\":0.08344381076020113,\"qlt\":0,\"dmd\":81.42575542348345,\"dmdR\":[80,90],\"cmp\":93.41377612683694,\"cmpR\":[65,95],\"mv\":0.5,\"mku\":1,\"buy\":19.8764078748179,\"sll\":0,\"prd\":-19.876159591736346,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":7783.99942325345,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Chemicals\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Chemicals\",\"qty\":0,\"qlt\":0,\"dmd\":55,\"dmdR\":[40,70],\"cmp\":60,\"cmpR\":[40,80],\"mv\":1.2,\"mku\":2,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":9000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Drugs\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Drugs\",\"qty\":0,\"qlt\":0,\"dmd\":60,\"dmdR\":[45,75],\"cmp\":70,\"cmpR\":[40,99],\"mv\":1.6,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":40000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"Robots\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Robots\",\"qty\":0,\"qlt\":0,\"dmd\":9,\"dmdR\":[80,9],\"cmp\":9,\"cmpR\":[80,9],\"mv\":0.5,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":73241.00200181297,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"AICores\":{\"ctor\":\"Material\",\"data\":{\"name\":\"AI Cores\",\"qty\":0,\"qlt\":0,\"dmd\":97.55229508105838,\"dmdR\":[80,99],\"cmp\":80,\"cmpR\":[80,9],\"mv\":0.8,\"mku\":0.5,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":15791.64270459689,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}},\"RealEstate\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Real Estate\",\"qty\":167000,\"qlt\":0,\"dmd\":55.54971903457364,\"dmdR\":[5,99],\"cmp\":40.93251276156585,\"cmpR\":[25,75],\"mv\":1.5,\"mku\":1.5,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":87028.62913113169,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0}}}}}}}}],\"funds\":\"4999004445.3387940967\",\"revenue\":\"33306207.988762196285\",\"expenses\":\"7672911.279549659346\",\"fundingRound\":2,\"public\":true,\"totalShares\":1800000000,\"numShares\":570100000,\"shareSalesUntilPriceUpdate\":1000000,\"shareSaleCooldown\":0,\"issueNewSharesCooldown\":0,\"dividendPercentage\":50,\"dividendTaxPercentage\":50,\"issuedShares\":220900000,\"sharePrice\":289.6662707348165,\"storedCycles\":1224776,\"unlockUpgrades\":[1,1,1,1,1,0,0],\"upgrades\":[8,2,2,0,8,10,10,10,1,10],\"upgradeMultipliers\":[1.24,1.2,1.002,1,1.8,2,2,2,1.01,1.5],\"state\":{\"ctor\":\"CorporationState\",\"data\":{\"state\":1}}}},\"bladeburner\":0,\"bladeburner_max_stamina_mult\":1,\"bladeburner_stamina_gain_mult\":1,\"bladeburner_analysis_mult\":1,\"bladeburner_success_chance_mult\":1,\"sleeves\":[],\"resleeves\":[],\"sleevesFromCovenant\":0,\"bitNodeN\":3,\"firstFacInvRecvd\":true,\"firstAugPurchased\":true,\"firstTimeTraveled\":true,\"firstProgramAvailable\":true,\"lastUpdate\":1560478252243,\"totalPlaytime\":5258900800,\"playtimeSinceLastAug\":91916400,\"playtimeSinceLastBitnode\":467573800,\"moneySourceA\":{\"ctor\":\"MoneySourceTracker\",\"data\":{\"bladeburner\":0,\"codingcontract\":0,\"corporation\":64873584084.36459,\"crime\":0,\"gang\":0,\"hacking\":4786407625.731856,\"hacknetnode\":18209240686.428894,\"hospitalization\":0,\"infiltration\":0,\"stock\":0,\"total\":87869232396.1863,\"work\":0}},\"moneySourceB\":{\"ctor\":\"MoneySourceTracker\",\"data\":{\"bladeburner\":0,\"codingcontract\":75000000,\"corporation\":6617907847.709283,\"crime\":11064768,\"gang\":0,\"hacking\":12544616753.539675,\"hacknetnode\":63994652405.78357,\"hospitalization\":0,\"infiltration\":0,\"stock\":0,\"total\":24216627145.0456,\"work\":169395.19999986747}},\"scriptProdSinceLastAug\":3125464897,\"committingCrimeThruSingFn\":false,\"singFnCrimeWorkerScript\":0,\"factionWorkType\":\"Faction Hacking Work\"}}","AllServersSave":"{\"60.8.2.2\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"home\",\"httpPortOpen\":false,\"ip\":\"60.8.2.2\",\"isConnectedTo\":true,\"maxRam\":128,\"messages\":[\"hackers-starting-handbook.lit\",{\"ctor\":\"Message\",\"data\":{\"filename\":\"j0.msg\",\"msg\":\"I know you can sense it. I know you're searching for it. It's why you spend night after night at your computer. <br><br>It's real, I've seen it. And I can help you find it. But not right now. You're not ready yet.<br><br>Use this program to track your progress<br><br>The fl1ght.exe program was added to your home computer<br><br>-jump3R\",\"recvd\":true}},{\"ctor\":\"Message\",\"data\":{\"filename\":\"j1.msg\",\"msg\":\"Soon you will be contacted by a hacking group known as CyberSec. They can help you with your search. <br><br>You should join them, garner their favor, and exploit them for their Augmentations. But do not trust them. They are not what they seem. No one is.<br><br>-jump3R\",\"recvd\":true}},{\"ctor\":\"Message\",\"data\":{\"filename\":\"csec-test.msg\",\"msg\":\"We've been watching you. Your skills are very impressive. But you're wasting your talents. If you join us, you can put your skills to good use and change the world for the better. If you join us, we can unlock your full potential. <br><br>But first, you must pass our test. Find and hack our server using the Terminal. <br><br>-CyberSec\",\"recvd\":true}},{\"ctor\":\"Message\",\"data\":{\"filename\":\"j2.msg\",\"msg\":\"Do not try to save the world. There is no world to save. If you want to find the truth, worry only about yourself. Ethics and morals will get you killed. <br><br>Watch out for a hacking group known as NiteSec.<br><br>-jump3R\",\"recvd\":true}},{\"ctor\":\"Message\",\"data\":{\"filename\":\"nitesec-test.msg\",\"msg\":\"People say that the corrupted governments and corporations rule the world. Yes, maybe they do. But do you know who everyone really fears? People like us. Because they can't hide from us. Because they can't fight shadows and ideas with bullets. <br><br>Join us, and people will fear you, too. <br><br>Find and hack our hidden server using the Terminal. Then, we will contact you again.<br><br>-NiteSec\",\"recvd\":true}},{\"ctor\":\"Message\",\"data\":{\"filename\":\"j3.msg\",\"msg\":\"You must learn to walk before you can run. And you must run before you can fly. Look for the black hand. <br><br>I.I.I.I <br><br>-jump3R\",\"recvd\":true}},{\"ctor\":\"Message\",\"data\":{\"filename\":\"j4.msg\",\"msg\":\"To find what you are searching for, you must understand the bits. The bits are all around us. The runners will help you.<br><br>-jump3R\",\"recvd\":true}},{\"ctor\":\"Message\",\"data\":{\"filename\":\"19dfj3l1nd.msg\",\"msg\":\"We know what you are doing. We know what drives you. We know what you are looking for. <br><br> We can help you find the answers.<br><br>run4theh111z\",\"recvd\":true}}],\"organizationName\":\"Home PC\",\"programs\":[\"NUKE.exe\",\"b1t_flum3.exe\",\"BruteSSH.exe\",\"fl1ght.exe\",\"SQLInject.exe\",\"HTTPWorm.exe\",\"relaySMTP.exe\",\"FTPCrack.exe\",\"DeepscanV2.exe\",\"DeepscanV1.exe\",\"ServerProfiler.exe\",\"AutoLink.exe\"],\"ramUsed\":23.25,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{},\"filename\":\"/master/hacking/director-ns2.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":72122.122,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":19422.410000035437,\"ramUsage\":9.75,\"server\":\"60.8.2.2\",\"threads\":1}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\",8],\"dataMap\":{},\"filename\":\"/master/buy_server/buy_server-ns2.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":72122.126,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":19421.610000035434,\"ramUsage\":10.5,\"server\":\"60.8.2.2\",\"threads\":1}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[300,\"tprint\"],\"dataMap\":{},\"filename\":\"/master/hacking/monitor-ns2.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":72122.128,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":19421.010000035432,\"ramUsage\":3,\"server\":\"60.8.2.2\",\"threads\":1}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var equipment = gang.getTaskNames();\\n\\nfor (i=0; i < equipment.length; i++) {\\n    tprint(equipment[i]);\\n}\\n\\n\\n\\ntprint(\\\"Done!\\\");\",\"filename\":\"/temp/scratch.script\",\"module\":\"\",\"ramUsage\":2.6,\"server\":\"60.8.2.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"clear(1);\\n\\ni=0;\\nvar success = true;\\n\\nwhile(success)\\n{\\n    success = tryWrite(1, i);\\n    print(\\\"Tried to write \\\" + i + \\\" to port 1. Success: \\\" + success);\\n    i++;\\n}\\n\\nclear(1);\",\"filename\":\"/temp/port_write_script_test.script\",\"module\":\"\",\"ramUsage\":3.6,\"server\":\"60.8.2.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"// TODO Update number of weaken threads:\\n//      Returns: The amount by which the target server’s security level was decreased. This is equivalent to 0.05 multiplied by the number of script threads\\n// TODO Create v3.0: Better farm out the work\\n//      Spawn child scripts that sit and loop on the server\\n//          Maybe these just sit and constantly weaken/grow?\\n//      Use ports to communicate with remote PServers?\\n//          Shoudl be able to use growthAnalyze() to figure out how many grow calls we need\\n//          Should be able to math out how many weaken threads we need\\n//          Could farm out just what's needed to deal with grow, so not doubling up?\\n//          Use 2-3 ports; one to state the action, one to state the number of calls/threads\\n//          Can ports pass arrays or objects around?\\n//      Auto-select what server to targe based on hacking level and available money\\n\\n\\n// Imports\\nimport {getRootAccess} from \\\"/scripts/functions/getRootAccess.script\\\";\\n\\n// Defines the \\\"target server\\\", which is the server, via the first arg\\nvar target = args[0];\\n\\n// Amount of RAM to keep free if on the home PC\\nvar reserverHomeRamGb = 16;\\n\\n// Scripts being used\\nvar hackScript = \\\"/scripts/hacking_2_0/helpers/hack_target.script\\\";\\nvar growScript = \\\"/scripts/hacking_2_0/helpers/grow_target.script\\\";\\nvar weakenScript = \\\"/scripts/hacking_2_0/helpers/weaken_target.script\\\";\\n\\n// Defines how much money a server should have before we hack it\\n// In this case, it is set to 75% of the server's max money\\nvar targetMaxMoney = getServerMaxMoney(target);\\nvar targetMoneyThresh = targetMaxMoney * 0.75;\\n\\n// Defines the maximum security level the target server can\\n// have. If the target's security level is higher than this,\\n// we'll weaken it before doing anything else\\nvar securityThresh = getServerMinSecurityLevel(target) + 5;\\n\\n//how much ram do the helper scripts take?\\nvar hackRam = getScriptRam(hackScript);\\nvar growRam = getScriptRam(growScript);\\nvar weakenRam = getScriptRam(weakenScript);\\n\\n//how much free ram does this server have?\\nfunction thisServFreeRam()\\n{\\n    var thisServRam = getServerRam(getHostname());\\n    var thisServMaxRam = thisServRam[0];\\n    var thisServUsedRam = thisServRam[1];\\n    var thisServFreeRam = thisServMaxRam - thisServUsedRam;\\n    \\n    // If it's the hom PC, indicate the free RAM is less based on how much\\n    // is being reserved (defined earlier in the script); otherwise return\\n    // the true free amount\\n    if(getHostname() == \\\"home\\\")\\n        return thisServFreeRam - reserverHomeRamGb;\\n    else\\n        return thisServFreeRam;\\n}\\n\\n// Get root access\\ngetRootAccess(target);\\n\\n// Infinite loop that continously hacks/grows/weakens the target server\\nwhile(true) {\\n    if (getServerSecurityLevel(target) > securityThresh) {\\n        // If the server's security level is above our threshold, weaken it\\n        var maxWeakenThreads = Math.floor(thisServFreeRam()/weakenRam);\\n        \\n        print(\\\"Weakening\\\");\\n        run(weakenScript, maxWeakenThreads, target);\\n        \\n        //wait for the script to finish\\n        sleep(getWeakenTime(target)*1000);\\n        while (isRunning(weakenScript, getHostname(), target))\\n            sleep(1000);\\n    } else if (getServerMoneyAvailable(target) < targetMoneyThresh) {\\n        // If the server's money is less than our threshold, grow it\\n        var maxGrowThreads = Math.floor(thisServFreeRam()/growRam);\\n        \\n        print(\\\"Growing\\\");\\n        run(growScript, maxGrowThreads, target);\\n        \\n        //wait for the script to finish\\n        sleep(getGrowTime(target)*1000);\\n        while (isRunning(growScript, getHostname(), target))\\n            sleep(1000);\\n    } else {\\n        // Otherwise, hack it\\n        var maxHackThreads = Math.floor(thisServFreeRam()/hackRam);\\n        var desiredHackThreads = Math.floor(hackAnalyzeThreads(target, targetMaxMoney*0.10));\\n        \\n        print(\\\"Hacking\\\");\\n        if (desiredHackThreads < 1)\\n            run(hackScript, 1, target);\\n        else if (desiredHackThreads <= maxHackThreads)\\n            run(hackScript, desiredHackThreads, target);\\n        else\\n            run(hackScript, maxHackThreads, target);\\n        \\n        //wait for the script to finish\\n        sleep(getHackTime(target)*1000);\\n        while (isRunning(hackScript, getHostname(), target))\\n            sleep(1000);\\n    }\\n}\",\"filename\":\"/temp/copy_test/scripts/hacking_2_0/run.script\",\"module\":\"\",\"ramUsage\":4.9,\"server\":\"60.8.2.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/temp/copy_test/scripts/hacking_v20/run.script\",\"filename\":\"/temp/copy_test/scripts/hacking_v20/run.script\",\"module\":\"\",\"ramUsage\":0,\"server\":\"60.8.2.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"// ===== IMPORTS ================================\\n\\n// ===== ARGS ===================================\\nfunction getScriptArgs(ns) {\\n    var scriptArgs = {\\n        destination : ns.args[0]\\n    };\\n    \\n    return scriptArgs;\\n}\\n\\n// ===== VARS ===================================\\nvar sVars = {\\n\\n};\\n\\nvar tests = {\\n\\tenabled : false, // Master override for all tests\\n\\tdisableMain : false, // Disables all non-testing logic in main\\n\\ttestEnabled_exampleFunction : false,\\n};\\n\\n// ===== MAIN ===================================\\nexport async function main(ns) {\\n\\tvar sArgs = getScriptArgs(ns);\\n\\t\\n\\t// - Tests ----------------------------------\\n\\tif (tests.enabled)\\n\\t\\texecuteTests(ns);\\n\\t\\n\\t// - Early out ------------------------------\\n\\tif (tests.disableMain) {\\n\\t\\tns.tprint(\\\"WARNING: SCRIPT IS IN TEST ONLY MODE\\\");\\n\\t\\tns.exit();\\n\\t}\\n\\t\\n\\t// - Real Script Logic ----------------------\\n    ns.print(\\\"Starting script...\\\");\\n    \\n    await ns.wget(\\\"https://raw.githubusercontent.com/FlawlessCow/BitBurner/master/home/pull/_getScriptList-ns2.js\\\", \\\"/pull/_getScriptList-ns2.js\\\");\\n    await ns.wget(\\\"https://raw.githubusercontent.com/FlawlessCow/BitBurner/master/home/pull/pull_scripts-ns2.js\\\", \\\"/pull/pull_scripts-ns2.js\\\");\\n    await ns.wget(\\\"https://raw.githubusercontent.com/FlawlessCow/BitBurner/master/home/pull/destroy_scripts-ns2.js\\\", \\\"/pull/destroy_scripts-ns2.js\\\");\\n\\n    if(sArgs.destination === \\\"beta\\\" || sArgs.destination === \\\"master\\\") {\\n\\t\\tawait ns.run(\\\"/pull/pull_scripts-ns2.js\\\", 1, sArgs.destination);\\n\\t}\\n\\telse {\\n\\t\\tns.tprint(\\\"===== ALERT ===== Not a valid argument\\\");\\n\\t\\tns.tprint(\\\"===== ALERT ===== sArgs.destination: \\\" + sArgs.destination);\\n\\t\\tns.tprint(\\\"===== ALERT ===== Valid values: master, beta\\\");\\n\\t}\\n\\n\\tns.tprint(\\\"Pull complete!\\\");\\n}\\n\\n// ===== FUNCTIONS ==============================\\n\\n// ===== TESTS ==================================\\nfunction executeTests(ns) {\\n\\tif (tests.testEnabled_exampleFunction)\\n\\t\\ttest_exampleFunction(ns);\\n}\\n\\nfunction test_exampleFunction(ns) {\\n\\tns.print(\\\"==== TEST: test_exampleFunction ====\\\");\\n\\n}\",\"filename\":\"/pull/pull-ns2.js\",\"module\":\"\",\"ramUsage\":2.6,\"server\":\"60.8.2.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"// ===== IMPORTS ================================\\nimport { getScriptList } from \\\"/pull/_getScriptList-ns2.js\\\";\\n\\n// ===== ARGS ===================================\\nfunction getScriptArgs(ns) {\\n    var scriptArgs = {\\n        destination : ns.args[0]\\n    };\\n    \\n    return scriptArgs;\\n}\\n\\n// ===== VARS ===================================\\nvar sVars = {\\n\\n};\\n\\nvar tests = {\\n\\tenabled : false, // Master override for all tests\\n\\tdisableMain : false, // Disables all non-testing logic in main\\n\\ttestEnabled_exampleFunction : false,\\n};\\n\\n// ===== MAIN ===================================\\nexport async function main(ns) {\\n\\tvar sArgs = getScriptArgs(ns);\\n\\t\\n\\t// - Tests ----------------------------------\\n\\tif (tests.enabled)\\n\\t\\texecuteTests(ns);\\n\\t\\n\\t// - Early out ------------------------------\\n\\tif (tests.disableMain) {\\n\\t\\tns.tprint(\\\"WARNING: SCRIPT IS IN TEST ONLY MODE\\\");\\n\\t\\tns.exit();\\n\\t}\\n\\t\\n\\t// - Real Script Logic ----------------------\\n    if(sArgs.destination === \\\"beta\\\" || sArgs.destination === \\\"master\\\") {\\n\\t\\tawait pull(ns, sArgs.destination);\\n\\t}\\n\\telse {\\n\\t\\tns.tprint(\\\"===== ALERT ===== Not a valid argument\\\");\\n\\t\\tns.tprint(\\\"===== ALERT ===== sArgs.destination: \\\" + sArgs.destination);\\n\\t}\\n}\\n\\n// ===== FUNCTIONS ==============================\\nasync function pull(ns, branch){\\n\\tvar scripts = getScriptList();\\n\\n\\t// gitHub Setup\\n\\tvar gitHubBranchPath = branch;\\n\\tvar gitHubPrjectURL = \\\"https://raw.githubusercontent.com/FlawlessCow/BitBurner/\\\";\\n\\tvar gitHubScriptsPath = \\\"/home/scripts\\\";\\n\\t\\n\\t// bitBurner setup\\n\\tvar bitBurnerBranchPath = \\\"/\\\" + branch;\\n\\t\\n\\tfor(var i = 0; i < scripts.length; i++) {\\n\\t\\tvar scriptPath = scripts[i];\\n\\t\\tvar sourcePath = gitHubPrjectURL + gitHubBranchPath + gitHubScriptsPath + scriptPath;\\n\\t\\tvar destPath = bitBurnerBranchPath + scriptPath;\\n\\n\\t\\tawait ns.wget(sourcePath, destPath);\\n\\t}\\n}\\n\\n// ===== TESTS ==================================\\nfunction executeTests(ns) {\\n\\tif (tests.testEnabled_exampleFunction)\\n\\t\\ttest_exampleFunction(ns);\\n}\\n\\nfunction test_exampleFunction(ns) {\\n\\tns.print(\\\"==== TEST: test_exampleFunction ====\\\");\\n\\n}\",\"filename\":\"/pull/pull_scripts-ns2.js\",\"module\":\"\",\"ramUsage\":1.6,\"server\":\"60.8.2.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"// ===== IMPORTS ================================\\nimport { getScriptList } from \\\"/pull/_getScriptList-ns2.js\\\";\\n\\n// ===== ARGS ===================================\\nfunction getScriptArgs(ns) {\\n    var scriptArgs = {\\n        destination : ns.args[0]\\n    };\\n    \\n    return scriptArgs;\\n}\\n\\n// ===== VARS ===================================\\nvar sVars = {\\n\\n};\\n\\nvar tests = {\\n\\tenabled : false, // Master override for all tests\\n\\tdisableMain : false, // Disables all non-testing logic in main\\n\\ttestEnabled_exampleFunction : false,\\n};\\n\\n// ===== MAIN ===================================\\nexport async function main(ns) {\\n\\tvar sArgs = getScriptArgs(ns);\\n\\t\\n\\t// - Tests ----------------------------------\\n\\tif (tests.enabled)\\n\\t\\texecuteTests(ns);\\n\\t\\n\\t// - Early out ------------------------------\\n\\tif (tests.disableMain) {\\n\\t\\tns.tprint(\\\"WARNING: SCRIPT IS IN TEST ONLY MODE\\\");\\n\\t\\tns.exit();\\n\\t}\\n\\t\\n\\t// - Real Script Logic ----------------------\\n    if(sArgs.destination === \\\"beta\\\" || sArgs.destination === \\\"master\\\") {\\n\\t\\tawait destroy(ns, sArgs.destination);\\n\\t}\\n\\telse {\\n\\t\\tns.tprint(\\\"===== ALERT ===== Not a valid argument\\\");\\n\\t\\tns.tprint(\\\"===== ALERT ===== sArgs.destination: \\\" + sArgs.destination);\\n\\t}\\n}\\n\\n// ===== FUNCTIONS ==============================\\nasync function destroy(ns, branch){\\n\\tvar scripts = getScriptList();\\n\\tvar deprecatedScripts = getDrecatedScriptList();\\n\\t\\n\\t// bitBurner path setup\\n\\tvar bitBurnerBranchPath = \\\"/\\\" + branch;\\n\\t\\n\\tfor(var i = 0; i < scripts.length; i++) {\\n\\t\\tvar scriptPath = scripts[i];\\n\\t\\tvar destPath = bitBurnerBranchPath + scriptPath;\\n\\n\\t\\tawait ns.rm(destPath);\\n\\t}\\n\\t\\n\\tfor(var i = 0; i < deprecatedScripts.length; i++) {\\n\\t\\tvar scriptPath = deprecatedScripts[i];\\n\\t\\tvar destPath = bitBurnerBranchPath + scriptPath;\\n\\n\\t\\tawait ns.rm(destPath);\\n\\t}\\n}\\n\\n// ===== TESTS ==================================\\nfunction executeTests(ns) {\\n\\tif (tests.testEnabled_exampleFunction)\\n\\t\\ttest_exampleFunction(ns);\\n}\\n\\nfunction test_exampleFunction(ns) {\\n\\tns.print(\\\"==== TEST: test_exampleFunction ====\\\");\\n\\n}\",\"filename\":\"/pull/destroy_scripts-ns2.js\",\"module\":\"\",\"ramUsage\":2.6,\"server\":\"60.8.2.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"run(\\\"./../path_bravo/test.script\\\");\",\"filename\":\"/temp/rel_dir_test/path_alpha/test.script\",\"module\":\"\",\"ramUsage\":2.6,\"server\":\"60.8.2.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"tprint(\\\"Test successful\\\");\",\"filename\":\"/temp/rel_dir_test/path_bravo/test.script\",\"module\":\"\",\"ramUsage\":1.6,\"server\":\"60.8.2.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"// ===== IMPORTS ================================\\n\\n// ===== ARGS ===================================\\nfunction getScriptArgs(ns) {\\n    var scriptArgs = {\\n        firstArg : ns.args[0]\\n    };\\n    \\n    return scriptArgs;\\n}\\n\\n// ===== VARS ===================================\\nvar sVars = {\\n\\n};\\n\\nvar tests = {\\n\\tenabled : true, // Master override for all tests\\n\\tdisableMain : false, // Disables all non-testing logic in main\\n\\ttestEnabled_getScriptList : true,\\n};\\n\\n// ===== MAIN ===================================\\nexport async function main(ns) {\\n\\tvar sArgs = getScriptArgs(ns);\\n\\t\\n\\t// - Tests ----------------------------------\\n\\tif (tests.enabled)\\n\\t\\texecuteTests(ns);\\n\\t\\n\\t// - Early out ------------------------------\\n\\tif (tests.disableMain) {\\n\\t\\tns.tprint(\\\"WARNING: SCRIPT IS IN TEST ONLY MODE\\\");\\n\\t\\tns.exit();\\n\\t}\\n\\t\\n\\t// - Real Script Logic ----------------------\\n\\tns.print(\\\"Starting script...\\\");\\n\\tns.disableLog(\\\"ALL\\\");\\n}\\n\\n// ===== FUNCTIONS ==============================\\nexport function getScriptList(){\\n\\tvar scripts = [\\n\\t\\t// buy_server\\n\\t\\t\\\"/buy_server/buy_server-ns1.script\\\",\\n\\t\\t\\\"/buy_server/buy_server-ns2.js\\\",\\n\\t\\t// hacknet\\n\\t\\t\\\"/character/hacknet/hashmanager-ns2.js\\\",\\n\\t\\t\\\"/character/hacknet/node_autobuy-ns2.js\\\",\\n\\t\\t\\\"/character/hacknet/server_autobuy-ns2.js\\\",\\n\\t\\t// walet\\n\\t\\t\\\"/character/wallet-ns2.js\\\",\\n\\t\\t// deploy\\n\\t\\t\\\"/deploy/kill_all-ns2.js\\\",\\n\\t\\t\\\"/deploy/server_steal_basic-ns2.js\\\",\\n\\t\\t// functions\\n\\t\\t\\\"/functions/buildServerInfoArray-ns2.js\\\",\\n\\t\\t\\\"/functions/enumLib-ns1.script\\\",\\n\\t\\t\\\"/functions/enumLib-ns2.js\\\",\\n\\t\\t\\\"/functions/getNumOpenablePorts-ns2.js\\\",\\n\\t\\t\\\"/functions/getRootAccess-ns1.script\\\",\\n\\t\\t\\\"/functions/getRootAccess-ns2.js\\\",\\n\\t\\t\\\"/functions/getServerRamObj-ns2.js\\\",\\n\\t\\t// hacking\\n\\t\\t\\\"/hacking/advanced/install_and_run-ns1.script\\\",\\n\\t\\t\\\"/hacking/advanced/run-ns1.script\\\",\\n\\t\\t\\\"/hacking/basic/install_and_run-ns1.script\\\",\\n\\t\\t\\\"/hacking/basic/run-ns1.script\\\",\\n\\t\\t\\\"/hacking/guided_basic/install_and_run-ns1.script\\\",\\n\\t\\t\\\"/hacking/guided_basic/run-ns1.script\\\",\\n\\t\\t\\\"/hacking/early/early_hack_harakiri-sushi-ns1.script\\\",\\n\\t\\t\\\"/hacking/early/early_hack_joesguns-ns1.script\\\",\\n\\t\\t\\\"/hacking/early/early_hack_template-ns1.script\\\",\\n\\t\\t\\\"/hacking/helpers/grow_target_loop-ns1.script\\\",\\n\\t\\t\\\"/hacking/helpers/grow_target-ns1.script\\\",\\n\\t\\t\\\"/hacking/helpers/hack_target_loop-ns1.script\\\",\\n\\t\\t\\\"/hacking/helpers/hack_target-ns1.script\\\",\\n\\t\\t\\\"/hacking/helpers/weaken_target_loop-ns1.script\\\",\\n\\t\\t\\\"/hacking/helpers/weaken_target-ns1.script\\\",\\n\\t\\t\\\"/hacking/deployHackBots-ns2.js\\\",\\n\\t\\t\\\"/hacking/director-ns2.js\\\",\\n\\t\\t\\\"/hacking/monitor-ns2.js\\\",\\n\\t\\t// pserv\\n\\t\\t\\\"/pserv/deploy-ns1.script\\\",\\n\\t\\t\\\"/pserv/killall_and_deploy-ns1.script\\\",\\n\\t\\t\\\"/pserv/killall-ns1.script\\\",\\n\\t\\t// restart_run\\n\\t\\t\\\"/restart_run/restart_run-ns1.script\\\",\\n\\t\\t// templates\\n\\t\\t\\\"/templates/ns1_template.js\\\",\\n\\t\\t\\\"/templates/ns2_template.js\\\",\\n\\t\\t// world\\n\\t\\t\\\"/world/contracts/foreman-ns2.js\\\",\\n\\t\\t\\\"/world/gang/godfather-ns2.js\\\",\\n\\t];\\n\\n\\treturn scripts;\\n}\\n\\nexport function getDrecatedScriptList(){\\n\\tvar scripts = [\\n\\t\\t// hacking\\n\\t\\t\\\"/hacking/director-ns1.script\\\",\\n\\t];\\n\\n\\treturn scripts;\\n}\\n\\n// ===== TESTS ==================================\\nfunction executeTests(ns) {\\n\\tif (tests.testEnabled_getScriptList)\\n\\t\\ttest_getScriptList(ns);\\n}\\n\\nfunction test_getScriptList(ns) {\\n\\tns.print(\\\"==== TEST: test_getScriptList ====\\\");\\n\\n\\tscripts = getScriptList();\\n\\tfor (var i = 0; i < scripts.length; i++) {\\n\\t\\tns.print(scripts[i]);\\n\\t}\\n}\",\"filename\":\"/pull/_getScriptList-ns2.js\",\"module\":\"\",\"ramUsage\":1.6,\"server\":\"60.8.2.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"// ===== IMPORTS ==============\\n\\n\\n// ===== ARGS =================\\nvar sArgs = {\\n\\n};\\n\\n// ===== VARS =================\\nvar sVars = {\\n\\thashReserve : 0,\\n};\\n\\nvar tests = {\\n\\tenabled : false, // Master override for all tests\\n\\tdisableMain : false, // Disables all non-testing logic in main\\n\\ttestEnabled_TotalHacknetProductionEnabled : false,\\n\\ttestEnabled_getTotalHashCapacity : false,\\n\\ttestEnabled_evaluateMinimumHacknetProduction : false,\\n\\ttestEnabled_evaluateImporoveStudying : false,\\n};\\n\\nvar eUpgradeName = {\\n\\tsellForMoney : \\\"Sell for Money\\\",\\n\\tsellForCorporationFunds : \\\"Sell for Corporation Funds\\\",\\n\\treduceMinimumSecurity : \\\"Reduce Minimum Security\\\",\\n\\tincreaseMaximumMoney : \\\"Increase Maximum Money\\\",\\n\\timproveStudying : \\\"Improve Studying\\\",\\n\\timproveGymTraining : \\\"Improve Gym Training\\\",\\n\\texchangeForCorporationResearch : \\\"Exchange for Corporation Research\\\",\\n\\texchangeForBladeburnerRank : \\\"Exchange for Bladeburner Rank\\\",\\n\\texchangeForBladeburnerSkillPpoints : \\\"Exchange for Bladeburner SP\\\",\\n\\tgenerateCodingContract : \\\"Generate Coding Contract\\\",\\n};\\n\\n// ===== MAIN =================\\nexport async function main(ns) {\\n\\t// Real Logic\\n\\tif (!tests.disableMain) {\\n\\t\\tns.disableLog(\\\"ALL\\\");\\n\\t\\tns.print(\\\"Starting main function\\\");\\n\\t\\tvar upgradeToBuy = eUpgradeName.sellForMoney;\\n\\n\\t\\twhile(true) {\\n\\t\\t\\tupgradeToBuy = decideWhatToBuy(ns);\\n\\t\\t\\tns.print(\\\"Decided to buy: \\\" + upgradeToBuy);\\n\\t\\t\\tawait buyUpgrade(ns, upgradeToBuy);\\n\\t\\t\\tawait ns.sleep(100);\\n\\t\\t}\\n\\t}\\n\\telse {\\n\\t\\tns.tprint(\\\"WARNING: SCRIPT IS IN TEST ONLY MODE\\\");\\n\\t}\\n\\t\\n\\t// Tests\\n\\tif (tests.enabled)\\n\\t\\texecuteTests(ns);\\n}\\n\\n// ===== FUNCTIONS ============\\nfunction getTotalHashCapacity(ns) {\\n\\tvar hashCapacity = 0;\\n\\tvar nodeCount = ns.hacknet.numNodes();\\n\\n\\tfor (var i = 0; i < nodeCount; i++) {\\n\\t\\thashCapacity += 64 * Math.pow(2, ns.hacknet.getNodeStats(i).cache - 1);\\n\\t}\\n\\t\\n\\t\\n\\t// see how many hacknet nodes we have \\n\\t// see how many cache upgrades we have \\n\\t\\n\\treturn hashCapacity;\\n}\\n\\nfunction getTotalHacknetHashProduction(ns) {\\n\\tvar totalHacknetProduction = 0;\\n\\tvar nodeCount = ns.hacknet.numNodes();\\n\\t\\n\\tfor (var i = 0; i < nodeCount; i++) {\\n\\t\\ttotalHacknetProduction += ns.hacknet.getNodeStats(i).production;\\n\\t}\\n\\t\\n\\treturn totalHacknetProduction;\\n}\\n\\nfunction decideWhatToBuy(ns) {\\n\\tvar upgradeNameToPurchase = eUpgradeName.sellForMoney; // if nothing else, we'll decide to convert to cash\\n\\t\\n\\t/* Purchase Priority goals - Go down the list, and do the first thing that is true\\n\\t\\t1) Until our hacknet production is @ 1 hash/sec, we want more money (which will get dumped into more production\\n\\t\\t2) We should then start spending some on University upgrades \\n\\t\\tZ) Convert to cash (which we defaulted to when declaring the return variable)\\n\\t*/\\n\\t\\n\\t// 1) Until our hacknet production is @ 1 hash/sec, we want more money (which will get dumped into more production\\n\\tif (evaluateMinimumHacknetProduction(ns)) {\\n\\t\\tupgradeNameToPurchase = eUpgradeName.sellForMoney; \\n\\t\\treturn upgradeNameToPurchase;\\n\\t}\\n\\t\\n\\t// 2) We should then start spending some on University upgrades \\n\\tif (evaluateImporoveStudying(ns)) {\\n\\t\\tupgradeNameToPurchase = eUpgradeName.improveStudying; \\n\\t\\treturn upgradeNameToPurchase;\\n\\t}\\n\\t\\n\\treturn upgradeNameToPurchase;\\n}\\n\\nasync function buyUpgrade(ns, upgradeToBuy) {\\n\\tvar upgradeHashCost = ns.hacknet.hashCost(upgradeToBuy);\\n\\tvar desiredHashCount = ns.hacknet.numHashes() + sVars.hashReserve;\\n\\n\\twhile (desiredHashCount < upgradeHashCost){\\n\\t\\tns.print(\\\"Waiting for more hashes (Have: \\\" + ns.nFormat(desiredHashCount, \\\"0,0\\\") + \\\" / Want: \\\" + ns.nFormat(upgradeHashCost, \\\"0,0\\\") + \\\")\\\");\\n\\t\\tawait ns.sleep(10000);\\n\\t\\tupgradeHashCost = ns.hacknet.hashCost(upgradeToBuy);\\n\\t\\tdesiredHashCount = ns.hacknet.numHashes() + sVars.hashReserve;\\n\\t}\\n\\t\\n\\tif ((ns.hacknet.numHashes()-sVars.hashReserve) > ns.hacknet.hashCost(upgradeToBuy)) {\\n\\t\\tns.print(\\\"Spending hashes on: \\\" + upgradeToBuy);\\n\\t\\tns.hacknet.spendHashes(upgradeToBuy);\\n\\t}\\n}\\n\\nfunction evaluateMinimumHacknetProduction(ns) {\\n\\tif (getTotalHacknetHashProduction(ns) < 1) {\\n\\t\\treturn true;\\n\\t}\\n\\telse {\\n\\t\\treturn false;\\n\\t}\\n}\\n\\nfunction evaluateImporoveStudying(ns) {\\n\\tvar imporoveStudyingCost = ns.hacknet.hashCost(eUpgradeName.improveStudying);\\n\\tvar hashCapacity = getTotalHashCapacity(ns);\\n\\tvar hashCapacityPcnt = 0.50;\\n\\n\\tif (imporoveStudyingCost < hashCapacity * hashCapacityPcnt) {\\n\\t\\treturn true;\\n\\t}\\n\\telse {\\n\\t\\treturn false;\\n\\t}\\n}\\n\\n// ===== TESTS ================\\nfunction executeTests(ns) {\\n\\tif (tests.testEnabled_TotalHacknetProductionEnabled)\\n\\t\\ttest_getTotalHacknetHashProduction(ns);\\n\\tif (tests.testEnabled_getTotalHashCapacity)\\n\\t\\ttest_getTotalHashCapacity(ns);\\n\\tif (tests.testEnabled_evaluateMinimumHacknetProduction)\\n\\t\\ttest_evaluateMinimumHacknetProduction(ns);\\n\\tif (tests.testEnabled_evaluateImporoveStudying)\\n\\t\\ttest_evaluateImporoveStudying(ns);\\n}\\n\\nfunction test_getTotalHacknetHashProduction(ns) {\\n\\tns.print(\\\"==== TEST: test_getTotalHacknetHashProduction ====\\\");\\n\\tvar totalHashProduction = getTotalHacknetHashProduction(ns);\\n\\tns.print(\\\"Total Hash Production: \\\" + totalHashProduction);\\n}\\n\\nfunction test_getTotalHashCapacity(ns) {\\n\\tns.print(\\\"==== TEST: test_getTotalHashCapacity ====\\\");\\n\\tvar hashCapactiy = getTotalHashCapacity(ns);\\n\\tns.print(\\\"hashCapactiy: \\\" + hashCapactiy);\\n}\\n\\nfunction test_evaluateMinimumHacknetProduction(ns) {\\n\\tns.print(\\\"==== TEST: test_evaluateMinimumHacknetProduction ====\\\");\\n\\tvar resultOfEvaluation = evaluateMinimumHacknetProduction(ns);\\n\\tns.print(\\\"resultOfEvaluation: \\\" + resultOfEvaluation);\\n}\\n\\nfunction test_evaluateImporoveStudying(ns) {\\n\\tns.print(\\\"==== TEST: test_evaluateImporoveStudying ====\\\");\\n\\t\\n\\tvar imporoveStudyingCost = ns.hacknet.hashCost(eUpgradeName.improveStudying);\\n\\tns.print(\\\"imporoveStudyingCost: \\\" + imporoveStudyingCost);\\n\\t\\n\\tvar hashCapacity = getTotalHashCapacity(ns);\\n\\tns.print(\\\"hashCapacity: \\\" + hashCapacity);\\t\\n\\t\\n\\tvar resultOfEvaluation = evaluateImporoveStudying(ns);\\n\\tns.print(\\\"resultOfEvaluation: \\\" + resultOfEvaluation);\\n}\\n\\n// ===== REFERENCE ============\\n/* Function Reference\\nnumHashes()\\nhashCost(upgName)\\nspendHashes(upgName, upgTarget)\\n*/\\n\\n/* Hash Upgrade Table\\nSell for Money\\t\\t\\t\\t\\t\\t\\tBase Cost: 4.000\\t\\tSell hashes for $1m\\nSell for Corporation Funds\\t\\t\\t\\tBase Cost: 100.000\\t\\tSell hashes for $1b in Corporation funds\\nReduce Minimum Security\\t\\t\\t\\t\\tBase Cost: 50.000\\t\\tUse hashes to decrease the minimum security of a single server by 2%. Note that a server's minimum security cannot go below 1.\\nIncrease Maximum Money\\t\\t\\t\\t\\tBase Cost: 50.000\\t\\tUse hashes to increase the maximum amount of money on a single server by 2%\\nImprove Studying\\t\\t\\t\\t\\t\\tBase Cost: 100.000\\t\\tUse hashes to improve the experience earned when studying at a university by 20%. This effect persists until you install Augmentations\\nImprove Gym Training\\t\\t\\t\\t\\tBase Cost: 50.000\\t\\tUse hashes to improve the experience earned when training at the gym by 20%. This effect persists until you install Augmentations\\nExchange for Corporation Research\\t\\tBase Cost: 200.000\\t\\tExchange hashes for 1k Scientific Research in all of your Corporation's Industries\\nExchange for Bladeburner Rank\\t\\t\\tBase Cost: 250.000\\t\\tExchange hashes for 100 Bladeburner Rank\\nExchange for Bladeburner SP\\t\\t\\t\\tBase Cost: 250.000\\t\\tExchanges hashes for 10 Bladeburner Skill Points\\nGenerate Coding Contract\\t\\t\\t\\tBase Cost: 200.000\\t\\tGenerate a random Coding Contract somewhere on the network\\n*/\",\"filename\":\"/master/character/hacknet/hashmanager-ns2.js\",\"module\":\"\",\"ramUsage\":5.6,\"server\":\"60.8.2.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"// ===== IMPORTS ================================\\n\\n// ===== ARGS ===================================\\nfunction getScriptArgs(ns) {\\n    var scriptArgs = {\\n        firstArg : ns.args[0]\\n    };\\n    \\n    return scriptArgs;\\n}\\n// ===== VARS ===================================\\nvar sVars = {\\n\\tnodeCountLimit: 24,\\n\\tnodeLevelLimit: 200,\\n\\tnodeRamLimit: 1024,\\n\\tnodeCoresLimit: 16,\\n\\tnodeCacheLimit: 5,\\n\\tmoneySpendLimitPercent: 0.90,\\n\\trecoupTimeCap: 6*60*60, // 6 hours in seconds\\n};\\n\\nvar buy = {\\n\\tnothing: -1,\\n\\tnode: 0,\\n\\tlevel: 1,\\n\\tram: 2,\\n\\tcores: 3,\\n\\tcache: 4,\\n};\\n\\nvar tests = {\\n\\tenabled : false, // Master override for all tests\\n\\tdisableMain : false, // Disables all non-testing logic in main\\n\\ttestEnabled_exampleFunction : false,\\n};\\n\\n// ===== MAIN ===================================\\nexport async function main(ns) {\\n\\tvar sArgs = getScriptArgs(ns);\\n\\t\\n\\t// - Tests ----------------------------------\\n\\tif (tests.enabled)\\n\\t\\texecuteTests(ns);\\n\\t\\n\\t// - Early out ------------------------------\\n\\tif (tests.disableMain) {\\n\\t\\tns.tprint(\\\"WARNING: SCRIPT IS IN TEST ONLY MODE\\\");\\n\\t\\tns.exit();\\n\\t}\\n\\t\\n\\t// - Real Script Logic ----------------------\\n\\tns.print(\\\"Starting main function\\\");\\n\\tns.disableLog(\\\"getServerMoneyAvailable\\\");\\n\\tns.disableLog(\\\"sleep\\\");\\n\\n\\tvar done = false;\\n\\tvar thingToBuy = buy.nothing;\\n\\tvar playerMultipliers = ns.getHacknetMultipliers();\\n\\n\\t// I bet this script will break horribly if I don't have at least one node to start off with\\n\\tif (ns.hacknet.numNodes() === 0) {\\n\\t\\tns.print(\\\"Buying the first node\\\");\\n\\t\\tvar nodeCost = ns.hacknet.getPurchaseNodeCost();\\n\\n\\t\\tns.print(\\\"Waiting for more money to buy a node!\\\");\\n\\t\\tns.print(\\\"Want: $\\\" + ns.nFormat(nodeCost/sVars.moneySpendLimitPercent, \\\"0,0.00\\\"))\\n\\n\\t\\twhile(nodeCost > getMyMoney(ns) * sVars.moneySpendLimitPercent) {\\n\\t\\t\\tawait ns.sleep(5000);\\n\\t\\t}\\n\\t\\tns.hacknet.purchaseNode();\\n\\t}\\n\\n\\twhile (!done) {\\n\\t\\t// check to see what to buy\\n\\t\\tthingToBuy = evaluateHacknetPurchaseOptions(ns, sVars.nodeCountLimit, sVars.nodeLevelLimit, sVars.nodeRamLimit, sVars.nodeCoresLimit, playerMultipliers, sVars.recoupTimeCap);\\n\\n\\t\\t// buy the right thing\\n\\t\\tswitch(thingToBuy){\\n\\t\\t\\tcase buy.node:\\n\\t\\t\\t\\tvar nodeCost = ns.hacknet.getPurchaseNodeCost();\\n\\n\\t\\t\\t\\tns.print(\\\"Waiting for more money to buy a node!\\\");\\n\\t\\t\\t\\tns.print(\\\"Want: $\\\" + ns.nFormat(nodeCost/sVars.moneySpendLimitPercent, \\\"0,0.00\\\"))\\n\\t\\t\\t\\t\\n\\t\\t\\t\\twhile(nodeCost > getMyMoney(ns) * sVars.moneySpendLimitPercent) {\\n\\t\\t\\t\\t\\tawait ns.sleep(5000);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tns.print(\\\"Buying a node\\\");\\n\\t\\t\\t\\tpurchaseAndUpgradeNode(ns);\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\tcase buy.level:\\n\\t\\t\\t\\tns.print(\\\"Upgrading LEVELS of all nodes\\\");\\n\\t\\t\\t\\tawait upgradeAllHacknetNodeLevelAsync(ns);\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\tcase buy.ram:\\n\\t\\t\\t\\tns.print(\\\"Upgrading RAM of all nodes\\\");\\n\\t\\t\\t\\tawait upgradeAllHacknetNodeRamAsync(ns);\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\tcase buy.cores:\\n\\t\\t\\t\\tns.print(\\\"Upgrading CORES of all nodes\\\");\\n\\t\\t\\t\\tawait upgradeAllHacknetNodeCoresAsync(ns);\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\tcase buy.cache:\\n\\t\\t\\t\\tns.print(\\\"Upgrading CACHES of all nodes\\\");\\n\\t\\t\\t\\tawait upgradeAllHacknetNodeCacheAsync(ns);\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\tcase buy.nothing:\\n\\t\\t\\t\\tdone = true;\\n\\t\\t\\t\\tbreak;\\n\\t\\t}\\n\\t\\t\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n}\\n\\n// ===== FUNCTIONS ==============================\\nfunction getMyMoney(ns) {\\n    return ns.getServerMoneyAvailable(\\\"home\\\");\\n}\\n\\nfunction getHacknetNodeProduction(level, ram, cores, playerMultipliers) {\\n    var baseProduction = 0.001;\\n    var ramModifier = Math.pow(1.07, Math.log2(ram));\\n    var coresModifier = (cores + 4) / 5;\\n    var playerModifier = playerMultipliers.production;\\n\\n    return baseProduction * level * ramModifier * coresModifier * playerModifier;\\n}\\n\\nfunction convertHashProductionToMoney(hashProduction){\\n\\tvar moneyProduction = 1000000/(4/hashProduction);\\n\\treturn moneyProduction;\\n}\\n\\nfunction getCostToReachLevelFromScratch (desiredLevel, playerMultipliers) { \\n\\t// Note: I think this formula might be off, but it's close enough\\n\\tvar baseCost = 520;\\n\\tvar increasePerLevel = 1.04;\\n\\tvar playerLevelCostModifier = playerMultipliers.levelCost;\\n\\tvar totalCostForDesiredLevel = 0;\\n\\n\\tfor(var intermediateLevel = 1; intermediateLevel < desiredLevel; intermediateLevel++) {\\n\\t\\ttotalCostForDesiredLevel += baseCost * Math.pow(increasePerLevel, intermediateLevel-1) * playerLevelCostModifier;\\n\\t}\\n\\n\\treturn totalCostForDesiredLevel;\\n}\\n\\nfunction getCostToReachRamFromScratch (desiredRam, playerMultipliers) {\\n\\t// Note: I think this formula might be off, but it's close enough\\n\\tvar desiredRamLevel = (Math.log(desiredRam)/Math.log(2)) + 1;\\n\\tvar baseCost = 30000;\\n\\tvar increasePerRamLevel = 2.56;\\n\\tvar playerRamCostModifier = playerMultipliers.ramCost;\\n\\tvar totalCostForDesiredRamLevel = 0;\\n\\n\\tfor(var intermediateRamLevel = 1; intermediateRamLevel < desiredRamLevel; intermediateRamLevel++) {\\n\\t\\ttotalCostForDesiredRamLevel += baseCost * Math.pow(increasePerRamLevel, intermediateRamLevel-1) * playerRamCostModifier;\\n\\t}\\n\\n\\treturn totalCostForDesiredRamLevel;\\n}\\n\\nfunction getCostToReachCoresFromScratch (desiredCores, playerMultipliers) {\\n\\t// Note: I think this formula might be off, but it's close enough\\n\\tvar baseCost = 500000;\\n\\tvar increasePerCore = 1.48;\\n\\tvar playerCoresCostModifier = playerMultipliers.coreCost;\\n\\tvar totalCostForDesiredCores = 0;\\n\\n\\tfor(var intermediateCores = 1; intermediateCores < desiredCores; intermediateCores++) {\\n\\t\\ttotalCostForDesiredCores += baseCost * Math.pow(increasePerCore, intermediateCores-1) * playerCoresCostModifier;\\n\\t}\\n\\n\\treturn totalCostForDesiredCores;\\n}\\n\\nfunction getLowestLevelHacknetNodeStats(ns) {\\n    ns.print(\\\"Finding node with lowest level\\\");\\n    var lowestLevelNodeStats = ns.hacknet.getNodeStats(0);\\n\\n    for (var i = 0; i < ns.hacknet.numNodes(); i++) {\\n        var thisNodesStats = ns.hacknet.getNodeStats(i);\\n\\n        if (thisNodesStats.level < lowestLevelNodeStats.level) {\\n            lowestLevelNodeStats = thisNodesStats;\\n        }\\n    }\\n\\n    return lowestLevelNodeStats;\\n}\\n\\nfunction getLowestRamHacknetNodeStats(ns) {\\n\\tns.print(\\\"Finding node with lowest ram\\\");\\n    var lowestRamNodeStats = ns.hacknet.getNodeStats(0);\\n\\n    for (var i = 0; i < ns.hacknet.numNodes(); i++) {\\n        var thisNodesStats = ns.hacknet.getNodeStats(i);\\n\\n        if (thisNodesStats.ram < lowestRamNodeStats.ram) {\\n            lowestRamNodeStats = thisNodesStats;\\n        }\\n    }\\n\\n    return lowestRamNodeStats;\\n}\\n\\nfunction getLowestCoresHacknetNodeStats(ns) {\\n    ns.print(\\\"Finding node with lowest cores\\\");\\n    var lowestCoresNodeStats = ns.hacknet.getNodeStats(0);\\n\\n    for (var i = 0; i < ns.hacknet.numNodes(); i++) {\\n        var thisNodesStats = ns.hacknet.getNodeStats(i);\\n\\n        if (thisNodesStats.cores < lowestCoresNodeStats.cores) {\\n            lowestCoresNodeStats = thisNodesStats;\\n        }\\n    }\\n\\n    return lowestCoresNodeStats;\\n}\\n\\nfunction getAllLowestHacknetNodeStats(ns) {\\n\\tns.print(\\\"Scanning thru all nodes to find ones with the lowest of each stat\\\");\\n    var allLowestNodeStats = {\\n\\t\\tlowestLevelNodeStats : ns.hacknet.getNodeStats(0),\\n\\t\\tlowestRamNodeStats : ns.hacknet.getNodeStats(0),\\n\\t\\tlowestCoresNodeStats : ns.hacknet.getNodeStats(0),\\n\\t};\\n\\tallLowestNodeStats.lowestLevelNodeStats.nodeIndex = 0;\\n\\tallLowestNodeStats.lowestRamNodeStats.nodeIndex = 0;\\n\\tallLowestNodeStats.lowestCoresNodeStats.nodeIndex = 0;\\n\\n    for (var i = 0; i < ns.hacknet.numNodes(); i++) {\\n\\t\\tns.print(\\\"Evaluating if node \\\" + i + \\\" is lowest stat for anything\\\");\\n        var thisNodesStats = ns.hacknet.getNodeStats(i);\\n\\n        if (thisNodesStats.cores < allLowestNodeStats.lowestLevelNodeStats.cores) {\\n            allLowestNodeStats.lowestLevelNodeStats = thisNodesStats;\\n\\t\\t\\tallLowestNodeStats.lowestLevelNodeStats.nodeIndex = i;\\n        }\\n\\t\\t\\n        if (thisNodesStats.cores < allLowestNodeStats.lowestRamNodeStats.cores) {\\n            allLowestNodeStats.lowestRamNodeStats = thisNodesStats;\\n\\t\\t\\tallLowestNodeStats.lowestRamNodeStats.nodeIndex = i;\\n        }\\n\\t\\t\\n        if (thisNodesStats.cores < allLowestNodeStats.lowestCoresNodeStats.cores) {\\n            allLowestNodeStats.lowestCoresNodeStats = thisNodesStats;\\n\\t\\t\\tallLowestNodeStats.lowestCoresNodeStats.nodeIndex = i;\\n        }\\n    }\\n\\n    return allLowestNodeStats;\\n}\\n\\nfunction evaluateHacknetPurchaseOptions(ns, maxNodes, maxLevel, maxRam, maxCores, playerMultipliers, recoupTimeCap) {\\n    ns.print(\\\"Evaluationg what to buy...\\\");\\n\\t// we're just going to go off the first node, assuming all others are updgraded\\n\\tvar currentNodeCount = ns.hacknet.numNodes();\\n\\tvar baseNodeIndex = 0;\\n\\tvar allLowestHacknetNodeStats = getAllLowestHacknetNodeStats(ns);\\n\\tvar lowestLevelNodeStats = allLowestHacknetNodeStats.lowestLevelNodeStats;\\n\\tvar lowestRamNodeStats = allLowestHacknetNodeStats.lowestRamNodeStats;\\n\\tvar lowestCoresNodeStats = allLowestHacknetNodeStats.lowestCoresNodeStats;\\n\\tvar newNodeCost = ns.hacknet.getPurchaseNodeCost();\\n\\t    \\n\\t// the math to truely evaluate a new node would be a PITA so instead,\\n\\t// if we aren't at the max, and it's cheaper than the cost to upgrade\\n\\t// the 1st node we just say fuck it and buy a new node\\n    if (currentNodeCount < maxNodes) {\\n\\t\\tns.print(\\\"Checking to see if buying a node is cheaper than anything else\\\");\\n\\t\\tif ( newNodeCost < ns.hacknet.getLevelUpgradeCost(baseNodeIndex, 1) &&\\n\\t\\t\\tnewNodeCost < ns.hacknet.getRamUpgradeCost(baseNodeIndex, 1) &&\\n\\t\\t\\tnewNodeCost < ns.hacknet.getCoreUpgradeCost(baseNodeIndex, 1)\\n\\t\\t) {\\n            ns.print(\\\"Choosing to buy a node\\\");\\n\\t\\t\\treturn buy.node;\\n\\t\\t}\\n\\t}\\n\\t\\n\\t// Improving the cache size doesn't get us more production, but can be nice to have\\n\\t// Because there is no comparitive math here, we just early out by claiming we're going to buy a cache level\\n\\tif (evaluateImprovingCaches(ns)){\\n\\t\\tns.print(\\\"Choosing to buy cache upgrades\\\");\\n\\t\\treturn buy.cache;\\n\\t}\\n\\t\\n\\t\\n\\t// get the recoup time of buying a node w/o upgrading it\\n\\tvar bareNodeRecoupTime = getBareNodeRecoupTime(ns, maxNodes, playerMultipliers);\\t\\n\\t\\n\\t// get the recoup time of buying a node and upgrading it to match node zero\\n    var upgradedNodeRecoupTime = getUpgradedNodeRecoupTime(ns, maxNodes, playerMultipliers);\\n\\t\\n\\t// get the recoup time of buying a level\\n\\tvar levelRecoupTime = getLevelRecoupTime(ns, lowestLevelNodeStats, maxLevel, playerMultipliers);\\n\\t\\n\\t// get the recoup time of buying RAM\\n    var ramRecoupTime = getRamRecoupTime(ns, lowestRamNodeStats, maxRam, playerMultipliers);\\n\\t\\n\\t// get the recoup time of buying a core\\n\\tvar coresRecoupTime = getCoresRecoupTime(ns, lowestCoresNodeStats, maxCores, playerMultipliers);\\n\\t\\n\\t// Do comparisons to see what to buy\\n\\tns.print(\\\"=== Ready to make a decision ===\\\");\\n\\tns.print(\\\"Getting the minimum of: \\\");\\n\\tns.print(\\\"--- bareNodeRecoupTime:\\\" + ns.nFormat(bareNodeRecoupTime, \\\"0,0\\\") + \\\" seconds (\\\" + ns.nFormat(bareNodeRecoupTime/60, \\\"0,0\\\") + \\\" minutes)\\\");\\n\\tns.print(\\\"--- upgradedNodeRecoupTime:\\\" + ns.nFormat(upgradedNodeRecoupTime, \\\"0,0\\\") + \\\" seconds (\\\" + ns.nFormat(upgradedNodeRecoupTime/60, \\\"0,0\\\") + \\\" minutes)\\\");\\n\\tns.print(\\\"--- levelRecoupTime:\\\" + ns.nFormat(levelRecoupTime, \\\"0,0\\\") + \\\" seconds (\\\" + ns.nFormat(levelRecoupTime/60, \\\"0,0\\\") + \\\" minutes)\\\");\\n\\tns.print(\\\"--- ramRecoupTime:\\\" + ns.nFormat(ramRecoupTime, \\\"0,0\\\") + \\\" seconds (\\\" + ns.nFormat(ramRecoupTime/60, \\\"0,0\\\") + \\\" minutes)\\\");\\n\\tns.print(\\\"--- coresRecoupTime:\\\" + ns.nFormat(coresRecoupTime, \\\"0,0\\\") + \\\" seconds (\\\" + ns.nFormat(coresRecoupTime/60, \\\"0,0\\\") + \\\" minutes)\\\");\\n\\tvar minRecoupTime = Math.min(bareNodeRecoupTime, upgradedNodeRecoupTime, levelRecoupTime, ramRecoupTime, coresRecoupTime);\\n\\t\\n\\tif (bareNodeRecoupTime === minRecoupTime && bareNodeRecoupTime < recoupTimeCap)\\n\\t{\\n        ns.print(\\\"Choosing to buy a node\\\");\\n        return buy.node;\\n\\t}\\t\\n\\telse if (upgradedNodeRecoupTime === minRecoupTime && upgradedNodeRecoupTime < recoupTimeCap)\\n\\t{\\n        ns.print(\\\"Choosing to buy a node\\\");\\n        return buy.node;\\n\\t}\\t\\n    else if (levelRecoupTime === minRecoupTime && levelRecoupTime < recoupTimeCap)\\n    {\\n        ns.print(\\\"Choosing to buy a level\\\");\\n        return buy.level;\\n    }\\n    else if (ramRecoupTime === minRecoupTime && ramRecoupTime < recoupTimeCap)\\n    {\\n        ns.print(\\\"Choosing to buy ram\\\");\\n        return buy.ram;\\n    }\\n    else if (coresRecoupTime === minRecoupTime && coresRecoupTime < recoupTimeCap)\\n    {\\n        ns.print(\\\"Choosing to buy cores\\\");\\n        return buy.cores;\\n    }\\n    \\n    return buy.nothing;\\n}\\n\\nfunction evaluateImprovingCaches(ns) {\\n\\tns.print(\\\"Evauluating if we should buy caches\\\");\\n\\tvar shouldBuy = false;\\n\\tvar baseNode = 0;\\n\\tvar newNodeCost = ns.hacknet.getPurchaseNodeCost();\\n\\tvar levelUpgradeCost = ns.hacknet.getLevelUpgradeCost(baseNode, 1);\\n\\tvar ramUpgradeCost = ns.hacknet.getRamUpgradeCost(baseNode, 1);\\n\\tvar coreUpgradeCost = ns.hacknet.getCoreUpgradeCost(baseNode, 1);\\n\\tvar cacheUpgradeCost = ns.hacknet.getCacheUpgradeCost(baseNode, 1);\\n\\t // Multipliers on cost to be less than, lower means longer time between buying caches\\n\\tvar levelCostModifier = 0.50;\\n\\tvar ramCostModifier = 0.50;\\n\\tvar coreCostModifier = 0.50;\\n\\tvar cacheCostModifier = 0.50;\\n\\t\\n\\tif (cacheUpgradeCost < newNodeCost*levelCostModifier &&\\n\\t\\tcacheUpgradeCost < levelUpgradeCost*ramCostModifier &&\\n\\t\\tcacheUpgradeCost < ramUpgradeCost*coreCostModifier &&\\n\\t\\tcacheUpgradeCost < coreUpgradeCost*cacheCostModifier \\n\\t) {\\n\\t\\tshouldBuy = true;\\n\\t}\\n\\t\\n\\treturn shouldBuy;\\n}\\n\\nfunction getBareNodeRecoupTime(ns, maxNodes, playerMultipliers) {\\n\\tvar bareNodeRecoupTime = Number.MAX_VALUE;\\n\\tvar newNodeCost = ns.hacknet.getPurchaseNodeCost();\\n\\tvar currentNodeCount = ns.hacknet.numNodes();\\n\\t\\n    if (currentNodeCount < maxNodes) {\\n\\t\\tns.print(\\\"=== Determining bareNodeRecoupTime ===\\\");\\n\\t\\t\\n\\t\\tvar bareNodeProduction = getHacknetNodeProduction(1, 1, 1, playerMultipliers);\\n\\t\\tns.print(\\\"bareNodeProduction: \\\" + bareNodeProduction);\\n\\t\\t\\n\\t\\tns.print(\\\"newNodeCost: \\\" + newNodeCost);\\n\\t\\t\\n\\t\\tbareNodeRecoupTime = newNodeCost/convertHashProductionToMoney(bareNodeProduction);\\n\\t\\tns.print(\\\"bareNodeRecoupTime: \\\" + bareNodeRecoupTime);\\n\\t}\\n\\t\\n\\treturn bareNodeRecoupTime;\\n}\\n\\nfunction  getUpgradedNodeRecoupTime(ns, maxNodes, playerMultipliers) {\\n\\tvar upgradedNodeRecoupTime = Number.MAX_VALUE;\\n\\tvar newNodeCost = ns.hacknet.getPurchaseNodeCost();\\n\\tvar currentNodeCount = ns.hacknet.numNodes();\\n\\tvar baseNodeIndex = 0;\\n\\tvar baseNodeStats = ns.hacknet.getNodeStats(baseNodeIndex);\\n\\t\\n    if (currentNodeCount < maxNodes) {\\n\\t\\tns.print(\\\"=== Determining upgradedNodeRecoupTime ===\\\");\\n\\t\\t\\n\\t\\tvar upgradedNodeProduction = baseNodeStats.production;\\n\\t\\tns.print(\\\"upgradedNodeProduction/baseNodeProduction: \\\" + upgradedNodeProduction);\\n\\t\\t\\n\\t\\tns.print(\\\"newNodeCost: \\\" + newNodeCost);\\n\\t\\t\\n\\t\\tvar levelUpgradeCost = getCostToReachLevelFromScratch(baseNodeStats.level, playerMultipliers);\\n\\t\\tns.print(\\\"levelUpgradeCost: \\\" + levelUpgradeCost);\\n\\t\\t\\n\\t\\tvar ramUpgradeCost = getCostToReachRamFromScratch(baseNodeStats.ram, playerMultipliers);\\n\\t\\tns.print(\\\"ramUpgradeCost: \\\" + ramUpgradeCost);\\n\\t\\t\\n\\t\\tvar coresUpgradeCost = getCostToReachCoresFromScratch(baseNodeStats.cores, playerMultipliers);\\n\\t\\tns.print(\\\"coresUpgradeCost: \\\" + coresUpgradeCost);\\n\\t\\t\\n\\t\\tvar upgradedNodeTotalCost = newNodeCost + levelUpgradeCost + ramUpgradeCost + coresUpgradeCost;\\n\\t\\tns.print(\\\"upgradedNodeTotalCost: \\\" + upgradedNodeTotalCost);\\n\\t\\t\\n\\t\\tupgradedNodeRecoupTime = upgradedNodeTotalCost/convertHashProductionToMoney(upgradedNodeProduction);\\n\\t\\tns.print(\\\"upgradedNodeRecoupTime: \\\" + upgradedNodeRecoupTime);\\n\\t\\t\\n\\t}\\n\\t\\n\\treturn upgradedNodeRecoupTime;\\n}\\n\\nfunction  getLevelRecoupTime(ns, lowestLevelNodeStats, maxLevel, playerMultipliers) {\\n\\tvar levelRecoupTime = Number.MAX_VALUE;\\n\\t\\n    if (lowestLevelNodeStats.level < maxLevel) {\\n\\t\\tns.print(\\\"=== Determining levelRecoupTime ===\\\");\\n\\t\\t\\n\\t\\tns.print(\\\"lowestLevelNodeStats.production: \\\" + lowestLevelNodeStats.production);\\n\\t\\n        var nextLevelProduction = getHacknetNodeProduction(lowestLevelNodeStats.level+1, lowestLevelNodeStats.ram, lowestLevelNodeStats.cores, playerMultipliers);\\n        ns.print(\\\"nextLevelProduction: \\\" + nextLevelProduction);\\n        \\n        var nextLevelProductionDelta = nextLevelProduction - lowestLevelNodeStats.production;\\n        ns.print(\\\"nextLevelProductionDelta: \\\" + nextLevelProductionDelta);\\n        \\n\\t\\tvar nextLevelCost = ns.hacknet.getLevelUpgradeCost(lowestLevelNodeStats.nodeIndex, 1);\\n        ns.print(\\\"nextLevelCost: \\\" + nextLevelCost);\\n        \\n\\t\\tlevelRecoupTime = nextLevelCost/convertHashProductionToMoney(nextLevelProductionDelta);\\n\\t\\tns.print(\\\"levelRecoupTime:\\\" + levelRecoupTime);\\n\\t}\\n\\t\\n\\treturn levelRecoupTime;\\n}\\n\\nfunction  getRamRecoupTime(ns, lowestRamNodeStats, maxRam, playerMultipliers) {\\n\\tvar ramRecoupTime = Number.MAX_VALUE;\\n\\t\\n    if (lowestRamNodeStats.ram < maxRam) {\\n\\t\\tns.print(\\\"=== Determining ramRecoupTime ===\\\");\\n\\t\\tns.print(\\\"lowestRamNodeStats.production: \\\" + lowestRamNodeStats.production);\\n\\t\\n        var nextRamProduction = getHacknetNodeProduction(lowestRamNodeStats.level, lowestRamNodeStats.ram+1, lowestRamNodeStats.cores, playerMultipliers);\\n        ns.print(\\\"nextRamProduction: \\\" + nextRamProduction);\\n        \\n        var nextRamProductionDelta = nextRamProduction - lowestRamNodeStats.production;\\n        ns.print(\\\"nextRamProductionDelta: \\\" + nextRamProductionDelta);\\n        \\n\\t\\tvar nextRamCost = ns.hacknet.getRamUpgradeCost(lowestRamNodeStats.nodeIndex, 1);\\n        ns.print(\\\"nextRamCost: \\\" + nextRamCost);\\n        \\n\\t\\tramRecoupTime = nextRamCost/convertHashProductionToMoney(nextRamProductionDelta);\\n\\t\\tns.print(\\\"ramRecoupTime:\\\" + ramRecoupTime);\\n\\t}\\n\\t\\n\\treturn ramRecoupTime;\\n}\\n\\nfunction  getCoresRecoupTime(ns, lowestCoresNodeStats, maxCores, playerMultipliers) {\\n\\tvar coresRecoupTime = Number.MAX_VALUE;\\n\\t\\n    if (lowestCoresNodeStats.cores < maxCores) {\\n\\t\\tns.print(\\\"=== Determining coresRecoupTime ===\\\");\\n\\t\\t\\n\\t\\tns.print(\\\"lowestCoresNodeStats.production: \\\" + lowestCoresNodeStats.production);\\n\\t\\tns.print(\\\"lowestCoresNodeStats.level: \\\" + lowestCoresNodeStats.level);\\n\\t\\tns.print(\\\"lowestCoresNodeStats.ram: \\\" + lowestCoresNodeStats.ram);\\n\\t\\tns.print(\\\"lowestCoresNodeStats.cores: \\\" + lowestCoresNodeStats.cores);\\n\\t\\t\\n        var nextCoreProduction = getHacknetNodeProduction(lowestCoresNodeStats.level, lowestCoresNodeStats.ram, lowestCoresNodeStats.cores+1, playerMultipliers);\\n        ns.print(\\\"nextCoreProduction: \\\" + nextCoreProduction);\\n        \\n\\t\\tvar nextCoreProductionDelta = nextCoreProduction - lowestCoresNodeStats.production;\\n        ns.print(\\\"nextCoreProductionDelta: \\\" + nextCoreProductionDelta);\\n        \\n\\t\\tvar nextCoreCost = ns.hacknet.getCoreUpgradeCost(lowestCoresNodeStats.nodeIndex, 1);\\n        ns.print(\\\"nextCoreCost: \\\" + nextCoreCost);\\n\\t\\t\\n\\t\\tcoresRecoupTime = nextCoreCost/convertHashProductionToMoney(nextCoreProductionDelta);\\n\\t\\tns.print(\\\"coresRecoupTime:\\\" + coresRecoupTime);\\n\\t}\\n\\t\\n\\treturn coresRecoupTime;\\n}\\n\\nasync function upgradeAllHacknetNodeLevelAsync(ns) {\\n    // we're keying desired amount off of the starting node\\n    var desiredLevel = ns.hacknet.getNodeStats(0).level + 1;\\n    \\n    // iterate thru all of our hacknet nodes\\n    for (var i = 0; i < ns.hacknet.numNodes(); i++) {\\n        await upgradeNodeToDesiredLevelAsync(ns, i, desiredLevel);\\n    }\\n}\\n\\nasync function upgradeAllHacknetNodeRamAsync(ns) {\\n    // we're keying desired amount off of the starting node\\n    var desiredRam = ns.hacknet.getNodeStats(0).ram + 1;\\n    \\n    // iterate thru all of our hacknet nodes\\n    for (var i = 0; i < ns.hacknet.numNodes(); i++) {\\n        await upgradeNodeToDesiredRamAsync(ns, i, desiredRam);\\n    }\\n}\\n\\nasync function upgradeAllHacknetNodeCoresAsync(ns) {\\n    // we're keying desired amount off of the starting cores\\n    var desiredCores = ns.hacknet.getNodeStats(0).cores + 1;\\n    \\n    // iterate thru all of our hacknet cores\\n    for (var i = 0; i < ns.hacknet.numNodes(); i++) {\\n        await upgradeNodeToDesiredCoresAsync(ns, i, desiredCores);\\n    }\\n}\\n\\nasync function upgradeAllHacknetNodeCacheAsync(ns) {\\n    // we're keying desired amount off of the starting cores\\n    var desiredCache = ns.hacknet.getNodeStats(0).cache + 1;\\n    \\n    // iterate thru all of our hacknet cores\\n    for (var i = 0; i < ns.hacknet.numNodes(); i++) {\\n        await upgradeNodeToDesiredCacheAsync(ns, i, desiredCache);\\n    }\\n}\\n\\nasync function upgradeNodeToDesiredLevelAsync(ns, nodeIndex, desiredLevel) {\\n    // Keep going until we hit the desired level\\n    while (ns.hacknet.getNodeStats(nodeIndex).level < desiredLevel) {\\n        var cost = ns.hacknet.getLevelUpgradeCost(nodeIndex, 1);\\n        \\n        // Wait to have enough money to buy the next level\\n\\t\\tns.print(\\\"Waiting for more money to buy a level\\\");\\n\\t\\tns.print(\\\"Want: $\\\" + ns.nFormat(cost/sVars.moneySpendLimitPercent, \\\"0,0.00\\\"))\\n        while (cost > getMyMoney(ns) * sVars.moneySpendLimitPercent) {\\n            await ns.sleep(5000);\\n        }\\n        \\n        ns.hacknet.upgradeLevel(nodeIndex, 1);\\n    }\\n}\\n\\nasync function upgradeNodeToDesiredRamAsync(ns, nodeIndex, desiredRam) {\\n    // Keep going until we hit the desired ram\\n    while (ns.hacknet.getNodeStats(nodeIndex).ram < desiredRam) {\\n        var cost = ns.hacknet.getRamUpgradeCost(nodeIndex, 1);\\n        \\n        // Wait to have enough money to buy the next ram\\n\\t\\tns.print(\\\"Waiting for more money to buy a RAM\\\");\\n\\t\\tns.print(\\\"Want: $\\\" + ns.nFormat(cost/sVars.moneySpendLimitPercent, \\\"0,0.00\\\"))\\n        while (cost > getMyMoney(ns) * sVars.moneySpendLimitPercent) {\\n            await ns.sleep(5000);\\n        }\\n        \\n        ns.hacknet.upgradeRam(nodeIndex, 1);\\n    }\\n}\\n\\nasync function upgradeNodeToDesiredCoresAsync(ns, nodeIndex, desiredCores) {\\n    // Keep going until we hit the desired cores\\n    while (ns.hacknet.getNodeStats(nodeIndex).cores < desiredCores) {\\n        var cost = ns.hacknet.getCoreUpgradeCost(nodeIndex, 1);\\n        \\n        // Wait to have enough money to buy the next cores\\n\\t\\tns.print(\\\"Waiting for more money to buy a core\\\");\\n\\t\\tns.print(\\\"Want: $\\\" + ns.nFormat(cost/sVars.moneySpendLimitPercent, \\\"0,0.00\\\"))\\n        while (cost > getMyMoney(ns) * sVars.moneySpendLimitPercent) {\\n            await ns.sleep(5000);\\n        }\\n        \\n        ns.hacknet.upgradeCore(nodeIndex, 1);\\n    }\\n}\\n\\nasync function upgradeNodeToDesiredCacheAsync(ns, nodeIndex, desiredCache) {\\n    // Keep going until we hit the desired cache amount\\n    while (ns.hacknet.getNodeStats(nodeIndex).cache < desiredCache) {\\n        var cost = ns.hacknet.getCacheUpgradeCost(nodeIndex, 1);\\n        \\n        // Wait to have enough money to buy the next cache\\n        while (cost > getMyMoney(ns) * sVars.moneySpendLimitPercent) {\\n            ns.print(\\\"Waiting for more money to buy a cache upgrade\\\");\\n            await ns.sleep(5000);\\n        }\\n        \\n        ns.hacknet.upgradeCache(nodeIndex, 1);\\n    }\\n}\\n\\nasync function purchaseAndUpgradeNode(ns) {\\n    // buy a new node and get it's stats\\n    newNodeIndex = ns.hacknet.purchaseNode();\\n    \\n    // get stats for node 0, which should have the latest upgrades\\n    baseNodeStats = ns.hacknet.getNodeStats(0);\\n    \\n    var desiredLevel = baseNodeStats.level;\\n    var desiredRam = baseNodeStats.ram;\\n    var desiredCores = baseNodeStats.cores;\\n    var desiredCache = baseNodeStats.cache;\\n    \\n    await upgradeNodeToDesiredLevelAsync(ns, newNodeIndex, desiredLevel);\\n    await upgradeNodeToDesiredRamAsync(ns, newNodeIndex, desiredRam);\\n    await upgradeNodeToDesiredCoresAsync(ns, newNodeIndex, desiredCores);\\n\\tawait upgradeNodeToDesiredCacheAsync(ns, newNodeIndex, desiredCache);\\n}\\n\\nasync function upgradeAllToMatchBaseNodeAsync(ns) {\\n    baseNodeStats = ns.hacknet.getNodeStats(0);\\n    \\n    var desiredLevel = baseNodeStats.level;\\n    var desiredRam = baseNodeStats.ram;\\n    var desiredCores = baseNodeStats.cores;\\n    var desiredCache = baseNodeStats.cache;\\n    \\n    // // iterate thru all of our hacknet cores\\n\\tfor (var nodeIndex = 0; nodeIndex < ns.hacknet.numNodes(); nodeIndex++) {\\n\\t\\tns.print(\\\"Bringing node \\\" + nodeIndex + \\\" up to spec with base node\\\");\\n\\t\\tawait upgradeNodeToDesiredLevelAsync(ns, nodeIndex, desiredLevel);\\n\\t\\tawait upgradeNodeToDesiredRamAsync(ns, nodeIndex, desiredRam);\\n\\t\\tawait upgradeNodeToDesiredCoresAsync(ns, nodeIndex, desiredCores);\\n\\tawait upgradeNodeToDesiredCacheAsync(ns, newNodeIndex, desiredCache);\\n    }\\n}\\n\\n// ===== TESTS ==================================\\nfunction executeTests(ns) {\\n\\tif (tests.testEnabled_exampleFunction)\\n\\t\\ttest_exampleFunction(ns);\\n}\\n\\nfunction test_exampleFunction(ns) {\\n\\tns.print(\\\"==== TEST: test_exampleFunction ====\\\");\\n\\n}\",\"filename\":\"/master/character/hacknet/server_autobuy-ns2.js\",\"module\":\"\",\"ramUsage\":9.7,\"server\":\"60.8.2.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"// ===== IMPORTS ==============\\nimport * as bsi from \\\"/master/functions/buildServerInfoArray-ns2.js\\\";\\nimport * as hpn from \\\"/master/functions/getNumOpenablePorts-ns2.js\\\";\\nimport * as gra from \\\"/master/functions/getRootAccess-ns2.js\\\";\\n\\n// ===== ARGS =================\\nvar sArgs = {\\n    \\n};\\n\\n// ===== VARS =================\\nvar sVars = {\\n    installScript : \\\"/master/hacking/basic/install_and_run-ns1.script\\\",\\n    hackingTarget : \\\"max-hardware\\\",\\n};\\n\\nvar tests = {\\n\\tenabled : false, // Master override for all tests\\n\\ttestExampleEnabled : false,\\n};\\n\\n// ===== MAIN =================\\nexport async function main(ns) {\\n\\tns.disableLog(\\\"ALL\\\");\\n\\n    // figure out how many ports I can steal\\n    var hackablePortNum = await hpn.getNumOpenablePorts(ns);\\n    ns.print(\\\"I can hack this many ports: \\\" + hackablePortNum);\\n    \\n    // build get the list of servers\\n    var serverList = await bsi.buildServerInfoArray(ns);\\n    \\n    // based on how many ports I can open, use the install and run script\\n    for (var i = 0; i < serverList.length; i++){\\n        var thisServer = serverList[i];\\n        \\n        if(thisServer.numPortsRequired <= hackablePortNum &&\\n\\t\\t  thisServer.name !== \\\"home\\\") {\\n            // get root access\\n\\t\\t\\tif (ns.hasRootAccess(thisServer.name) === false) {\\n\\t\\t\\t\\tns.print(\\\"getting access on \\\" + thisServer.name + \\\" which needs ports: \\\" + thisServer.numPortsRequired);\\n\\t\\t\\t\\tawait gra.getRootAccess(ns, thisServer.name);\\n\\t\\t\\t}\\n            \\n            // install the hack script\\n\\t\\t\\tns.killall(thisServer.name);\\n        }\\n    }\\n\\t\\n\\t// Tests\\n\\tif (tests.enabled)\\n\\t\\texecuteTests(ns);\\n}\\n\\n// ===== FUNCTIONS ============\\n\\n\\n// ===== TESTS ================\\nfunction executeTests(ns) {\\n\\tif (tests.testExampleEnabled)\\n\\t\\ttestExample(ns);\\n}\\n\\nfunction testExample(ns) {\\n\\tns.print(\\\"==== TEST: testExample ====\\\");\\n\\n}\",\"filename\":\"/master/deploy/kill_all-ns2.js\",\"module\":\"\",\"ramUsage\":3.7,\"server\":\"60.8.2.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"// ===== IMPORTS ==============\\n\\n// ===== ARGS =================\\nfunction getScriptArgs(ns) {\\n    var scriptArgs = {\\n        hackingTarget : ns.args[0]\\n    };\\n    \\n    return scriptArgs;\\n}\\n\\n// ===== VARS =================\\nvar sVars = {\\n\\n};\\n\\nvar tests = {\\n\\tenabled : true, // Master override for all tests\\n\\tdisableMain : true, // Disables all non-testing logic in main\\n\\ttestEnabled_exampleFunction : false,\\n\\ttestEnabled_nameDump : false,\\n\\ttestEnabled_nameAndPortsDump : false, \\n    testEnabled_dataDump : false,\\n    testEnabled_testScanArrayDump : false,\\n    testEnabled_sortByRequiredHackShowMaxMoney : true,\\n};\\n\\n// ===== MAIN =================\\nexport async function main(ns) {\\n    var sArgs = getScriptArgs(ns);\\n    \\n\\t// - Tests ----------------\\n\\tif (tests.enabled)\\n\\t\\tawait executeTests(ns);\\n\\t\\n\\t// - Early out ------------\\n\\tif (tests.disableMain) {\\n\\t\\tns.tprint(\\\"WARNING: SCRIPT IS IN TEST ONLY MODE\\\");\\n\\t\\tns.exit();\\n\\t}\\n\\t\\n\\t// - Real Script Logic ----\\n    ns.disableLog(\\\"ALL\\\");\\n    ns.print(\\\"Starting main function\\\");\\n}\\n\\n// ===== FUNCTIONS ============\\nexport async function buildServerInfoArray(ns) {\\n    // Start with the home server\\n\\tvar serverInfoArray = [getTargetInfo(ns, ns.getHostname(), null, 0)];\\n\\t\\n\\tvar serverListArray = ns.scan(ns.getHostname());\\n\\t\\n\\tvar returnedServerInfo = await processScanResultsRecursive(ns, serverListArray, getTargetInfo(ns, ns.getHostname()), 0);\\n\\t\\t\\n\\tfor (var i=0; i < returnedServerInfo.length; i++) {\\n\\t\\tserverInfoArray.push(returnedServerInfo[i]);\\n\\t}\\n    \\n    return serverInfoArray;\\n}\\n\\nexport async function buildHackableServerInfoArray(ns) {\\n    // Start with the home server\\n\\tvar serverInfoArray = [getTargetInfo(ns, ns.getHostname(), null, 0)];\\n\\t\\n\\tvar serverListArray = ns.scan(ns.getHostname());\\n\\t\\n\\tvar returnedServerInfo = await processScanResultsRecursive(ns, serverListArray, getTargetInfo(ns, ns.getHostname()), 0);\\n\\t\\t\\n\\tfor (var i=0; i < returnedServerInfo.length; i++) {\\n\\t\\tif (returnedServerInfo[i].isHackable === true) {\\n\\t\\t\\tserverInfoArray.push(returnedServerInfo[i]);\\n\\t\\t}\\n\\t}\\n    \\n    return serverInfoArray;\\n}\\n\\nexport function getTargetInfo(ns, target, parent, depth) {\\n\\t//ns.print(\\\"Getting info for \\\" + target + \\\"...\\\");\\n\\tvar targetIsHacknet = target.startsWith(\\\"hacknet\\\");\\n\\tvar targetIsPserv = target.startsWith(\\\"pserv\\\");\\n    var targetInfo;\\n\\t\\n\\tif (target === \\\"home\\\") {\\n\\t\\ttargetInfo = {\\n\\t\\t\\tname : target,\\n\\t\\t\\tparent : parent,\\n\\t\\t\\tdepth : depth,\\n\\t\\t\\tisHome : true,\\n\\t\\t\\tisHacknet : false,\\n\\t\\t\\tisPserv : false,\\n\\t\\t\\tisPlayerOwned : true,\\n\\t\\t\\tisHackable : false,\\n\\t\\t\\tram : ns.getServerRam(target)[0],\\n\\t\\t\\tmoneyAvailable : ns.getServerMoneyAvailable(target),\\n\\t\\t\\tmaxMoney : ns.getServerMaxMoney(target),\\n\\t\\t\\tgrowth : ns.getServerGrowth(target),\\n\\t\\t\\tsecurityLevel : ns.getServerSecurityLevel(target),\\n\\t\\t\\tbaseSecurityLevel : ns.getServerBaseSecurityLevel(target),\\n\\t\\t\\tminSecurityLevel : ns.getServerMinSecurityLevel(target),\\n\\t\\t\\trequiredHackingLevel : ns.getServerRequiredHackingLevel(target),\\n\\t\\t\\tnumPortsRequired : ns.getServerNumPortsRequired(target),\\n\\t\\t};\\n\\t}\\n\\telse if (targetIsHacknet) {\\n\\t\\ttargetInfo = {\\n\\t\\t\\tname : target,\\n\\t\\t\\tparent : parent,\\n\\t\\t\\tdepth : depth,\\n\\t\\t\\tisHome : false,\\n\\t\\t\\tisHacknet : true,\\n\\t\\t\\tisPserv : false,\\n\\t\\t\\tisPlayerOwned : true,\\n\\t\\t\\tisHackable : false,\\n\\t\\t\\tram : ns.getServerRam(target)[0],\\n\\t\\t\\tmoneyAvailable : 0,\\n\\t\\t\\tmaxMoney : 0,\\n\\t\\t\\tgrowth : 0,\\n\\t\\t\\tsecurityLevel : Number.MAX_VALUE,\\n\\t\\t\\tbaseSecurityLevel : Number.MAX_VALUE,\\n\\t\\t\\tminSecurityLevel : Number.MAX_VALUE,\\n\\t\\t\\trequiredHackingLevel : Number.MAX_VALUE,\\n\\t\\t\\tnumPortsRequired : Number.MAX_VALUE,\\n\\t\\t};\\n\\t}\\n\\telse if (targetIsPserv) {\\n\\t\\ttargetInfo = {\\n\\t\\t\\tname : target,\\n\\t\\t\\tparent : parent,\\n\\t\\t\\tdepth : depth,\\n\\t\\t\\tisHome : false,\\n\\t\\t\\tisHacknet : false,\\n\\t\\t\\tisPserv : true,\\n\\t\\t\\tisPlayerOwned : true,\\n\\t\\t\\tisHackable : false,\\n\\t\\t\\tram : ns.getServerRam(target)[0],\\n\\t\\t\\tmoneyAvailable : ns.getServerMoneyAvailable(target),\\n\\t\\t\\tmaxMoney : ns.getServerMaxMoney(target),\\n\\t\\t\\tgrowth : ns.getServerGrowth(target),\\n\\t\\t\\tsecurityLevel : ns.getServerSecurityLevel(target),\\n\\t\\t\\tbaseSecurityLevel : ns.getServerBaseSecurityLevel(target),\\n\\t\\t\\tminSecurityLevel : ns.getServerMinSecurityLevel(target),\\n\\t\\t\\trequiredHackingLevel : ns.getServerRequiredHackingLevel(target),\\n\\t\\t\\tnumPortsRequired : ns.getServerNumPortsRequired(target),\\n\\t\\t};\\n\\t}\\n\\telse {\\n\\t\\ttargetInfo = {\\n\\t\\t\\tname : target,\\n\\t\\t\\tparent : parent,\\n\\t\\t\\tdepth : depth,\\n\\t\\t\\tisHome : false,\\n\\t\\t\\tisHacknet : false,\\n\\t\\t\\tisPserv : false,\\n\\t\\t\\tisPlayerOwned : false,\\n\\t\\t\\tisHackable : true,\\n\\t\\t\\tram : ns.getServerRam(target)[0],\\n\\t\\t\\tmoneyAvailable : ns.getServerMoneyAvailable(target),\\n\\t\\t\\tmaxMoney : ns.getServerMaxMoney(target),\\n\\t\\t\\tgrowth : ns.getServerGrowth(target),\\n\\t\\t\\tsecurityLevel : ns.getServerSecurityLevel(target),\\n\\t\\t\\tbaseSecurityLevel : ns.getServerBaseSecurityLevel(target),\\n\\t\\t\\tminSecurityLevel : ns.getServerMinSecurityLevel(target),\\n\\t\\t\\trequiredHackingLevel : ns.getServerRequiredHackingLevel(target),\\n\\t\\t\\tnumPortsRequired : ns.getServerNumPortsRequired(target),\\n\\t\\t};\\n\\t}\\n\\t\\n\\treturn targetInfo;\\n}\\n\\nexport async function processScanResultsRecursive(ns, serverListArray, parentServer, calledDepth) {\\n\\t// ns.print(\\\"---- Calling processScanResultsRecursive @ depth \\\" + calledDepth + \\\" ----\\\"); //DEBUG\\n\\tvar currentDepth = calledDepth + 1;\\n\\t\\n\\tvar returningTargetInfoArray = [];\\n\\t// Loop over all elements of serverListArray\\n\\tfor (var i = 0; i < serverListArray.length; i++) {\\n\\t\\tvar currentServerName = serverListArray[i];\\n\\t\\n\\t\\t// assign it's data to the array we're going to return\\n\\t\\treturningTargetInfoArray.push(getTargetInfo(ns, currentServerName, parentServer.name, currentDepth));\\n\\t\\t\\n\\t\\t// scan for more servers\\n\\t\\tvar neighboringServerArray = ns.scan(currentServerName);\\n\\t\\t// ns.print(\\\"== dumping neighboring servers pre-culling ===\\\"); //DEBUG\\n\\t\\t// testScanArrayDump(ns, neighboringServerArray); //DEBUG\\n\\t\\t\\n\\t\\t// remove the parent from the list\\n\\t\\tvar parentNeighborIndex;\\n\\t\\t\\n\\t\\tfor (var j = 0; j < neighboringServerArray.length; j++) {\\n\\t\\t\\tif (neighboringServerArray[j] === parentServer.name) {\\n\\t\\t\\t\\tparentNeighborIndex = j;\\n\\t\\t\\t}\\n\\t\\t\\t// await ns.sleep(100);\\n\\t\\t}\\n\\t\\t\\n\\t\\t// ns.print(\\\"parentNeighborIndex: \\\" + parentNeighborIndex); //DEBUG\\n\\t\\tvar childServerArray = neighboringServerArray;\\n\\t\\tchildServerArray.splice(parentNeighborIndex, 1);\\n\\t\\t\\n\\t\\t// ns.print(\\\"== dumping childServerArray servers post-culling ===\\\"); //DEBUG\\n\\t\\t// testScanArrayDump(ns, childServerArray); //DEBUG\\n\\t\\t// ns.print(\\\"== childServerArray.length: \\\" + childServerArray.length); //DEBUG\\n\\t\\t\\n\\t\\t// call process scan results for the children\\n\\t\\tvar childServerInfoArray;\\n\\t\\t\\n\\t\\tif (childServerArray.length !== 0) {\\n\\t\\t\\t// ns.print(\\\"Attempting to call processScanResultsRecursive again\\\"); //DEBUG\\n\\t\\t\\tchildServerInfoArray = await processScanResultsRecursive(ns, childServerArray, getTargetInfo(ns, currentServerName, parentServer.name, currentDepth), currentDepth);\\n\\t\\t\\t// ns.print(\\\"childServerInfoArray.length :\\\" + childServerInfoArray.length); //DEBUG\\n\\t\\t\\t\\n\\t\\t\\t// push all the results from the children into the array\\n\\t\\t\\tfor (var k = 0; k < childServerInfoArray.length; k++) {\\n\\t\\t\\t\\treturningTargetInfoArray.push(childServerInfoArray[k]);\\n\\t\\t\\t\\t// await ns.sleep(100);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\telse\\n\\t\\t{\\n\\t\\t\\t// ns.print(\\\"== Skipped Recursion ===\\\"); //DEBUG\\n\\t\\t}\\n\\t\\t\\n\\t\\t// await ns.sleep(100);\\n\\t}\\n\\t\\n\\treturn returningTargetInfoArray;\\n}\\n\\n// ===== TESTS ================\\nasync function executeTests(ns) {\\n    var serverInfoArray = await buildServerInfoArray(ns);\\n\\n    if (tests.testEnabled_nameDump) { testNameDump(ns, serverInfoArray); }\\n\\tif (tests.testEnabled_nameAndPortsDump) { testNameAndPortsDump(ns, serverInfoArray); }\\n\\tif (tests.testEnabled_dataDump) { testDataDump(ns, serverInfoArray); }\\n\\tif (tests.testEnabled_testScanArrayDump) { testScanArrayDump(ns, serverInfoArray); }\\n\\tif (tests.testEnabled_sortByRequiredHackShowMaxMoney) { test_sortByRequiredHackShowMaxMoney(ns, serverInfoArray); }\\n}\\n\\nfunction testNameDump(ns, serverInfoArray) {\\n\\tns.print(\\\"==== TEST: testNameDump ====\\\");\\n\\tfor (var i=0; i < serverInfoArray.length; i++) {\\n\\t\\tns.print(serverInfoArray[i].name);\\n\\t}\\n} \\n\\nfunction testNameAndPortsDump(ns, serverInfoArray) {\\n\\tns.print(\\\"==== TEST: testNameAndPortsDump ====\\\");\\n\\tfor (var i=0; i < serverInfoArray.length; i++) {\\n\\t\\tif(!serverInfoArray[i].isHacknet)\\n\\t\\t\\tns.print(\\\"Name: \\\" + serverInfoArray[i].name + \\\"/Ports Needed: \\\" + serverInfoArray[i].numPortsRequired);\\n\\t}\\n}\\n\\nfunction testDataDump(ns, serverInfoArray) {\\n\\tns.print(\\\"==== TEST: testDataDump ====\\\");\\n\\tfor (var i=0; i < serverInfoArray.length; i++) {\\n\\t\\tif(!serverInfoArray[i].isHacknet)\\n\\t\\t\\tns.print(\\\"Name: \\\" + serverInfoArray[i].name + \\\"    /    Parent: \\\" + serverInfoArray[i].parent + \\\"    /    Depth: \\\" + serverInfoArray[i].depth + \\\"    /    Ports Needed: \\\" + serverInfoArray[i].numPortsRequired);\\n\\t}\\n}\\n\\nfunction testScanArrayDump(ns, serverListArray) {\\n\\tns.print(\\\"==== TEST: testScanArrayDump ====\\\");\\n\\tfor (var i=0; i < serverListArray.length; i++) {\\n\\t\\tns.print(\\\"Index: \\\" + i + \\\"/SeverName: \\\" + serverListArray[i].name);\\n\\t}\\n}\\n\\nfunction test_sortByRequiredHackShowMaxMoney(ns, serverListArray) {\\n\\tns.print(\\\"==== TEST: test_sortByRequiredHackShowMaxMoney ====\\\");\\n    \\n    serverListArray.sort(function(a, b) {\\n        return a.requiredHackingLevel - b.requiredHackingLevel;\\n    });\\n\\n    for (var i=0; i < serverListArray.length; i++) {\\n\\t\\tns.tprint(\\\"Index: \\\" + i + \\\" / RequiredHackingLevel: \\\" + serverListArray[i].requiredHackingLevel + \\\" / numPortsRequired: \\\" + serverListArray[i].numPortsRequired + \\\" / MaxMoney: \\\" + ns.nFormat(serverListArray[i].maxMoney, \\\"0,0\\\") + \\\" / SeverName: \\\" + serverListArray[i].name);\\n\\t}\\n}\",\"filename\":\"/master/functions/buildServerInfoArray-ns2.js\",\"module\":\"\",\"ramUsage\":2.75,\"server\":\"60.8.2.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"function getEnumPortIndexVersion (version) {\\n\\tvar ePortIndex_v1 = {\\n\\t\\tPRIMARY_HACKING_TARGET: 1,\\n\\t};\\n\\n\\tif (version === 1) {\\n\\t\\treturn ePortIndex_v1;\\n\\t}\\n\\telse {\\n\\t\\treturn ePortIndex_v1;\\n\\t}\\n}\",\"filename\":\"/master/functions/enumLib-ns1.script\",\"module\":\"\",\"ramUsage\":1.6,\"server\":\"60.8.2.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"// ========= IMPORTS  ========= \\n\\n// ========== ARGS ============ \\nvar sArgs = {\\n\\n};\\n\\n// ========== VARS ============\\nvar sVars = {\\n\\n};\\n\\nvar tests = {\\n   \\n};\\n\\n// ========== MAIN ============\\nexport async function main(ns) {\\n\\tns.disableLog(\\\"ALL\\\");\\n    \\n    var hackablePortNumber = getNumOpenablePorts(ns);\\n\\n    // figure out how many ports I can steal\\n    // build get the list of servers\\n    // based on how many ports I can open, use the install and run script    \\n\\n    ns.print(hackablePortNumber);\\n}\\n\\n// ========= FUNCTIONS ========= \\nexport function getNumOpenablePorts(ns) {\\n    var numOpenablePorts = 0;\\n    \\n    if(ns.fileExists(\\\"BruteSSH.exe\\\", \\\"home\\\"))\\n        numOpenablePorts++;\\n    if(ns.fileExists(\\\"FTPCrack.exe\\\", \\\"home\\\"))\\n        numOpenablePorts++;\\n    if(ns.fileExists(\\\"relaySMTP.exe\\\", \\\"home\\\"))\\n        numOpenablePorts++;\\n    if(ns.fileExists(\\\"HTTPWorm.exe\\\", \\\"home\\\"))\\n        numOpenablePorts++;\\n    if(ns.fileExists(\\\"SQLInject.exe\\\", \\\"home\\\"))\\n        numOpenablePorts++;\\n    \\n    return numOpenablePorts;\\n}\\n\\n// =========== TESTS ===========\",\"filename\":\"/master/functions/getNumOpenablePorts-ns2.js\",\"module\":\"\",\"ramUsage\":1.7,\"server\":\"60.8.2.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"function getRootAccess (target)\\n{\\n\\tif (hasRootAccess(target) === false) {\\n        // If we have the various port oepning program, use them to open ports\\n        // on the target server\\n        if (fileExists(\\\"BruteSSH.exe\\\", \\\"home\\\")) {\\n            brutessh(target);\\n        }\\n        if (fileExists(\\\"FTPCrack.exe\\\", \\\"home\\\")) {\\n            ftpcrack(target);\\n        }\\n        if (fileExists(\\\"relaySMTP.exe\\\", \\\"home\\\")) {\\n            relaysmtp(target);\\n        }\\n        if (fileExists(\\\"HTTPWorm.exe\\\", \\\"home\\\")) {\\n            httpworm(target);\\n        }\\n        if (fileExists(\\\"SQLInject.exe\\\", \\\"home\\\")) {\\n            sqlinject(target);\\n        }\\n        \\n        // Get root access to target server\\n        nuke(target);\\n    }\\n}\",\"filename\":\"/master/functions/getRootAccess-ns1.script\",\"module\":\"\",\"ramUsage\":2.05,\"server\":\"60.8.2.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export function getRootAccess (ns, target)\\n{\\n\\tif (ns.hasRootAccess(target) === false) {\\n        // If we have the various port oepning program, use them to open ports\\n        // on the target server\\n        if (ns.fileExists(\\\"BruteSSH.exe\\\", \\\"home\\\")) {\\n            ns.brutessh(target);\\n        }\\n        if (ns.fileExists(\\\"FTPCrack.exe\\\", \\\"home\\\")) {\\n            ns.ftpcrack(target);\\n        }\\n        if (ns.fileExists(\\\"relaySMTP.exe\\\", \\\"home\\\")) {\\n            ns.relaysmtp(target);\\n        }\\n        if (ns.fileExists(\\\"HTTPWorm.exe\\\", \\\"home\\\")) {\\n            ns.httpworm(target);\\n        }\\n        if (ns.fileExists(\\\"SQLInject.exe\\\", \\\"home\\\")) {\\n            ns.sqlinject(target);\\n        }\\n        \\n        // Get root access to target server\\n        ns.nuke(target);\\n    }\\n}\",\"filename\":\"/master/functions/getRootAccess-ns2.js\",\"module\":\"\",\"ramUsage\":2.05,\"server\":\"60.8.2.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"// args\\nvar destServ = args[0];\\nvar hackTargetServ = args[1];\\n\\n// files to copy over\\nvar scripts = [\\n    \\\"/master/functions/getRootAccess-ns1.script\\\",\\n    \\\"/master/hacking/advanced/run-ns1.script\\\",\\n    \\\"/master/hacking/helpers/grow_target-ns1.script\\\",\\n    \\\"/master/hacking/helpers/hack_target-ns1.script\\\",\\n    \\\"/master/hacking/helpers/weaken_target-ns1.script\\\"\\n    ];\\n\\nvar primaryScript = \\\"/master/hacking/advanced/run-ns1.script\\\";\\n\\nvar sourceServer = \\\"home\\\";\\n\\nscp(scripts, sourceServer, destServ);\\nexec(primaryScript, destServ, 1, hackTargetServ);\",\"filename\":\"/master/hacking/advanced/install_and_run-ns1.script\",\"module\":\"\",\"ramUsage\":3.5,\"server\":\"60.8.2.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"// TODO Update number of weaken threads:\\n//      Returns: The amount by which the target server’s security level was decreased. This is equivalent to 0.05 multiplied by the number of script threads\\n// TODO Create v3.0: Better farm out the work\\n//      Spawn child scripts that sit and loop on the server\\n//          Maybe these just sit and constantly weaken/grow?\\n//      Use ports to communicate with remote PServers?\\n//          Shoudl be able to use growthAnalyze() to figure out how many grow calls we need\\n//          Should be able to math out how many weaken threads we need\\n//          Could farm out just what's needed to deal with grow, so not doubling up?\\n//          Use 2-3 ports; one to state the action, one to state the number of calls/threads\\n//          Can ports pass arrays or objects around?\\n//      Auto-select what server to targe based on hacking level and available money\\n\\n\\n// Imports\\nimport {getRootAccess} from \\\"/master/functions/getRootAccess-ns1.script\\\";\\n\\n// Defines the \\\"target server\\\", which is the server, via the first arg\\nvar target = args[0];\\n\\n// Amount of RAM to keep free if on the home PC\\nvar reserverHomeRamGb = 16;\\n\\n// Scripts being used\\nvar hackScript = \\\"/master/hacking/helpers/hack_target-ns1.script\\\";\\nvar growScript = \\\"/master/hacking/helpers/grow_target-ns1.script\\\";\\nvar weakenScript = \\\"/master/hacking/helpers/weaken_target-ns1.script\\\";\\n\\n// Defines how much money a server should have before we hack it\\n// In this case, it is set to 75% of the server's max money\\nvar targetMaxMoney = getServerMaxMoney(target);\\nvar targetMoneyThresh = targetMaxMoney * 0.75;\\n\\n// Defines the maximum security level the target server can\\n// have. If the target's security level is higher than this,\\n// we'll weaken it before doing anything else\\nvar securityThresh = getServerMinSecurityLevel(target) + 5;\\n\\n//how much ram do the helper scripts take?\\nvar hackRam = getScriptRam(hackScript);\\nvar growRam = getScriptRam(growScript);\\nvar weakenRam = getScriptRam(weakenScript);\\n\\n//how much free ram does this server have?\\nfunction thisServFreeRam()\\n{\\n    var thisServRam = getServerRam(getHostname());\\n    var thisServMaxRam = thisServRam[0];\\n    var thisServUsedRam = thisServRam[1];\\n    var thisServFreeRam = thisServMaxRam - thisServUsedRam;\\n    \\n    // If it's the hom PC, indicate the free RAM is less based on how much\\n    // is being reserved (defined earlier in the script); otherwise return\\n    // the true free amount\\n    if(getHostname() == \\\"home\\\")\\n        return thisServFreeRam - reserverHomeRamGb;\\n    else\\n        return thisServFreeRam;\\n}\\n\\n// Get root access\\ngetRootAccess(target);\\n\\n// Infinite loop that continously hacks/grows/weakens the target server\\nwhile(true) {\\n    if (getServerSecurityLevel(target) > securityThresh) {\\n        // If the server's security level is above our threshold, weaken it\\n        var maxWeakenThreads = Math.floor(thisServFreeRam()/weakenRam);\\n        \\n        print(\\\"Weakening\\\");\\n        run(weakenScript, maxWeakenThreads, target);\\n        \\n        //wait for the script to finish\\n        sleep(getWeakenTime(target)*1000);\\n        while (isRunning(weakenScript, getHostname(), target))\\n            sleep(1000);\\n    } else if (getServerMoneyAvailable(target) < targetMoneyThresh) {\\n        // If the server's money is less than our threshold, grow it\\n        var maxGrowThreads = Math.floor(thisServFreeRam()/growRam);\\n        \\n        print(\\\"Growing\\\");\\n        run(growScript, maxGrowThreads, target);\\n        \\n        //wait for the script to finish\\n        sleep(getGrowTime(target)*1000);\\n        while (isRunning(growScript, getHostname(), target))\\n            sleep(1000);\\n    } else {\\n        // Otherwise, hack it\\n        var maxHackThreads = Math.floor(thisServFreeRam()/hackRam);\\n        var desiredHackThreads = Math.floor(hackAnalyzeThreads(target, targetMaxMoney*0.10));\\n        \\n        print(\\\"Hacking\\\");\\n        if (desiredHackThreads < 1)\\n            run(hackScript, 1, target);\\n        else if (desiredHackThreads <= maxHackThreads)\\n            run(hackScript, desiredHackThreads, target);\\n        else\\n            run(hackScript, maxHackThreads, target);\\n        \\n        //wait for the script to finish\\n        sleep(getHackTime(target)*1000);\\n        while (isRunning(hackScript, getHostname(), target))\\n            sleep(1000);\\n    }\\n}\",\"filename\":\"/master/hacking/advanced/run-ns1.script\",\"module\":\"\",\"ramUsage\":4.95,\"server\":\"60.8.2.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"// ===== IMPORTS ==============\\nimport {getRootAccess} from \\\"/master/functions/getRootAccess-ns1.script\\\";\\n\\n// ===== ARGS =================\\nvar sArgs = {\\n\\tdestServ : args[0],\\n\\thackTargetServ : args[1],\\n};\\n\\n// ===== VARS =================\\nvar sVars = {\\n\\tthreadLimit : 100, //If this gets too high, server security can get out of control\\n\\tscriptsToCopy : [\\n\\t\\t\\t\\\"/master/functions/getRootAccess-ns1.script\\\",\\n\\t\\t\\t\\\"/master/hacking/basic/run-ns1.script\\\",\\n\\t\\t],\\n\\tscriptToRun : \\\"/master/hacking/basic/run-ns1.script\\\",\\n\\tsourceServer : \\\"home\\\",\\n};\\n\\nvar tests = {\\n\\tenabled : false, // Master override for all tests\\n\\ttestExampleEnabled : false,\\n};\\n\\n// ===== MAIN =================\\nmain();\\n\\nfunction main() {\\n\\t// Get root access on the destServ & hackTargetServ\\n\\tgetRootAccess(sArgs.destServ);\\n\\tgetRootAccess(sArgs.hackTargetServ);\\n\\n\\t// Copy the scripts over\\n\\tscp(sVars.scriptsToCopy, sVars.sourceServer, sArgs.destServ);\\n\\n\\t// See how many threads we can run on the target server\\n\\tvar maxThreadCapactity = getMaxThreadCapacity(sArgs.destServ, sVars.scriptToRun);\\n\\tvar threadCount = 1;\\n\\n\\tif(maxThreadCapactity < sVars.threadLimit) {\\n\\t\\tthreadCount = maxThreadCapactity;\\n\\t}\\n\\telse if(maxThreadCapactity >= sVars.threadLimit){\\n\\t\\tthreadCount = sVars.threadLimit;\\n\\t}\\n\\n\\tif (threadCount <= 0) {\\n\\t\\ttprint(\\\"ERROR: Desired thread count to low to run exec()! threadCount: \\\" + threadCount + \\\", sArgs.destServ: \\\" + sArgs.destServ)\\n\\t\\texit();\\n\\t}\\n\\n\\t// Run the script on the tartget server\\n\\texec(sVars.scriptToRun, sArgs.destServ, threadCount, sArgs.hackTargetServ);\\n\\t\\n\\t// Tests\\n\\tif (tests.enabled)\\n\\t\\texecuteTests();\\n}\\n\\n// ===== FUNCTIONS ============\\n// Returns free RAM on the target server\\nfunction getServFreeRam(target, reservedRam) {\\n    // Get the server's RAM, max and used\\n    var targetServRam = getServerRam(target);\\n    var targetServMaxRam = targetServRam[0];\\n    var targetServUsedRam = targetServRam[1];\\n\\n    // Use the RAM info to get the free ram\\n    var targetServFreeRam = targetServMaxRam - targetServUsedRam;\\n\\n    // Return the free RAM, less the resvered amount\\n    return targetServFreeRam - reservedRam;\\n}\\n\\nfunction getMaxThreadCapacity(target, script) {\\n    // Figure out how much RAM we can use\\n    targetFreeRam = getServFreeRam(target, 0);\\n\\n    // Get the RAM needed for the script (per thread)\\n    scriptRamPerThread = getScriptRam(script);\\n\\n    // Calculate the max number of threads\\n    maxThreadCapacity = Math.floor(targetFreeRam / scriptRamPerThread);\\n\\n    // Return that\\n    return maxThreadCapacity;\\n}\\n\\n// ===== TESTS ================\\nfunction executeTests() {\\n\\tif (tests.testExampleEnabled)\\n\\t\\ttestExample();\\n}\\n\\nfunction testExample() {\\n\\tprint(\\\"==== TEST: testExample ====\\\");\\n\\n}\",\"filename\":\"/master/hacking/basic/install_and_run-ns1.script\",\"module\":\"\",\"ramUsage\":4.15,\"server\":\"60.8.2.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"// ===== IMPORTS ==============\\n\\n\\n// ===== ARGS =================\\nvar sArgs = {\\n\\ttarget : args[0],\\t// Target to hack\\n};\\n\\n// ===== VARS =================\\nvar sVars = {\\n\\tmoneyThreshModPcnt : 0.75,\\n\\tsecurityThreshModAdd : 5,\\n};\\n\\nvar tests = {\\n\\tenabled : false, // Master override for all tests\\n\\ttestExampleEnabled : false,\\n};\\n\\n// ===== MAIN =================\\nmain();\\n\\nfunction main() {\\n\\t// Setting up some thresholds\\n\\tvar moneyThresh = getServerMaxMoney(sArgs.target) * sVars.moneyThreshModPcnt;\\n\\tvar securityThresh = getServerMinSecurityLevel(sArgs.target) + sVars.securityThreshModAdd;\\n\\n\\twhile(true) {\\n\\t\\tif (getServerSecurityLevel(sArgs.target) > securityThresh) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tweaken(sArgs.target);\\n\\t\\t} else if (getServerMoneyAvailable(sArgs.target) < moneyThresh) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tgrow(sArgs.target);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\thack(sArgs.target);\\n\\t\\t}\\n\\t}\\n\\t\\n\\t// Tests\\n\\tif (tests.enabled)\\n\\t\\texecuteTests();\\n}\\n\\n// ===== FUNCTIONS ============\\n\\n\\n// ===== TESTS ================\\nfunction executeTests(ns) {\\n\\tif (tests.testExampleEnabled)\\n\\t\\ttestExample(ns);\\n}\\n\\nfunction testExample(ns) {\\n\\tns.print(\\\"==== TEST: testExample ====\\\");\\n\\n}\",\"filename\":\"/master/hacking/basic/run-ns1.script\",\"module\":\"\",\"ramUsage\":2.4,\"server\":\"60.8.2.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"// Defines the \\\"target server\\\", which is the server\\n// that we're going to hack. In this case, it's \\\"harakiri-sushi\\\"\\nvar target = \\\"harakiri-sushi\\\";\\n\\n// Defines how much money a server should have before we hack it\\n// In this case, it is set to 75% of the server's max money\\nvar moneyThresh = getServerMaxMoney(target) * 0.75;\\n\\n// Defines the maximum security level the target server can\\n// have. If the target's security level is higher than this,\\n// we'll weaken it before doing anything else\\nvar securityThresh = getServerMinSecurityLevel(target) + 5;\\n\\n// If we have the BruteSSH.exe program, use it to open the SSH Port\\n// on the target server\\nif (fileExists(\\\"BruteSSH.exe\\\", \\\"home\\\")) {\\n    brutessh(target);\\n}\\n\\n// Get root access to target server\\nnuke(target);\\n\\n// Infinite loop that continously hacks/grows/weakens the target server\\nwhile(true) {\\n    if (getServerSecurityLevel(target) > securityThresh) {\\n        // If the server's security level is above our threshold, weaken it\\n        weaken(target);\\n    } else if (getServerMoneyAvailable(target) < moneyThresh) {\\n        // If the server's money is less than our threshold, grow it\\n        grow(target);\\n    } else {\\n        // Otherwise, hack it\\n        hack(target);\\n    }\\n}\",\"filename\":\"/master/hacking/early/early_hack_harakiri-sushi-ns1.script\",\"module\":\"\",\"ramUsage\":2.6,\"server\":\"60.8.2.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"// Defines the \\\"target server\\\", which is the server\\n// that we're going to hack. In this case, it's \\\"harakiri-sushi\\\"\\nvar target = \\\"joesguns\\\";\\n\\n// Defines how much money a server should have before we hack it\\n// In this case, it is set to 75% of the server's max money\\nvar moneyThresh = getServerMaxMoney(target) * 0.75;\\n\\n// Defines the maximum security level the target server can\\n// have. If the target's security level is higher than this,\\n// we'll weaken it before doing anything else\\nvar securityThresh = getServerMinSecurityLevel(target) + 5;\\n\\n// If we have the BruteSSH.exe program, use it to open the SSH Port\\n// on the target server\\nif (fileExists(\\\"BruteSSH.exe\\\", \\\"home\\\")) {\\n    brutessh(target);\\n}\\n\\n// Get root access to target server\\nnuke(target);\\n\\n// Infinite loop that continously hacks/grows/weakens the target server\\nwhile(true) {\\n    if (getServerSecurityLevel(target) > securityThresh) {\\n        // If the server's security level is above our threshold, weaken it\\n        weaken(target);\\n    } else if (getServerMoneyAvailable(target) < moneyThresh) {\\n        // If the server's money is less than our threshold, grow it\\n        grow(target);\\n    } else {\\n        // Otherwise, hack it\\n        hack(target);\\n    }\\n}\",\"filename\":\"/master/hacking/early/early_hack_joesguns-ns1.script\",\"module\":\"\",\"ramUsage\":2.6,\"server\":\"60.8.2.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"// Defines the \\\"target server\\\", which is the server\\n// that we're going to hack. In this case, it's \\\"foodnstuff\\\"\\nvar target = \\\"foodnstuff\\\";\\n\\n// Defines how much money a server should have before we hack it\\n// In this case, it is set to 75% of the server's max money\\nvar moneyThresh = getServerMaxMoney(target) * 0.75;\\n\\n// Defines the maximum security level the target server can\\n// have. If the target's security level is higher than this,\\n// we'll weaken it before doing anything else\\nvar securityThresh = getServerMinSecurityLevel(target) + 5;\\n\\n// If we have the BruteSSH.exe program, use it to open the SSH Port\\n// on the target server\\nif (fileExists(\\\"BruteSSH.exe\\\", \\\"home\\\")) {\\n    brutessh(target);\\n}\\n\\n// Get root access to target server\\nnuke(target);\\n\\n// Infinite loop that continously hacks/grows/weakens the target server\\nwhile(true) {\\n    if (getServerSecurityLevel(target) > securityThresh) {\\n        // If the server's security level is above our threshold, weaken it\\n        weaken(target);\\n    } else if (getServerMoneyAvailable(target) < moneyThresh) {\\n        // If the server's money is less than our threshold, grow it\\n        grow(target);\\n    } else {\\n        // Otherwise, hack it\\n        hack(target);\\n    }\\n}\",\"filename\":\"/master/hacking/early/early_hack_template-ns1.script\",\"module\":\"\",\"ramUsage\":2.6,\"server\":\"60.8.2.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"serv = args[0];\\n\\ngrow(serv);\",\"filename\":\"/master/hacking/helpers/grow_target-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"60.8.2.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"serv = args[0];\\n\\nhack(serv);\",\"filename\":\"/master/hacking/helpers/hack_target-ns1.script\",\"module\":\"\",\"ramUsage\":1.7,\"server\":\"60.8.2.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"serv = args[0];\\n\\nweaken(serv);\",\"filename\":\"/master/hacking/helpers/weaken_target-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"60.8.2.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"// ARGS\\nvar installScript = args[0];\\nvar hackTarget = args[1];\\n\\n// SETUP\\n// build a list of pservs\\nvar serverList = getPurchasedServers();\\n\\n// FUNCTIONS\\n\\n// MAIN LOGIC\\n// loop thru seach server\\nfor(i = 0; i < serverList.length; i++) {\\n    \\n    // get the server we're doing stuff on\\n    thisServer = serverList[i];\\n    \\n    // run the new script installer\\n    run(installScript, 1, thisServer, hackTarget);\\n}\",\"filename\":\"/master/pserv/deploy-ns1.script\",\"module\":\"\",\"ramUsage\":4.85,\"server\":\"60.8.2.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"// ARGS\\nvar installScript = args[0];\\nvar hackTarget = args[1];\\n\\n// SETUP\\n// build a list of pservs\\nvar serverList = getPurchasedServers();\\n\\n// FUNCTIONS\\n\\n// MAIN LOGIC\\n// loop thru seach server\\nfor(i = 0; i < serverList.length; i++) {\\n    \\n    // get the server we're doing stuff on\\n    thisServer = serverList[i];\\n    \\n    // kill all running scripts\\n    print(\\\"DEBUG: Killing all scripts on: \\\" + thisServer);\\n    killall(thisServer);\\n    sleep(10000);\\n    \\n    // run the new script installer\\n    run(installScript, 1, thisServer, hackTarget);\\n}\",\"filename\":\"/master/pserv/killall_and_deploy-ns1.script\",\"module\":\"\",\"ramUsage\":5.35,\"server\":\"60.8.2.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"// ARGS\\n\\n// SETUP\\n// build a list of pservs\\nvar serverList = getPurchasedServers();\\n\\n// FUNCTIONS\\n\\n// MAIN LOGIC\\n// loop thru seach server\\nfor(i = 0; i < serverList.length; i++) {\\n    \\n    // get the server we're doing stuff on\\n    thisServer = serverList[i];\\n    \\n    // kill all running scripts\\n    print(\\\"DEBUG: Killing all scripts on: \\\" + thisServer);\\n    killall(thisServer);\\n    sleep(10000);\\n}\",\"filename\":\"/master/pserv/killall-ns1.script\",\"module\":\"\",\"ramUsage\":4.35,\"server\":\"60.8.2.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"// ========= IMPORTS  ========= \\nimport * as enumLib from \\\"/master/functions/enumLib-ns1.script\\\";\\nvar ePortIndex = enumLib.getEnumPortIndexVersion(1);\\n\\n// ========== ARGS ============ \\n\\n// ========== VARS ============\\nvar sVars = {\\n    // PSERV settings\\n    pservStartingRamAmount: 8,\\n    pservHackTarget: \\\"joesguns\\\",\\n};\\n\\n// ========= FUNCTIONS ========= \\n\\n// ========== LOGIC ==========\\n// For BN-9 when we go back...\\n// run(\\\"/master/character/hacknet/server_autobuy-ns2.js\\\");\\n// run(\\\"/master/character/hacknet/hashmanager-ns2.js\\\");\\n\\nclear(ePortIndex.PRIMARY_HACKING_TARGET);\\n\\nrun(\\\"/master/hacking/director-ns2.js\\\");\\nrun(\\\"/master/character/hacknet/node_autobuy-ns2.js\\\");\\nrun(\\\"/master/buy_server/buy_server-ns2.js\\\", 1, sVars.pservHackTarget, sVars.pservStartingRamAmount);\\nrun(\\\"/master/world/gang/godfather-ns2.js\\\");\\nrun(\\\"/master/hacking/monitor-ns2.js\\\", 1, 300, \\\"tprint\\\");\",\"filename\":\"/master/restart_run/restart_run-ns1.script\",\"module\":\"\",\"ramUsage\":3.6,\"server\":\"60.8.2.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"// ===== IMPORTS ================================\\n\\n// ===== ARGS ===================================\\nfunction getScriptArgs(ns) {\\n    var scriptArgs = {\\n        firstArg : ns.args[0]\\n    };\\n    \\n    return scriptArgs;\\n}\\n\\n// ===== VARS ===================================\\nvar sVars = {\\n\\n};\\n\\nvar tests = {\\n\\tenabled : false, // Master override for all tests\\n\\tdisableMain : false, // Disables all non-testing logic in main\\n\\ttestEnabled_exampleFunction : false,\\n};\\n\\n// ===== MAIN ===================================\\nexport async function main(ns) {\\n\\tvar sArgs = getScriptArgs(ns);\\n\\t\\n\\t// - Tests ----------------------------------\\n\\tif (tests.enabled)\\n\\t\\texecuteTests(ns);\\n\\t\\n\\t// - Early out ------------------------------\\n\\tif (tests.disableMain) {\\n\\t\\tns.tprint(\\\"WARNING: SCRIPT IS IN TEST ONLY MODE\\\");\\n\\t\\tns.exit();\\n\\t}\\n\\t\\n\\t// - Real Script Logic ----------------------\\n\\tns.print(\\\"Starting script...\\\");\\n\\tns.disableLog(\\\"ALL\\\");\\n}\\n\\n// ===== FUNCTIONS ==============================\\n\\n\\n// ===== TESTS ==================================\\nfunction executeTests(ns) {\\n\\tif (tests.testEnabled_exampleFunction)\\n\\t\\ttest_exampleFunction(ns);\\n}\\n\\nfunction test_exampleFunction(ns) {\\n\\tns.print(\\\"==== TEST: test_exampleFunction ====\\\");\\n\\n}\",\"filename\":\"/master/templates/ns2_template.js\",\"module\":\"\",\"ramUsage\":1.6,\"server\":\"60.8.2.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"// ===== IMPORTS ================================\\n\\n// ===== ARGS ===================================\\nfunction getScriptArgs() {\\n    var scriptArgs = {\\n        hackTarget : args[0],\\n        desiredRam : args[1],\\n    };\\n    \\n    return scriptArgs;\\n}\\n\\n// ===== VARS ===================================\\nvar sVars = {\\n    availableCashMod : 0.70,\\n    ramIncreaseFactor : 16,\\n    setupScriptName : \\\"/master/hacking/deployHackBots-ns2.js\\\",\\n\\n};\\n\\nvar tests = {\\n\\tenabled : false, // Master override for all tests\\n\\tdisableMain : false, // Disables all non-testing logic in main\\n\\ttestEnabled_exampleFunction : false,\\n};\\n\\n// ===== MAIN ===================================\\nmain();\\n\\nfunction main() {\\n\\tvar sArgs = getScriptArgs();\\n\\t\\n\\t// - Tests ----------------------------------\\n\\tif (tests.enabled)\\n\\t\\texecuteTests();\\n\\t\\n\\t// - Early out ------------------------------\\n\\tif (tests.disableMain) {\\n\\t\\ttprint(\\\"WARNING: SCRIPT IS IN TEST ONLY MODE\\\");\\n\\t\\texit();\\n\\t}\\n\\t\\n\\t// - Real Script Logic ----------------------\\n\\tprint(\\\"Starting script...\\\");\\n    disableLog(\\\"ALL\\\");\\n    \\n    if(sArgs.desiredRam > getPurchasedServerMaxRam()) {\\n        tprint(\\\"buy_server.script: sArgs.desiredRam (args[1]) exceeds getPurchasedServerMaxRam. Exiting.\\\");\\n        exit();\\n    }\\n    \\n    // loop to buy initial round of servers\\n    // while: server count < max servers\\n    print(\\\"DEBUG: server count:\\\" + getPurchasedServers().length);\\n    print(\\\"DEBUG: server limit:\\\" + getPurchasedServerLimit());\\n    while(getPurchasedServers().length < getPurchasedServerLimit())\\n    {\\n        print(\\\"DEBUG: Buying at \\\" + sArgs.desiredRam +\\\"GB\\\");\\n        \\n        // wait to have enough money to buy\\n        if(getServerMoneyAvailable(\\\"home\\\") > getPurchasedServerCost(sArgs.desiredRam))\\n        {\\n            // create a server name\\n            var servName = \\\"pserv-\\\" + sArgs.desiredRam + \\\"GB\\\";\\n            \\n            // buy a server\\n            var hostname = \\\"\\\"\\n            while (hostname === \\\"\\\") {\\n                while(getServerMoneyAvailable(\\\"home\\\")*sVars.availableCashMod < getPurchasedServerCost(sArgs.desiredRam))\\n                {\\n                    print(\\\"DEBUG: Not enough money! Have/Need:\\\" + Math.floor(getServerMoneyAvailable(\\\"home\\\")) + \\\"/\\\" + getPurchasedServerCost(sArgs.desiredRam));\\n                    sleep(60*1000);\\n                }\\n                hostname = purchaseServer(servName, sArgs.desiredRam);\\n            }\\n            \\n            // copy and run script\\n            run(sVars.setupScriptName, 1, hostname, sArgs.hackTarget);\\n        }\\n    }\\n    \\n    //increase the desireRam count as a one off\\n    sArgs.desiredRam = sArgs.desiredRam*sVars.ramIncreaseFactor;\\n    \\n    // loop to upgrade servers\\n    while (sArgs.desiredRam <= getPurchasedServerMaxRam())\\n    {\\n        print(\\\"DEBUG: Buying at \\\" + sArgs.desiredRam +\\\"GB\\\");\\n        \\n        // call get purchased servers\\n        var purchasedServers = getPurchasedServers();\\n        \\n        for (var servIndex = 0; servIndex < purchasedServers.length; servIndex++)\\n        {\\n            var oldHostname = purchasedServers[servIndex];\\n            print(\\\"DEBUG: Evaluating: \\\" + oldHostname);\\n            \\n            if(getServerRam(oldHostname)[0] < sArgs.desiredRam)\\n            {\\n                while(getServerMoneyAvailable(\\\"home\\\")*sVars.availableCashMod < getPurchasedServerCost(sArgs.desiredRam))\\n                {\\n                    print(\\\"DEBUG: Not enough money! Have/Need:\\\" + Math.floor(getServerMoneyAvailable(\\\"home\\\")) + \\\"/\\\" + getPurchasedServerCost(sArgs.desiredRam));\\n                    sleep(60*1000);\\n                }\\n                \\n                // kill all scripts on the old server\\n                print(\\\"DEBUG: Killing all scripts on: \\\" + oldHostname);\\n                killall(oldHostname);\\n                sleep(10000);\\n                \\n                // delete the old server\\n                print(\\\"DEBUG: Deleting: \\\" + oldHostname);\\n                deleteServer(oldHostname);\\n                \\n                // buy a server\\n                var servName = \\\"pserv-\\\" + sArgs.desiredRam + \\\"GB\\\";\\n                var newHostname = \\\"\\\";\\n    \\n                while (newHostname === \\\"\\\") {\\n                    while(getServerMoneyAvailable(\\\"home\\\")*sVars.availableCashMod < getPurchasedServerCost(sArgs.desiredRam))\\n                    {\\n                        print(\\\"DEBUG: Not enough money! Have/Need:\\\" + Math.floor(getServerMoneyAvailable(\\\"home\\\")) + \\\"/\\\" + getPurchasedServerCost(sArgs.desiredRam));\\n                        sleep(60*1000);\\n                    }\\n                    newHostname = purchaseServer(servName, sArgs.desiredRam);\\n                    sleep(1000);\\n                }\\n                print(\\\"DEBUG: New server named: \\\" + newHostname);\\n                \\n                // copy and run scripts\\n                run(sVars.setupScriptName, 1, newHostname, sArgs.hackTarget);\\n            }\\n        }\\n        \\n        // increase ram for the next loop\\n        sArgs.desiredRam = sArgs.desiredRam*sVars.ramIncreaseFactor;\\n        \\n    }\\n}\\n\\n// ===== FUNCTIONS ==============================\\n\\n\\n// ===== TESTS ==================================\\nfunction executeTests() {\\n    if (tests.testEnabled_exampleFunction)\\n        test_exampleFunction();\\n}\\n\\nfunction test_exampleFunction() {\\n\\tns.print(\\\"==== TEST: test_exampleFunction ====\\\");\\n\\n}\\n\\n// ===== REFERENCE ==============================\\n// Useful functions:\\n// ==================\\n// getPurchasedServers - array of servers that you won\\n// getPurchasedServerLimit - max number of servers you can purchase\\n// getPurchasedServerCost - cost of a server based on a RAM amount\\n// getPurchasedServerMaxRam - max ram you can purchse\\n// purchaseServer(name, RAM) - buys a server with the specified RAM\\n// getServerRam - returns max ram, used ram\\n// getServerMoneyAvailable(\\\"home\\\")\\n// ==================\",\"filename\":\"/master/buy_server/buy_server-ns1.script\",\"module\":\"\",\"ramUsage\":10.4,\"server\":\"60.8.2.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"// ===== IMPORTS ==============\\nimport * as bsi from \\\"/master/functions/buildServerInfoArray-ns2.js\\\";\\nimport * as hpn from \\\"/master/functions/getNumOpenablePorts-ns2.js\\\";\\nimport * as gra from \\\"/master/functions/getRootAccess-ns2.js\\\";\\n\\n// ===== ARGS =================\\nfunction getScriptArgs(ns)\\n{\\n    var sArgs = {\\n        hackingTarget : ns.args[0]\\n    };\\n    \\n    return sArgs;\\n}\\n\\n// ===== VARS =================\\nvar sVars = {\\n    installScript : \\\"/master/hacking/basic/install_and_run-ns1.script\\\",\\n};\\n\\nvar tests = {\\n\\tenabled : false, // Master override for all tests\\n\\ttestExampleEnabled : false,\\n};\\n\\nvar eRamStats = {\\n    total : 0,\\n    used : 1,\\n};\\n\\n// ===== MAIN =================\\nexport async function main(ns) {\\n    var sArgs = getScriptArgs(ns);\\n\\tns.disableLog(\\\"ALL\\\");\\n\\n    // figure out how many ports I can steal\\n    var hackablePortNum = await hpn.getNumOpenablePorts(ns);\\n    ns.print(\\\"I can hack this many ports: \\\" + hackablePortNum);\\n    \\n    // build get the list of servers\\n    var serverList = await bsi.buildServerInfoArray(ns);\\n    \\n    // based on how many ports I can open, use the install and run script\\n    for (var i = 0; i < serverList.length; i++){\\n        var thisServer = serverList[i];\\n        \\n        if(thisServer.numPortsRequired <= hackablePortNum &&\\n          thisServer.isHacknet === false &&\\n\\t\\t  thisServer.name !== \\\"home\\\") {\\n            // get root access\\n\\t\\t\\tif (ns.hasRootAccess(thisServer.name) === false) {\\n\\t\\t\\t\\tns.print(\\\"getting access on \\\" + thisServer.name + \\\" which needs ports: \\\" + thisServer.numPortsRequired);\\n\\t\\t\\t\\tawait gra.getRootAccess(ns, thisServer.name);\\n\\t\\t\\t}\\n            \\n            // install the hack script\\n            var waitingToInstall = true;\\n            while(waitingToInstall) {\\n                var homeRam = ns.getServerRam(ns.getHostname());\\n                var homeFreeRam = homeRam[eRamStats.total] - homeRam[eRamStats.used];\\n                if (homeFreeRam >= ns.getScriptRam(sVars.installScript)) {\\n                    ns.run(sVars.installScript, 1, thisServer.name, sArgs.hackingTarget);\\n                    waitingToInstall = false;\\n                }\\n                await ns.sleep(1);\\n            }\\n        }\\n    }\\n\\t\\n\\t// Tests\\n\\tif (tests.enabled)\\n\\t\\texecuteTests(ns);\\n}\\n\\n// ===== FUNCTIONS ============\\n\\n\\n// ===== TESTS ================\\nfunction executeTests(ns) {\\n\\tif (tests.testExampleEnabled)\\n\\t\\ttestExample(ns);\\n}\\n\\nfunction testExample(ns) {\\n\\tns.print(\\\"==== TEST: testExample ====\\\");\\n\\n}\",\"filename\":\"/master/deploy/server_steal_basic-ns2.js\",\"module\":\"\",\"ramUsage\":4.3,\"server\":\"60.8.2.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export function getEnumPortIndexVersion(version) {\\n\\tvar ePortIndex_v1 = {\\n\\t\\tPRIMARY_HACKING_TARGET: 1,\\n\\t};\\n\\n\\tif (version === 1) {\\n\\t\\treturn ePortIndex_v1;\\n\\t}\\n\\telse {\\n\\t\\treturn ePortIndex_v1;\\n\\t}\\n}\",\"filename\":\"/master/functions/enumLib-ns2.js\",\"module\":\"\",\"ramUsage\":1.6,\"server\":\"60.8.2.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"// ===== IMPORTS ================================\\nimport * as bsi from \\\"/master/functions/buildServerInfoArray-ns2.js\\\";\\nimport * as hpn from \\\"/master/functions/getNumOpenablePorts-ns2.js\\\";\\nimport * as gsr from \\\"/master/functions/getServerRamObj-ns2.js\\\";\\nimport * as gra from \\\"/master/functions/getRootAccess-ns2.js\\\";\\nimport * as dhb from \\\"/master/hacking/deployHackBots-ns2.js\\\";\\nimport * as enumLib from \\\"/master/functions/enumLib-ns2.js\\\";\\nvar ePortIndex = enumLib.getEnumPortIndexVersion(1);\\n\\n// ===== ARGS ===================================\\nfunction getScriptArgs(ns) {\\n    var scriptArgs = {\\n        firstArg : ns.args[0]\\n    };\\n    \\n    return scriptArgs;\\n}\\n\\n// ===== VARS ===================================\\nvar sVars = {\\n\\tscanFrequency : 60 * 1000, // 60 seconds in milliseconds\\n\\thackbotDeployServerMinRam : 8,\\n};\\n\\nvar tests = {\\n\\tenabled : false, // Master override for all tests\\n\\tdisableMain : false, // Disables all non-testing logic in main\\n\\ttestEnabled_exampleFunction : false,\\n\\ttestEnabled_serverArrayBuilder : false,\\n};\\n\\n// ===== MAIN ===================================\\nexport async function main(ns) {\\n\\tvar sArgs = getScriptArgs(ns);\\n\\t\\n\\t// - Tests ----------------------------------\\n\\tif (tests.enabled)\\n\\t\\tawait executeTests(ns);\\n\\t\\n\\t// - Early out ------------------------------\\n\\tif (tests.disableMain) {\\n\\t\\tns.tprint(\\\"WARNING: SCRIPT IS IN TEST ONLY MODE\\\");\\n\\t\\tns.exit();\\n\\t}\\n\\t\\n\\t// - Real Script Logic ----------------------\\n\\tns.print(\\\"Starting script...\\\");\\n\\tns.disableLog(\\\"ALL\\\");\\n\\n\\t// Build server lists\\n\\tvar hackableServerListArray = await bsi.buildHackableServerInfoArray(ns);\\n\\tvar deployServerListArray = await bsi.buildServerInfoArray(ns);\\n\\n\\t// Establish initial target & deploy the hackbots\\n\\tns.print(\\\"Picking initial target and deploying the hackbots\\\");\\n\\tvar primaryHackTarget = ns.peek(ePortIndex.PRIMARY_HACKING_TARGET); // Could start out as NULL PORT DATA\\n\\tif(primaryHackTarget !== \\\"NULL PORT DATA\\\") {\\n\\t\\tgra.getRootAccess(ns, primaryHackTarget);\\n\\t\\tdeployServerListArray = await bsi.buildServerInfoArray(ns);\\n\\t\\tawait dhb.deployHackBots(ns, deployServerListArray, primaryHackTarget);\\n\\t}\\n\\t\\n\\n\\t// Sort the server list by money, high -> low\\n    hackableServerListArray.sort(function(a, b) {\\n        return b.maxMoney - a.maxMoney;\\n    });\\n\\n\\t// Start loopin' to find & update target\\n\\twhile(true) {\\n\\t\\tns.print(\\\"Scanning for a new target...\\\");\\n\\t\\tvar currentBestTarget = getBestHackableTarget(ns, hackableServerListArray);\\n\\n\\t\\t// If the best option is different from our current option, update the port\\n\\t\\tif (currentBestTarget !== primaryHackTarget)\\n\\t\\t{\\n\\t\\t\\tns.print(\\\"Updating primaryHackTarget to: \\\" + currentBestTarget);\\n\\t\\t\\tprimaryHackTarget = currentBestTarget;\\n\\t\\t\\tns.clear(ePortIndex.PRIMARY_HACKING_TARGET);\\n\\t\\t\\tns.write(ePortIndex.PRIMARY_HACKING_TARGET, currentBestTarget);\\n\\n\\t\\t\\t// Re-deploy the hackbots at the new target\\n\\t\\t\\tgra.getRootAccess(ns, primaryHackTarget);\\n\\t\\t\\tdeployServerListArray = await bsi.buildServerInfoArray(ns);\\n\\t\\t\\tawait dhb.deployHackBots(ns, deployServerListArray, primaryHackTarget);\\n\\n\\t\\t}\\n\\n\\t\\t// Sleep for like...a minute or something.\\n\\t\\tawait ns.sleep(sVars.scanFrequency);\\n\\t}\\n}\\n\\n// ===== FUNCTIONS ==============================\\nfunction getBestHackableTarget(ns, serverListArray) {\\n\\t// Figure out my hacking ability & port opening ability\\n\\tvar hackingSkillLevel = ns.getHackingLevel();\\n\\tvar portBreakingLevel = hpn.getNumOpenablePorts(ns);\\n\\n\\t// Iterate thru the list, finding the first option that can be hacked (skill & ports opening\\n\\tfor (var i=0; i<serverListArray.length; i++) {\\n\\t\\tvar server = serverListArray[i];\\n\\n\\t\\tif(hackingSkillLevel >= server.requiredHackingLevel && portBreakingLevel >= server.numPortsRequired) {\\n\\t\\t\\treturn server.name;\\n\\t\\t}\\n\\t}\\n}\\n\\n// ===== TESTS ==================================\\nasync function executeTests(ns) {\\n\\tif (tests.testEnabled_exampleFunction)\\n\\t\\ttest_exampleFunction(ns);\\n\\tif (tests.testEnabled_serverArrayBuilder)\\n\\t\\tawait test_serverArrayBuilder(ns);\\n}\\n\\nfunction test_exampleFunction(ns) {\\n\\tns.print(\\\"==== TEST: test_exampleFunction ====\\\");\\n\\n}\\n\\nasync function test_serverArrayBuilder(ns) {\\n\\tns.print(\\\"==== TEST: test_serverArrayBuilder ====\\\");\\n\\n\\tvar serverListArray = await bsi.buildHackableServerInfoArray(ns);\\n\\tprint(typeof serverListArray);\\n\\n    serverListArray.sort(function(a, b) {\\n        return a.requiredHackingLevel - b.requiredHackingLevel;\\n    });\\n\\n    for (var i=0; i < serverListArray.length; i++) {\\n\\t\\tns.tprint(\\\"Index: \\\" + i + \\\" / RequiredHackingLevel: \\\" + serverListArray[i].requiredHackingLevel + \\\" / MaxMoney: \\\" + ns.nFormat(serverListArray[i].maxMoney, \\\"0,0\\\") + \\\" / SeverName: \\\" + serverListArray[i].name);\\n\\t}\\n}\\n\\n/* ===== REFERENCE ==============================\\nns.write()\\nns.trywrite()\\nns.read()\\nns.peek()\\nns.clear()\\n\\t*/\",\"filename\":\"/master/hacking/director-ns2.js\",\"module\":{},\"ramUsage\":9.75,\"server\":\"60.8.2.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"// ===== IMPORTS ==============\\n\\n\\n// ===== ARGS =================\\nvar sArgs = {\\n\\tdestServ : args[0],\\n\\thackTargetServ : args[1],\\n};\\n\\n// ===== VARS =================\\nvar sVars = {\\n\\tthreadLimit : 100, //If this gets too high, server security can get out of control\\n\\tscriptsToCopy : [\\n\\t\\t\\t\\\"/master/functions/getRootAccess-ns1.script\\\",\\n\\t\\t\\t\\\"/master/functions/enumLib-ns1.script\\\",\\n\\t\\t\\t\\\"/master/hacking/guided_basic/run-ns1.script\\\",\\n\\t\\t],\\n\\tscriptToRun : \\\"/master/hacking/guided_basic/run-ns1.script\\\",\\n\\tsourceServer : \\\"home\\\",\\n};\\n\\nvar tests = {\\n\\tenabled : false, // Master override for all tests\\n\\ttestExampleEnabled : false,\\n};\\n\\n// ===== MAIN =================\\nmain();\\n\\nfunction main() {\\n\\t// Copy the scripts over\\n\\tscp(sVars.scriptsToCopy, sVars.sourceServer, sArgs.destServ);\\n\\n\\t// See how many threads we can run on the target server\\n\\tvar maxThreadCapactity = getMaxThreadCapacity(sArgs.destServ, sVars.scriptToRun);\\n\\tvar threadCount = 1;\\n\\n\\tif(maxThreadCapactity < sVars.threadLimit) {\\n\\t\\tthreadCount = maxThreadCapactity;\\n\\t}\\n\\telse if(maxThreadCapactity >= sVars.threadLimit){\\n\\t\\tthreadCount = sVars.threadLimit;\\n\\t}\\n\\n\\t// Run the script on the tartget server\\n\\texec(sVars.scriptToRun, sArgs.destServ, threadCount, sArgs.hackTargetServ);\\n\\t\\n\\t// Tests\\n\\tif (tests.enabled)\\n\\t\\texecuteTests();\\n}\\n\\n// ===== FUNCTIONS ============\\n// Returns free RAM on the target server\\nfunction getServFreeRam(target, reservedRam) {\\n    // Get the server's RAM, max and used\\n    var targetServRam = getServerRam(target);\\n    var targetServMaxRam = targetServRam[0];\\n    var targetServUsedRam = targetServRam[1];\\n\\n    // Use the RAM info to get the free ram\\n    var targetServFreeRam = targetServMaxRam - targetServUsedRam;\\n\\n    // Return the free RAM, less the resvered amount\\n    return targetServFreeRam - reservedRam;\\n}\\n\\nfunction getMaxThreadCapacity(target, script) {\\n    // Figure out how much RAM we can use\\n    targetFreeRam = getServFreeRam(target, 0);\\n\\n    // Get the RAM needed for the script (per thread)\\n    scriptRamPerThread = getScriptRam(script);\\n\\n    // Calculate the max number of threads\\n    maxThreadCapacity = Math.floor(targetFreeRam / scriptRamPerThread);\\n\\n    // Return that\\n    return maxThreadCapacity;\\n}\\n\\n// ===== TESTS ================\\nfunction executeTests() {\\n\\tif (tests.testExampleEnabled)\\n\\t\\ttestExample();\\n}\\n\\nfunction testExample() {\\n\\tprint(\\\"==== TEST: testExample ====\\\");\\n\\n}\",\"filename\":\"/master/hacking/guided_basic/install_and_run-ns1.script\",\"module\":\"\",\"ramUsage\":3.7,\"server\":\"60.8.2.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"// ===== IMPORTS ================================\\nimport {getRootAccess} from \\\"/master/functions/getRootAccess-ns1.script\\\";\\nimport * as enumLib from \\\"/master/functions/enumLib-ns1.script\\\";\\nvar ePortIndex = enumLib.getEnumPortIndexVersion(1);\\nvar portEmpty = \\\"NULL PORT DATA\\\";\\n\\n// ===== ARGS ===================================\\nvar sArgs = {\\n\\tinitialHackTarget : args[0],\\t// Initial to hack\\n};\\n\\n// ===== VARS ===================================\\nvar sVars = {\\n\\tmoneyThreshModPcnt : 0.75,\\n\\tsecurityThreshModAdd : 5,\\n};\\n\\nvar tests = {\\n\\tenabled : false, // Master override for all tests\\n\\ttestExampleEnabled : false,\\n};\\n\\n// ===== MAIN ===================================\\nmain();\\n\\nfunction main() {\\n\\tvar sArgs = getScriptArgs();\\n\\n\\tvar hackTarget = sArgs.initialHackTarget;\\n\\t\\n\\t// - Tests ----------------------------------\\n\\tif (tests.enabled)\\n\\t\\texecuteTests();\\n\\t\\n\\t// - Early out ------------------------------\\n\\tif (tests.disableMain) {\\n\\t\\ttprint(\\\"WARNING: SCRIPT IS IN TEST ONLY MODE\\\");\\n\\t\\texit();\\n\\t}\\n\\n\\t// - Real Script Logic ----------------------\\n\\n\\t// Setting up some thresholds\\n\\tvar moneyThresh = getServerMaxMoney(hackTarget) * sVars.moneyThreshModPcnt;\\n\\tvar securityThresh = getServerMinSecurityLevel(hackTarget) + sVars.securityThreshModAdd;\\n\\n\\t// Get root access if I don't have it\\n\\tif (hasRootAccess(hackTarget) === false) {\\n\\t\\tgetRootAccess(hackTarget);\\n\\t}\\n\\n\\twhile(true) {\\n\\t\\tvar updateResults = updateHackTarget(hackTarget);\\n\\t\\tif(updateResults.updated === true) {\\n\\t\\t\\thackTarget = updateResults.hackTarget;\\n\\t\\t\\tmoneyThresh = getServerMaxMoney(hackTarget) * sVars.moneyThreshModPcnt;\\n\\t\\t\\tsecurityThresh = getServerMinSecurityLevel(hackTarget) + sVars.securityThreshModAdd;\\n\\n\\t\\t\\tif (hasRootAccess(hackTarget) === false) {\\n\\t\\t\\t\\tgetRootAccess(hackTarget);\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tif (getServerSecurityLevel(hackTarget) > securityThresh) {\\n\\t\\t\\t// If the server's security level is above our threshold, weaken it\\n\\t\\t\\tweaken(hackTarget);\\n\\t\\t} else if (getServerMoneyAvailable(hackTarget) < moneyThresh) {\\n\\t\\t\\t// If the server's money is less than our threshold, grow it\\n\\t\\t\\tgrow(hackTarget);\\n\\t\\t} else {\\n\\t\\t\\t// Otherwise, hack it\\n\\t\\t\\thack(hackTarget);\\n\\t\\t}\\n\\t}\\n}\\n\\n// ===== FUNCTIONS ==============================\\nfunction updateHackTarget(currentTarget) {\\n\\tvar results = {\\n\\t\\tupdated: false,\\n\\t\\thackTarget: currentTarget,\\n\\t};\\n\\n\\tprimaryHackTarget = peek(ePortIndex.PRIMARY_HACK_TARGET);\\n\\n\\tif(primaryHackTarget !== portEmpty && currentTarget !== primaryHackTarget) {\\n\\n\\t\\tresults.hackTarget = primaryHackTarget;\\n\\t}\\n\\n\\treturn results;\\n}\\n\\n// ===== TESTS ==================================\\nfunction executeTests(ns) {\\n\\tif (tests.testExampleEnabled)\\n\\t\\ttestExample(ns);\\n}\\n\\nfunction testExample(ns) {\\n\\tns.print(\\\"==== TEST: testExample ====\\\");\\n\\n}\",\"filename\":\"/master/hacking/guided_basic/run-ns1.script\",\"module\":\"\",\"ramUsage\":3.85,\"server\":\"60.8.2.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"// ===== IMPORTS ================================\\nimport * as wallet from \\\"/master/character/wallet-ns2.js\\\";\\n\\n// ===== ARGS ===================================\\nfunction getScriptArgs(ns) {\\n    var scriptArgs = {\\n        firstArg : ns.args[0]\\n    };\\n    \\n    return scriptArgs;\\n}\\n// ===== VARS ===================================\\nvar sVars = {\\n\\tnodeCountLimit: 24,\\n\\tnodeLevelLimit: 200,\\n\\tnodeRamLimit: 64,\\n\\tnodeCoresLimit: 16,\\n\\trecoupTimeCap: 6*60*60, // 6 hours in seconds\\n};\\n\\nvar buy = {\\n\\tnothing: -1,\\n\\tnode: 0,\\n\\tlevel: 1,\\n\\tram: 2,\\n\\tcores: 3,\\n};\\n\\nvar tests = {\\n\\tenabled : false, // Master override for all tests\\n\\tdisableMain : false, // Disables all non-testing logic in main\\n\\ttestEnabled_exampleFunction : false,\\n};\\n\\n// ===== MAIN ===================================\\nexport async function main(ns) {\\n\\tvar sArgs = getScriptArgs(ns);\\n\\t\\n\\t// - Tests ----------------------------------\\n\\tif (tests.enabled)\\n\\t\\texecuteTests(ns);\\n\\t\\n\\t// - Early out ------------------------------\\n\\tif (tests.disableMain) {\\n\\t\\tns.tprint(\\\"WARNING: SCRIPT IS IN TEST ONLY MODE\\\");\\n\\t\\tns.exit();\\n\\t}\\n\\t\\n\\t// - Real Script Logic ----------------------\\n\\tns.print(\\\"Starting main function\\\");\\n\\tns.disableLog(\\\"getServerMoneyAvailable\\\");\\n\\tns.disableLog(\\\"sleep\\\");\\n\\n\\tvar done = false;\\n\\tvar thingToBuy = buy.nothing;\\n\\tvar playerMultipliers = ns.getHacknetMultipliers();\\n\\tvar nodeCost = ns.hacknet.getPurchaseNodeCost();\\n\\n\\t// I bet this script will break horribly if I don't have at least one node to start off with\\n\\tif (ns.hacknet.numNodes() === 0) {\\n\\t\\tns.print(\\\"Buying the first node\\\");\\n\\t\\tnodeCost = ns.hacknet.getPurchaseNodeCost();\\n\\n\\t\\tns.print(\\\"Waiting for more money to buy a node!\\\");\\n\\n\\t\\t// Wait for enough money\\n\\t\\tawait wallet.async_waitForEnoughMoney(ns, wallet.spendLimits.hacknet, nodeCost);\\n\\t\\t\\n\\t\\t// Buy the node\\n\\t\\tns.hacknet.purchaseNode();\\n\\t}\\n\\n\\tawait upgradeAllToMatchBaseNodeAsync(ns);\\n\\n\\twhile (!done) {\\n\\t\\t// check to see what to buy\\n\\t\\tthingToBuy = evaluateHacknetPurchaseOptions(ns, sVars.nodeCountLimit, sVars.nodeLevelLimit, sVars.nodeRamLimit, sVars.nodeCoresLimit, playerMultipliers, sVars.recoupTimeCap);\\n\\n\\t\\t// buy the right thing\\n\\t\\tswitch(thingToBuy){\\n\\t\\t\\tcase buy.node:\\n\\t\\t\\t\\tnodeCost = ns.hacknet.getPurchaseNodeCost();\\n\\n\\t\\t\\t\\tns.print(\\\"Waiting for more money to buy a node!\\\");\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t// Wait for enough money\\n\\t\\t\\t\\tawait wallet.async_waitForEnoughMoney(ns, wallet.spendLimits.hacknet, nodeCost);\\n\\n\\t\\t\\t\\tns.print(\\\"Buying a node\\\");\\n\\t\\t\\t\\tawait purchaseAndUpgradeNode(ns);\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\tcase buy.level:\\n\\t\\t\\t\\tns.print(\\\"Upgrading LEVELS of all nodes\\\");\\n\\t\\t\\t\\tawait upgradeAllHacknetNodeLevelAsync(ns);\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\tcase buy.ram:\\n\\t\\t\\t\\tns.print(\\\"Upgrading RAM of all nodes\\\");\\n\\t\\t\\t\\tawait upgradeAllHacknetNodeRamAsync(ns);\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\tcase buy.cores:\\n\\t\\t\\t\\tns.print(\\\"Upgrading CORES of all nodes\\\");\\n\\t\\t\\t\\tawait upgradeAllHacknetNodeCoresAsync(ns);\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\tcase buy.nothing:\\n\\t\\t\\t\\tdone = true;\\n\\t\\t\\t\\tbreak;\\n\\t\\t}\\n\\t\\t\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n}\\n\\n// ===== FUNCTIONS ==============================\\nfunction getHacknetNodeProduction(level, ram, cores, playerMultipliers) {\\n    var baseProduction = 1.6;\\n    var ramModifier = Math.pow(1.035, ram-1);\\n    var coresModifier = (cores + 5) / 6;\\n    var playerModifier = playerMultipliers.production;\\n\\n    return baseProduction * level * ramModifier * coresModifier * playerModifier;\\n}\\n\\nfunction getCostToReachLevelFromScratch (desiredLevel, playerMultipliers) { \\n\\t// Note: I think this formula might be off, but it's close enough\\n\\tvar baseCost = 520;\\n\\tvar increasePerLevel = 1.04;\\n\\tvar playerLevelCostModifier = playerMultipliers.levelCost;\\n\\tvar totalCostForDesiredLevel = 0;\\n\\n\\tfor(var intermediateLevel = 1; intermediateLevel < desiredLevel; intermediateLevel++) {\\n\\t\\ttotalCostForDesiredLevel += baseCost * Math.pow(increasePerLevel, intermediateLevel-1) * playerLevelCostModifier;\\n\\t}\\n\\n\\treturn totalCostForDesiredLevel;\\n}\\n\\nfunction getCostToReachRamFromScratch (desiredRam, playerMultipliers) {\\n\\t// Note: I think this formula might be off, but it's close enough\\n\\tvar desiredRamLevel = (Math.log(desiredRam)/Math.log(2)) + 1;\\n\\tvar baseCost = 30000;\\n\\tvar increasePerRamLevel = 2.56;\\n\\tvar playerRamCostModifier = playerMultipliers.ramCost;\\n\\tvar totalCostForDesiredRamLevel = 0;\\n\\n\\tfor(var intermediateRamLevel = 1; intermediateRamLevel < desiredRamLevel; intermediateRamLevel++) {\\n\\t\\ttotalCostForDesiredRamLevel += baseCost * Math.pow(increasePerRamLevel, intermediateRamLevel-1) * playerRamCostModifier;\\n\\t}\\n\\n\\treturn totalCostForDesiredRamLevel;\\n}\\n\\nfunction getCostToReachCoresFromScratch (desiredCores, playerMultipliers) {\\n\\t// Note: I think this formula might be off, but it's close enough\\n\\tvar baseCost = 500000;\\n\\tvar increasePerCore = 1.48;\\n\\tvar playerCoresCostModifier = playerMultipliers.coreCost;\\n\\tvar totalCostForDesiredCores = 0;\\n\\n\\tfor(var intermediateCores = 1; intermediateCores < desiredCores; intermediateCores++) {\\n\\t\\ttotalCostForDesiredCores += baseCost * Math.pow(increasePerCore, intermediateCores-1) * playerCoresCostModifier;\\n\\t}\\n\\n\\treturn totalCostForDesiredCores;\\n}\\n\\nfunction getLowestLevelHacknetNodeStats(ns) {\\n    ns.print(\\\"Finding node with lowest level\\\");\\n    var lowestLevelNodeStats = ns.hacknet.getNodeStats(0);\\n\\n    for (var i = 0; i < ns.hacknet.numNodes(); i++) {\\n        var thisNodesStats = ns.hacknet.getNodeStats(i);\\n\\n        if (thisNodesStats.level < lowestLevelNodeStats.level) {\\n            lowestLevelNodeStats = thisNodesStats;\\n        }\\n    }\\n\\n    return lowestLevelNodeStats;\\n}\\n\\nfunction getLowestRamHacknetNodeStats(ns) {\\n\\tns.print(\\\"Finding node with lowest ram\\\");\\n    var lowestRamNodeStats = ns.hacknet.getNodeStats(0);\\n\\n    for (var i = 0; i < ns.hacknet.numNodes(); i++) {\\n        var thisNodesStats = ns.hacknet.getNodeStats(i);\\n\\n        if (thisNodesStats.ram < lowestRamNodeStats.ram) {\\n            lowestRamNodeStats = thisNodesStats;\\n        }\\n    }\\n\\n    return lowestRamNodeStats;\\n}\\n\\nfunction getLowestCoresHacknetNodeStats(ns) {\\n    ns.print(\\\"Finding node with lowest cores\\\");\\n    var lowestCoresNodeStats = ns.hacknet.getNodeStats(0);\\n\\n    for (var i = 0; i < ns.hacknet.numNodes(); i++) {\\n        var thisNodesStats = ns.hacknet.getNodeStats(i);\\n\\n        if (thisNodesStats.cores < lowestCoresNodeStats.cores) {\\n            lowestCoresNodeStats = thisNodesStats;\\n        }\\n    }\\n\\n    return lowestCoresNodeStats;\\n}\\n\\nfunction getAllLowestHacknetNodeStats(ns) {\\n\\tns.print(\\\"Scanning thru all nodes to find ones with the lowest of each stat\\\");\\n    var allLowestNodeStats = {\\n\\t\\tlowestLevelNodeStats : ns.hacknet.getNodeStats(0),\\n\\t\\tlowestRamNodeStats : ns.hacknet.getNodeStats(0),\\n\\t\\tlowestCoresNodeStats : ns.hacknet.getNodeStats(0),\\n\\t};\\n\\tallLowestNodeStats.lowestLevelNodeStats.nodeIndex = 0;\\n\\tallLowestNodeStats.lowestRamNodeStats.nodeIndex = 0;\\n\\tallLowestNodeStats.lowestCoresNodeStats.nodeIndex = 0;\\n\\n    for (var i = 0; i < ns.hacknet.numNodes(); i++) {\\n\\t\\tns.print(\\\"Evaluating if node \\\" + i + \\\" is lowest stat for anything\\\");\\n        var thisNodesStats = ns.hacknet.getNodeStats(i);\\n\\n        if (thisNodesStats.cores < allLowestNodeStats.lowestLevelNodeStats.cores) {\\n            allLowestNodeStats.lowestLevelNodeStats = thisNodesStats;\\n\\t\\t\\tallLowestNodeStats.lowestLevelNodeStats.nodeIndex = i;\\n        }\\n\\t\\t\\n        if (thisNodesStats.cores < allLowestNodeStats.lowestRamNodeStats.cores) {\\n            allLowestNodeStats.lowestRamNodeStats = thisNodesStats;\\n\\t\\t\\tallLowestNodeStats.lowestRamNodeStats.nodeIndex = i;\\n        }\\n\\t\\t\\n        if (thisNodesStats.cores < allLowestNodeStats.lowestCoresNodeStats.cores) {\\n            allLowestNodeStats.lowestCoresNodeStats = thisNodesStats;\\n\\t\\t\\tallLowestNodeStats.lowestCoresNodeStats.nodeIndex = i;\\n        }\\n    }\\n\\n    return allLowestNodeStats;\\n}\\n\\nfunction evaluateHacknetPurchaseOptions(ns, maxNodes, maxLevel, maxRam, maxCores, playerMultipliers, recoupTimeCap) {\\n    ns.print(\\\"Evaluationg what to buy...\\\");\\n\\t// we're just going to go off the first node, assuming all others are updgraded\\n\\tvar currentNodeCount = ns.hacknet.numNodes();\\n\\tvar baseNodeIndex = 0;\\n\\tvar allLowestHacknetNodeStats = getAllLowestHacknetNodeStats(ns);\\n\\tvar lowestLevelNodeStats = allLowestHacknetNodeStats.lowestLevelNodeStats;\\n\\tvar lowestRamNodeStats = allLowestHacknetNodeStats.lowestRamNodeStats;\\n\\tvar lowestCoresNodeStats = allLowestHacknetNodeStats.lowestCoresNodeStats;\\n\\tvar newNodeCost = ns.hacknet.getPurchaseNodeCost();\\n\\t    \\n\\t// the math to truely evaluate a new node would be a PITA so instead,\\n\\t// if we aren't at the max, and it's cheaper than the cost to upgrade\\n\\t// the 1st node we just say fuck it and buy a new node\\n    if (currentNodeCount < maxNodes) {\\n\\t\\tns.print(\\\"Checking to see if buying a node is cheaper than anything else\\\");\\n\\t\\tif ( newNodeCost < ns.hacknet.getLevelUpgradeCost(baseNodeIndex, 1) &&\\n\\t\\t\\tnewNodeCost < ns.hacknet.getRamUpgradeCost(baseNodeIndex, 1) &&\\n\\t\\t\\tnewNodeCost < ns.hacknet.getCoreUpgradeCost(baseNodeIndex, 1)\\n\\t\\t) {\\n            ns.print(\\\"Choosing to buy a node\\\");\\n\\t\\t\\treturn buy.node;\\n\\t\\t}\\n\\t}\\n\\t\\n\\t// get the recoup time of buying a node w/o upgrading it\\n\\tvar bareNodeRecoupTime = getBareNodeRecoupTime(ns, maxNodes, playerMultipliers);\\t\\n\\t\\n\\t// get the recoup time of buying a node and upgrading it to match node zero\\n    var upgradedNodeRecoupTime = getUpgradedNodeRecoupTime(ns, maxNodes, playerMultipliers);\\n\\t\\n\\t// get the recoup time of buying a level\\n\\tvar levelRecoupTime = getLevelRecoupTime(ns, lowestLevelNodeStats, maxLevel, playerMultipliers);\\n\\t\\n\\t// get the recoup time of buying RAM\\n    var ramRecoupTime = getRamRecoupTime(ns, lowestRamNodeStats, maxRam, playerMultipliers);\\n\\t\\n\\t// get the recoup time of buying a core\\n\\tvar coresRecoupTime = getCoresRecoupTime(ns, lowestCoresNodeStats, maxCores, playerMultipliers);\\n\\t\\n\\t// Do comparisons to see what to buy\\n\\tns.print(\\\"=========================== Ready to make a decision ===========================\\\");\\n\\tns.print(\\\"--- maxRecoupTime:\\\" + ns.nFormat(sVars.recoupTimeCap, \\\"0,0\\\") + \\\" seconds (\\\" + ns.nFormat(sVars.recoupTimeCap/60, \\\"0,0\\\") + \\\" minutes)\\\");\\n\\tns.print(\\\"--------------------------------------------------------------------------------\\\");\\n\\tns.print(\\\"Getting the minimum of: \\\");\\n\\tns.print(\\\"--- bareNodeRecoupTime:\\\" + ns.nFormat(bareNodeRecoupTime, \\\"0,0\\\") + \\\" seconds (\\\" + ns.nFormat(bareNodeRecoupTime/60, \\\"0,0\\\") + \\\" minutes)\\\");\\n\\tns.print(\\\"--- upgradedNodeRecoupTime:\\\" + ns.nFormat(upgradedNodeRecoupTime, \\\"0,0\\\") + \\\" seconds (\\\" + ns.nFormat(upgradedNodeRecoupTime/60, \\\"0,0\\\") + \\\" minutes)\\\");\\n\\tns.print(\\\"--- levelRecoupTime:\\\" + ns.nFormat(levelRecoupTime, \\\"0,0\\\") + \\\" seconds (\\\" + ns.nFormat(levelRecoupTime/60, \\\"0,0\\\") + \\\" minutes)\\\");\\n\\tns.print(\\\"--- ramRecoupTime:\\\" + ns.nFormat(ramRecoupTime, \\\"0,0\\\") + \\\" seconds (\\\" + ns.nFormat(ramRecoupTime/60, \\\"0,0\\\") + \\\" minutes)\\\");\\n\\tns.print(\\\"--- coresRecoupTime:\\\" + ns.nFormat(coresRecoupTime, \\\"0,0\\\") + \\\" seconds (\\\" + ns.nFormat(coresRecoupTime/60, \\\"0,0\\\") + \\\" minutes)\\\");\\n\\tns.print(\\\"================================================================================\\\");\\n\\n\\tvar minRecoupTime = Math.min(bareNodeRecoupTime, upgradedNodeRecoupTime, levelRecoupTime, ramRecoupTime, coresRecoupTime);\\n\\t\\n\\tif (bareNodeRecoupTime === minRecoupTime && bareNodeRecoupTime < recoupTimeCap)\\n\\t{\\n        ns.print(\\\"Choosing to buy a node\\\");\\n        return buy.node;\\n\\t}\\t\\n\\telse if (upgradedNodeRecoupTime === minRecoupTime && upgradedNodeRecoupTime < recoupTimeCap)\\n\\t{\\n        ns.print(\\\"Choosing to buy a node\\\");\\n        return buy.node;\\n\\t}\\t\\n    else if (levelRecoupTime === minRecoupTime && levelRecoupTime < recoupTimeCap)\\n    {\\n        ns.print(\\\"Choosing to buy a level\\\");\\n        return buy.level;\\n    }\\n    else if (ramRecoupTime === minRecoupTime && ramRecoupTime < recoupTimeCap)\\n    {\\n        ns.print(\\\"Choosing to buy ram\\\");\\n        return buy.ram;\\n    }\\n    else if (coresRecoupTime === minRecoupTime && coresRecoupTime < recoupTimeCap)\\n    {\\n        ns.print(\\\"Choosing to buy cores\\\");\\n        return buy.cores;\\n    }\\n    \\n    return buy.nothing;\\n}\\n\\nfunction getBareNodeRecoupTime(ns, maxNodes, playerMultipliers) {\\n\\tvar bareNodeRecoupTime = Number.MAX_VALUE;\\n\\tvar newNodeCost = ns.hacknet.getPurchaseNodeCost();\\n\\tvar currentNodeCount = ns.hacknet.numNodes();\\n\\t\\n    if (currentNodeCount < maxNodes) {\\n\\t\\tns.print(\\\"=== Determining bareNodeRecoupTime ===\\\");\\n\\t\\t\\n\\t\\tvar bareNodeProduction = getHacknetNodeProduction(1, 1, 1, playerMultipliers);\\n\\t\\tns.print(\\\"bareNodeProduction: \\\" + bareNodeProduction);\\n\\t\\t\\n\\t\\tns.print(\\\"newNodeCost: \\\" + newNodeCost);\\n\\t\\t\\n\\t\\tbareNodeRecoupTime = newNodeCost/bareNodeProduction;\\n\\t\\tns.print(\\\"bareNodeRecoupTime: \\\" + bareNodeRecoupTime);\\n\\t}\\n\\t\\n\\treturn bareNodeRecoupTime;\\n}\\n\\nfunction  getUpgradedNodeRecoupTime(ns, maxNodes, playerMultipliers) {\\n\\tvar upgradedNodeRecoupTime = Number.MAX_VALUE;\\n\\tvar newNodeCost = ns.hacknet.getPurchaseNodeCost();\\n\\tvar currentNodeCount = ns.hacknet.numNodes();\\n\\tvar baseNodeIndex = 0;\\n\\tvar baseNodeStats = ns.hacknet.getNodeStats(baseNodeIndex);\\n\\t\\n    if (currentNodeCount < maxNodes) {\\n\\t\\tns.print(\\\"=== Determining upgradedNodeRecoupTime ===\\\");\\n\\t\\t\\n\\t\\tvar upgradedNodeProduction = baseNodeStats.production;\\n\\t\\tns.print(\\\"upgradedNodeProduction/baseNodeProduction: \\\" + upgradedNodeProduction);\\n\\t\\t\\n\\t\\tns.print(\\\"newNodeCost: \\\" + newNodeCost);\\n\\t\\t\\n\\t\\tvar levelUpgradeCost = getCostToReachLevelFromScratch(baseNodeStats.level, playerMultipliers);\\n\\t\\tns.print(\\\"levelUpgradeCost: \\\" + levelUpgradeCost);\\n\\t\\t\\n\\t\\tvar ramUpgradeCost = getCostToReachRamFromScratch(baseNodeStats.ram, playerMultipliers);\\n\\t\\tns.print(\\\"ramUpgradeCost: \\\" + ramUpgradeCost);\\n\\t\\t\\n\\t\\tvar coresUpgradeCost = getCostToReachCoresFromScratch(baseNodeStats.cores, playerMultipliers);\\n\\t\\tns.print(\\\"coresUpgradeCost: \\\" + coresUpgradeCost);\\n\\t\\t\\n\\t\\tvar upgradedNodeTotalCost = newNodeCost + levelUpgradeCost + ramUpgradeCost + coresUpgradeCost;\\n\\t\\tns.print(\\\"upgradedNodeTotalCost: \\\" + upgradedNodeTotalCost);\\n\\t\\t\\n\\t\\tupgradedNodeRecoupTime = upgradedNodeTotalCost/upgradedNodeProduction;\\n\\t\\tns.print(\\\"upgradedNodeRecoupTime: \\\" + upgradedNodeRecoupTime);\\n\\t\\t\\n\\t}\\n\\t\\n\\treturn upgradedNodeRecoupTime;\\n}\\n\\nfunction  getLevelRecoupTime(ns, lowestLevelNodeStats, maxLevel, playerMultipliers) {\\n\\tvar levelRecoupTime = Number.MAX_VALUE;\\n\\t\\n    if (lowestLevelNodeStats.level < maxLevel) {\\n\\t\\tns.print(\\\"=== Determining levelRecoupTime ===\\\");\\n\\t\\t\\n\\t\\tns.print(\\\"lowestLevelNodeStats.production: \\\" + lowestLevelNodeStats.production);\\n\\t\\n        var nextLevelProduction = getHacknetNodeProduction(lowestLevelNodeStats.level+1, lowestLevelNodeStats.ram, lowestLevelNodeStats.cores, playerMultipliers);\\n        ns.print(\\\"nextLevelProduction: \\\" + nextLevelProduction);\\n        \\n        var nextLevelProductionDelta = nextLevelProduction - lowestLevelNodeStats.production;\\n        ns.print(\\\"nextLevelProductionDelta: \\\" + nextLevelProductionDelta);\\n        \\n\\t\\tvar nextLevelCost = ns.hacknet.getLevelUpgradeCost(lowestLevelNodeStats.nodeIndex, 1);\\n        ns.print(\\\"nextLevelCost: \\\" + nextLevelCost);\\n        \\n\\t\\tlevelRecoupTime = nextLevelCost/nextLevelProductionDelta;\\n\\t\\tns.print(\\\"levelRecoupTime:\\\" + levelRecoupTime);\\n\\t}\\n\\t\\n\\treturn levelRecoupTime;\\n}\\n\\nfunction  getRamRecoupTime(ns, lowestRamNodeStats, maxRam, playerMultipliers) {\\n\\tvar ramRecoupTime = Number.MAX_VALUE;\\n\\t\\n    if (lowestRamNodeStats.ram < maxRam) {\\n\\t\\tns.print(\\\"=== Determining ramRecoupTime ===\\\");\\n\\t\\tns.print(\\\"lowestRamNodeStats.production: \\\" + lowestRamNodeStats.production);\\n\\t\\n        var nextRamProduction = getHacknetNodeProduction(lowestRamNodeStats.level, lowestRamNodeStats.ram+1, lowestRamNodeStats.cores, playerMultipliers);\\n        ns.print(\\\"nextRamProduction: \\\" + nextRamProduction);\\n        \\n        var nextRamProductionDelta = nextRamProduction - lowestRamNodeStats.production;\\n        ns.print(\\\"nextRamProductionDelta: \\\" + nextRamProductionDelta);\\n        \\n\\t\\tvar nextRamCost = ns.hacknet.getRamUpgradeCost(lowestRamNodeStats.nodeIndex, 1);\\n        ns.print(\\\"nextRamCost: \\\" + nextRamCost);\\n        \\n\\t\\tramRecoupTime = nextRamCost/nextRamProductionDelta;\\n\\t\\tns.print(\\\"ramRecoupTime:\\\" + ramRecoupTime);\\n\\t}\\n\\t\\n\\treturn ramRecoupTime;\\n}\\n\\nfunction  getCoresRecoupTime(ns, lowestCoresNodeStats, maxCores, playerMultipliers) {\\n\\tvar coresRecoupTime = Number.MAX_VALUE;\\n\\t\\n    if (lowestCoresNodeStats.cores < maxCores) {\\n\\t\\tns.print(\\\"=== Determining coresRecoupTime ===\\\");\\n\\t\\t\\n\\t\\tns.print(\\\"lowestCoresNodeStats.production: \\\" + lowestCoresNodeStats.production);\\n\\t\\tns.print(\\\"lowestCoresNodeStats.level: \\\" + lowestCoresNodeStats.level);\\n\\t\\tns.print(\\\"lowestCoresNodeStats.ram: \\\" + lowestCoresNodeStats.ram);\\n\\t\\tns.print(\\\"lowestCoresNodeStats.cores: \\\" + lowestCoresNodeStats.cores);\\n\\t\\t\\n        var nextCoreProduction = getHacknetNodeProduction(lowestCoresNodeStats.level, lowestCoresNodeStats.ram, lowestCoresNodeStats.cores+1, playerMultipliers);\\n        ns.print(\\\"nextCoreProduction: \\\" + nextCoreProduction);\\n        \\n\\t\\tvar nextCoreProductionDelta = nextCoreProduction - lowestCoresNodeStats.production;\\n        ns.print(\\\"nextCoreProductionDelta: \\\" + nextCoreProductionDelta);\\n        \\n\\t\\tvar nextCoreCost = ns.hacknet.getCoreUpgradeCost(lowestCoresNodeStats.nodeIndex, 1);\\n        ns.print(\\\"nextCoreCost: \\\" + nextCoreCost);\\n\\t\\t\\n\\t\\tcoresRecoupTime = nextCoreCost/nextCoreProductionDelta;\\n\\t\\tns.print(\\\"coresRecoupTime:\\\" + coresRecoupTime);\\n\\t}\\n\\t\\n\\treturn coresRecoupTime;\\n}\\n\\nasync function upgradeAllHacknetNodeLevelAsync(ns) {\\n    // we're keying desired amount off of the starting node\\n    var desiredLevel = ns.hacknet.getNodeStats(0).level + 1;\\n    \\n    // iterate thru all of our hacknet nodes\\n    for (var i = 0; i < ns.hacknet.numNodes(); i++) {\\n        await upgradeNodeToDesiredLevelAsync(ns, i, desiredLevel);\\n    }\\n}\\n\\nasync function upgradeAllHacknetNodeRamAsync(ns) {\\n    // we're keying desired amount off of the starting node\\n    var desiredRam = ns.hacknet.getNodeStats(0).ram + 1;\\n    \\n    // iterate thru all of our hacknet nodes\\n    for (var i = 0; i < ns.hacknet.numNodes(); i++) {\\n        await upgradeNodeToDesiredRamAsync(ns, i, desiredRam);\\n    }\\n}\\n\\nasync function upgradeAllHacknetNodeCoresAsync(ns) {\\n    // we're keying desired amount off of the starting cores\\n    var desiredCores = ns.hacknet.getNodeStats(0).cores + 1;\\n    \\n    // iterate thru all of our hacknet cores\\n    for (var i = 0; i < ns.hacknet.numNodes(); i++) {\\n        await upgradeNodeToDesiredCoresAsync(ns, i, desiredCores);\\n    }\\n}\\n\\nasync function upgradeNodeToDesiredLevelAsync(ns, nodeIndex, desiredLevel) {\\n    // Keep going until we hit the desired level\\n    while (ns.hacknet.getNodeStats(nodeIndex).level < desiredLevel) {\\n        var cost = ns.hacknet.getLevelUpgradeCost(nodeIndex, 1);\\n        \\n        // Wait to have enough money to buy the next level\\n\\t\\tns.print(\\\"Waiting for more money to buy a level\\\");\\n\\n\\t\\tawait wallet.async_waitForEnoughMoney(ns, wallet.spendLimits.hacknet, cost);\\n        \\n        ns.hacknet.upgradeLevel(nodeIndex, 1);\\n    }\\n}\\n\\nasync function upgradeNodeToDesiredRamAsync(ns, nodeIndex, desiredRam) {\\n    // Keep going until we hit the desired ram\\n    while (ns.hacknet.getNodeStats(nodeIndex).ram < desiredRam) {\\n        var cost = ns.hacknet.getRamUpgradeCost(nodeIndex, 1);\\n        \\n        // Wait to have enough money to buy the next ram\\n\\t\\tns.print(\\\"Waiting for more money to buy a RAM\\\");\\n\\t\\t\\n\\t\\tawait wallet.async_waitForEnoughMoney(ns, wallet.spendLimits.hacknet, cost);\\n        \\n        ns.hacknet.upgradeRam(nodeIndex, 1);\\n    }\\n}\\n\\nasync function upgradeNodeToDesiredCoresAsync(ns, nodeIndex, desiredCores) {\\n    // Keep going until we hit the desired cores\\n    while (ns.hacknet.getNodeStats(nodeIndex).cores < desiredCores) {\\n        var cost = ns.hacknet.getCoreUpgradeCost(nodeIndex, 1);\\n        \\n        // Wait to have enough money to buy the next cores\\n\\t\\tns.print(\\\"Waiting for more money to buy a core\\\");\\n\\n\\t\\tawait wallet.async_waitForEnoughMoney(ns, wallet.spendLimits.hacknet, cost);\\n        \\n        ns.hacknet.upgradeCore(nodeIndex, 1);\\n    }\\n}\\n\\nasync function purchaseAndUpgradeNode(ns) {\\n    // buy a new node and get it's stats\\n    var newNodeIndex = ns.hacknet.purchaseNode();\\n    \\n    // get stats for node 0, which should have the latest upgrades\\n    var baseNodeStats = ns.hacknet.getNodeStats(0);\\n    \\n    var desiredLevel = baseNodeStats.level;\\n    var desiredRam = baseNodeStats.ram;\\n    var desiredCores = baseNodeStats.cores;\\n    \\n    await upgradeNodeToDesiredLevelAsync(ns, newNodeIndex, desiredLevel);\\n    await upgradeNodeToDesiredRamAsync(ns, newNodeIndex, desiredRam);\\n    await upgradeNodeToDesiredCoresAsync(ns, newNodeIndex, desiredCores);\\n}\\n\\nasync function upgradeAllToMatchBaseNodeAsync(ns) {\\n    var baseNodeStats = ns.hacknet.getNodeStats(0);\\n    \\n    var desiredLevel = baseNodeStats.level;\\n    var desiredRam = baseNodeStats.ram;\\n    var desiredCores = baseNodeStats.cores;\\n    \\n    // // iterate thru all of our hacknet cores\\n\\tfor (var nodeIndex = 0; nodeIndex < ns.hacknet.numNodes(); nodeIndex++) {\\n\\t\\tns.print(\\\"Bringing node \\\" + nodeIndex + \\\" up to spec with base node\\\");\\n\\t\\tawait upgradeNodeToDesiredLevelAsync(ns, nodeIndex, desiredLevel);\\n\\t\\tawait upgradeNodeToDesiredRamAsync(ns, nodeIndex, desiredRam);\\n\\t\\tawait upgradeNodeToDesiredCoresAsync(ns, nodeIndex, desiredCores);\\n    }\\n}\\n\\n// ===== TESTS ==================================\\nfunction executeTests(ns) {\\n\\tif (tests.testEnabled_exampleFunction)\\n\\t\\ttest_exampleFunction(ns);\\n}\\n\\nfunction test_exampleFunction(ns) {\\n\\tns.print(\\\"==== TEST: test_exampleFunction ====\\\");\\n\\n}\",\"filename\":\"/master/character/hacknet/node_autobuy-ns2.js\",\"module\":\"\",\"ramUsage\":9.7,\"server\":\"60.8.2.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"// ===== IMPORTS ================================\\n\\n// ===== ARGS ===================================\\nfunction getScriptArgs(ns) {\\n    var scriptArgs = {\\n        firstArg: ns.args[0]\\n    };\\n\\n    return scriptArgs;\\n}\\n\\n// ===== VARS ===================================\\nvar sVars = {\\n\\n};\\n\\nvar tests = {\\n    enabled: false, // Master override for all tests\\n    disableMain: false, // Disables all non-testing logic in main\\n    testEnabled_exampleFunction: false,\\n};\\n\\n// ===== MAIN ===================================\\nexport async function main(ns) {\\n    var sArgs = getScriptArgs(ns);\\n\\n    // - Tests ----------------------------------\\n    if (tests.enabled)\\n        executeTests(ns);\\n\\n    // - Early out ------------------------------\\n    if (tests.disableMain) {\\n        ns.tprint(\\\"WARNING: SCRIPT IS IN TEST ONLY MODE\\\");\\n        ns.exit();\\n    }\\n\\n    // - Real Script Logic ----------------------\\n    ns.print(\\\"Starting script...\\\");\\n    ns.disableLog(\\\"ALL\\\");\\n}\\n\\n// ===== FUNCTIONS ==============================\\nexport function getServerRamObject(ns, server) {\\n    // Get the server's RAM, total and used\\n    var targetServRam = ns.getServerRam(server);\\n    var targetServTotalRam = targetServRam[0];\\n    var targetServUsedRam = targetServRam[1];\\n\\n    // Use the RAM info to get the free ram\\n    var targetServFreeRam = targetServTotalRam - targetServUsedRam;\\n\\n    var serverRamObj = {\\n        total: targetServRam,\\n        used: targetServUsedRam,\\n        free: targetServFreeRam,\\n    }\\n\\n    return serverRamObj;\\n}\\n\\n// ===== TESTS ==================================\\nfunction executeTests(ns) {\\n    if (tests.testEnabled_exampleFunction)\\n        test_exampleFunction(ns);\\n}\\n\\nfunction test_exampleFunction(ns) {\\n    ns.print(\\\"==== TEST: test_exampleFunction ====\\\");\\n\\n}\",\"filename\":\"/master/functions/getServerRamObj-ns2.js\",\"module\":\"\",\"ramUsage\":1.7,\"server\":\"60.8.2.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"60.8.2.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"60.8.2.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"60.8.2.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"// ===== IMPORTS ================================\\nimport * as bsi from \\\"/master/functions/buildServerInfoArray-ns2.js\\\";\\nimport * as hpn from \\\"/master/functions/getNumOpenablePorts-ns2.js\\\";\\nimport * as gsr from \\\"/master/functions/getServerRamObj-ns2.js\\\";\\nimport * as gra from \\\"/master/functions/getRootAccess-ns2.js\\\";\\nimport * as enumLib from \\\"/master/functions/enumLib-ns2.js\\\";\\nvar ePortIndex = enumLib.getEnumPortIndexVersion(1);\\n\\n// ===== ARGS ===================================\\nfunction getScriptArgs(ns) {\\n    var scriptArgs = {\\n\\t\\tdeployTarget : ns.args[0],\\n        fallbackHackTarget : ns.args[1],\\n    };\\n    \\n    return scriptArgs;\\n}\\n\\n// ===== VARS ===================================\\nvar sVars = {\\n\\n};\\n\\nvar tests = {\\n\\tenabled : false, // Master override for all tests\\n\\tdisableMain : false, // Disables all non-testing logic in main\\n\\ttestEnabled_exampleFunction : false,\\n};\\n\\n// ===== MAIN ===================================\\nexport async function main(ns) {\\n\\tvar sArgs = getScriptArgs(ns);\\n\\t\\n\\t// - Tests ----------------------------------\\n\\tif (tests.enabled)\\n\\t\\texecuteTests(ns);\\n\\t\\n\\t// - Early out ------------------------------\\n\\tif (tests.disableMain) {\\n\\t\\tns.tprint(\\\"WARNING: SCRIPT IS IN TEST ONLY MODE\\\");\\n\\t\\tns.exit();\\n\\t}\\n\\t\\n\\t// - Real Script Logic ----------------------\\n\\tns.print(\\\"Starting script...\\\");\\n\\tns.disableLog(\\\"ALL\\\");\\n\\n\\t// Set the best target\\n\\tvar bestHackTarget = ns.peek(ePortIndex.PRIMARY_HACKING_TARGET);\\n\\tif(bestHackTarget === \\\"NULL PORT DATA\\\") {\\n\\t\\tbestHackTarget = sArgs.fallbackHackTarget;\\n\\t}\\n\\n\\t// Function is built around a server array, so we build a simple one\\n\\tvar serverInfoArray = [bsi.getTargetInfo(ns, sArgs.deployTarget, null, 0)];\\n\\n\\t// Deploy the hackbots\\n\\tawait deployHackBots(ns, serverInfoArray, bestHackTarget);\\n}\\n\\n// ===== FUNCTIONS ==============================\\nexport async function deployHackBots(ns, deployServerListArray, hackTargetServer) {\\n\\tns.print(\\\"Beggining to deploy the hack bots! Targeting: \\\" + hackTargetServer);\\n\\n\\t// Ensure we have root access on the hack target\\n\\tgra.getRootAccess(ns, hackTargetServer);\\n\\n\\tvar portBreakingLevel = hpn.getNumOpenablePorts(ns);\\n\\n\\tfor (var i = 0; i < deployServerListArray.length; i++) {\\n\\t\\tvar deployServer = deployServerListArray[i];\\n\\t\\tns.print(\\\"Evaluating server: \\\" + deployServer.name);\\n\\n\\t\\tvar hackHelperScript = \\\"/master/hacking/helpers/hack_target_loop-ns1.script\\\";\\n\\t\\tvar growHelperScript = \\\"/master/hacking/helpers/grow_target_loop-ns1.script\\\";\\n\\t\\tvar weakenHelperScript = \\\"/master/hacking/helpers/weaken_target_loop-ns1.script\\\";\\n\\n\\t\\tvar minRequiredRam = ns.getScriptRam(hackHelperScript) + ns.getScriptRam(growHelperScript) + ns.getScriptRam(weakenHelperScript);\\n\\n\\t\\ttry {\\n\\t\\t\\tif ((portBreakingLevel >= deployServer.numPortsRequired && deployServer.ram >= minRequiredRam && deployServer.isHome === false) || deployServer.isPserv) {\\n\\t\\t\\t\\tns.print(\\\"Preparing to deploy the hack bots to: \\\" + deployServer.name);\\n\\t\\t\\t\\tgra.getRootAccess(ns, deployServer.name);\\n\\n\\t\\t\\t\\t// ns.killall returns true if any scripts were killed, false if not. We're ready to move on if we haven't killed anything\\n\\t\\t\\t\\twhile (ns.killall(deployServer.name)) {\\n\\t\\t\\t\\t\\tns.print(\\\"Sleeping after trying to killall on \\\" + deployServer.name);\\n\\t\\t\\t\\t\\tawait ns.sleep(1000);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tvar freeRam = gsr.getServerRamObject(ns, deployServer.name).free;\\n\\t\\t\\t\\t// Algorithm v2\\n\\t\\t\\t\\t// Weakening and hacking should make up at least 10% of the RAM pool, the remainder goes towards growing\\n\\t\\t\\t\\tvar ramPerWeakenHelperThread = ns.getScriptRam(weakenHelperScript);\\n\\t\\t\\t\\tvar weakenReservedRamMinimumModifier = 0.15;\\n\\t\\t\\t\\tvar weakenMinThreads = 1;\\n\\t\\t\\t\\tvar weakenRamMinRequirement = freeRam * weakenReservedRamMinimumModifier;\\n\\t\\t\\t\\tvar weakenThreads = Math.ceil(weakenRamMinRequirement / ramPerWeakenHelperThread);\\n\\t\\t\\t\\tif (weakenThreads < weakenMinThreads) {\\n\\t\\t\\t\\t\\tweakenThreads = weakenMinThreads;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tvar weakenRamUsage = weakenThreads * ramPerWeakenHelperThread;\\n\\n\\t\\t\\t\\tvar ramPerHackHelperThread = ns.getScriptRam(hackHelperScript);\\n\\t\\t\\t\\tvar hackReservedRamMinimumModifier = 0.10;\\n\\t\\t\\t\\tvar hackMaxStealPercent = 0.01;\\n\\t\\t\\t\\tvar hackPercentPerThread = ns.hackAnalyzePercent(hackTargetServer)/100;\\n\\t\\t\\t\\tvar hackMaxThreadsRaw = hackMaxStealPercent/hackPercentPerThread;\\n\\t\\t\\t\\tvar hackMaxThreads = Math.floor(hackMaxThreadsRaw);\\n\\t\\t\\t\\tvar hackMinThreads = 1;\\n\\t\\t\\t\\tvar hackRamMinRequirement = freeRam * hackReservedRamMinimumModifier;\\n\\t\\t\\t\\tvar hackThreads = Math.ceil(hackRamMinRequirement / ramPerHackHelperThread);\\n\\t\\t\\t\\tif (hackThreads > hackMaxThreads) {\\n\\t\\t\\t\\t\\thackThreads = hackMaxThreads;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tif (hackThreads < hackMinThreads) {\\n\\t\\t\\t\\t\\thackThreads = hackMinThreads;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tvar hackRamUsage = hackThreads * ramPerHackHelperThread;\\n\\n\\t\\t\\t\\tvar ramPerGrowHelperThread = ns.getScriptRam(growHelperScript);\\n\\t\\t\\t\\tvar growRamPool = freeRam - (weakenRamUsage + hackRamUsage);\\n\\t\\t\\t\\tvar growThreads = Math.floor(growRamPool / ramPerGrowHelperThread);\\n\\n\\t\\t\\t\\tns.print(\\\"=========== Thread Count Dump ===========\\\");\\n\\t\\t\\t\\tns.print(\\\"weakenThreads: \\\" + weakenThreads);\\n\\t\\t\\t\\tns.print(\\\"growThreads: \\\" + growThreads);\\n\\t\\t\\t\\tns.print(\\\"hackThreads: \\\" + hackThreads);\\n\\t\\t\\t\\tns.print(\\\"============= End Debug Dump ============\\\");\\n\\n\\t\\t\\t\\t// Copy the scripts\\n\\t\\t\\t\\tns.print(\\\"Copying scripts...\\\");\\n\\t\\t\\t\\tns.scp(hackHelperScript, \\\"home\\\", deployServer.name);\\n\\t\\t\\t\\tns.scp(growHelperScript, \\\"home\\\", deployServer.name);\\n\\t\\t\\t\\tns.scp(weakenHelperScript, \\\"home\\\", deployServer.name);\\n\\n\\t\\t\\t\\t// Run the scripts\\n\\t\\t\\t\\tns.print(\\\"Launching the hack bots!\\\");\\n\\t\\t\\t\\tawait ns.exec(weakenHelperScript, deployServer.name, weakenThreads, hackTargetServer);\\n\\t\\t\\t\\tawait ns.exec(growHelperScript, deployServer.name, growThreads, hackTargetServer);\\n\\t\\t\\t\\tawait ns.exec(hackHelperScript, deployServer.name, hackThreads, hackTargetServer, ns.getServerMaxMoney(hackTargetServer));\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\tcatch(error)\\n\\t\\t{\\n\\t\\t\\tns.tprint(error);\\n\\t\\t\\tns.tprint(\\\"Likely a server stopped existing\\\");\\n\\t\\t}\\n\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n}\\n\\n\\n// ===== TESTS ==================================\\nfunction executeTests(ns) {\\n\\tif (tests.testEnabled_exampleFunction)\\n\\t\\ttest_exampleFunction(ns);\\n}\\n\\nfunction test_exampleFunction(ns) {\\n\\tns.print(\\\"==== TEST: test_exampleFunction ====\\\");\\n\\n}\",\"filename\":\"/master/hacking/deployHackBots-ns2.js\",\"module\":{},\"ramUsage\":7.7,\"server\":\"60.8.2.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"// ===== IMPORTS ================================\\nimport * as enumLib from \\\"/master/functions/enumLib-ns2.js\\\";\\nvar ePortIndex = enumLib.getEnumPortIndexVersion(1);\\n\\n// ===== ARGS ===================================\\nfunction getScriptArgs(ns) {\\n    var scriptArgs = {\\n        scanFrequency : ns.args[0],\\n        mode : ns.args[1],\\n    };\\n    \\n    return scriptArgs;\\n}\\n\\n// ===== VARS ===================================\\nvar sVars = {\\n\\n};\\n\\nvar tests = {\\n\\tenabled : false, // Master override for all tests\\n\\tdisableMain : false, // Disables all non-testing logic in main\\n\\ttestEnabled_exampleFunction : false,\\n};\\n\\n// ===== MAIN ===================================\\nexport async function main(ns) {\\n\\tvar sArgs = getScriptArgs(ns);\\n\\t\\n\\t// - Tests ----------------------------------\\n\\tif (tests.enabled)\\n\\t\\texecuteTests(ns);\\n\\t\\n\\t// - Early out ------------------------------\\n\\tif (tests.disableMain) {\\n\\t\\tns.tprint(\\\"WARNING: SCRIPT IS IN TEST ONLY MODE\\\");\\n\\t\\tns.exit();\\n\\t}\\n\\t\\n\\t// - Real Script Logic ----------------------\\n\\tns.print(\\\"Starting script...\\\");\\n    ns.disableLog(\\\"ALL\\\");\\n    \\n    if (sArgs.mode === \\\"print\\\") {\\n        await monitorModePrint(ns, sArgs.scanFrequency);\\n    }\\n    else if (sArgs.mode === \\\"tprint\\\") {\\n        await monitorModeTPrint(ns, sArgs.scanFrequency);\\n    }\\n    else {\\n        await monitorModePrint(ns);\\n    }\\n}\\n\\n// ===== FUNCTIONS ==============================\\nasync function monitorModePrint(ns, scanFrequency) {\\n    while(true) {\\n        if (ns.peek(ePortIndex.PRIMARY_HACKING_TARGET) !== \\\"NULL PORT DATA\\\") {\\n            var scanTarget = ns.peek(ePortIndex.PRIMARY_HACKING_TARGET);\\n            var securityCurrent = ns.nFormat(ns.getServerSecurityLevel(scanTarget), \\\"0,0.0\\\");\\n            var securityMinimum = ns.nFormat(ns.getServerMinSecurityLevel(scanTarget), \\\"0,0.0\\\");\\n            var moneyCurrent = ns.nFormat(ns.getServerMoneyAvailable(scanTarget), \\\"0,0.00\\\");\\n            var moneyMax = ns.nFormat(ns.getServerMaxMoney(scanTarget), \\\"0,0.00\\\");\\n\\n            ns.print(\\\"scanTarget: \\\" + scanTarget);\\n            ns.print(\\\"Security (Minimum): \\\" + securityCurrent + \\\" (\\\" + securityMinimum + \\\")\\\");\\n            ns.print(\\\"Money (Max): \\\" + moneyCurrent + \\\" (\\\" + moneyMax + \\\")\\\");\\n        }\\n        else {\\n            ns.print(\\\"Bad peek results: \\\" + ns.peek(ePortIndex.PRIMARY_HACKING_TARGET));\\n        }\\n\\n        await ns.sleep(scanFrequency * 1000);\\n    }\\n}\\n\\nasync function monitorModeTPrint(ns, scanFrequency) {\\n    while(true) {\\n        if (ns.peek(ePortIndex.PRIMARY_HACKING_TARGET) !== \\\"NULL PORT DATA\\\") {\\n            var scanTarget = ns.peek(ePortIndex.PRIMARY_HACKING_TARGET);\\n            var securityCurrent = ns.nFormat(ns.getServerSecurityLevel(scanTarget), \\\"0,0.0\\\");\\n            var securityMinimum = ns.nFormat(ns.getServerMinSecurityLevel(scanTarget), \\\"0,0.0\\\");\\n            var moneyCurrent = ns.nFormat(ns.getServerMoneyAvailable(scanTarget), \\\"0,0.00\\\");\\n            var moneyMax = ns.nFormat(ns.getServerMaxMoney(scanTarget), \\\"0,0.00\\\");\\n\\n            ns.tprint(\\\"scanTarget: \\\" + scanTarget);\\n            ns.tprint(\\\"Security (Minimum): \\\" + securityCurrent + \\\" (\\\" + securityMinimum + \\\")\\\");\\n            ns.tprint(\\\"Money (Max): \\\" + moneyCurrent + \\\" (\\\" + moneyMax + \\\")\\\");\\n        }\\n        else {\\n            ns.print(\\\"Bad peek results: \\\" + ns.peek(ePortIndex.PRIMARY_HACKING_TARGET));\\n        }\\n\\n        await ns.sleep(scanFrequency * 1000);\\n    }\\n}\\n\\n// ===== TESTS ==================================\\nfunction executeTests(ns) {\\n\\tif (tests.testEnabled_exampleFunction)\\n\\t\\ttest_exampleFunction(ns);\\n}\\n\\nfunction test_exampleFunction(ns) {\\n\\tns.print(\\\"==== TEST: test_exampleFunction ====\\\");\\n\\n}\",\"filename\":\"/master/hacking/monitor-ns2.js\",\"module\":{},\"ramUsage\":3,\"server\":\"60.8.2.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"// ===== IMPORTS ================================\\nimport * as wallet from \\\"/master/character/wallet-ns2.js\\\";\\n\\n// ===== ARGS ===================================\\nfunction getScriptArgs(ns) {\\n    var scriptArgs = {\\n        firstArg : ns.args[0]\\n    };\\n    \\n    return scriptArgs;\\n}\\n\\n// ===== VARS ===================================\\nvar sVars = {\\n    \\n};\\n\\nvar tests = {\\n\\tenabled : false, // Master override for all tests\\n\\tdisableMain : false, // Disables all non-testing logic in main\\n\\ttestEnabled_exampleFunction : false,\\n};\\n\\n// ===== MAIN ===================================\\nexport async function main(ns) {\\n\\tvar sArgs = getScriptArgs(ns);\\n\\t\\n\\t// - Tests ----------------------------------\\n\\tif (tests.enabled)\\n\\t\\texecuteTests(ns);\\n\\t\\n\\t// - Early out ------------------------------\\n\\tif (tests.disableMain) {\\n\\t\\tns.tprint(\\\"WARNING: SCRIPT IS IN TEST ONLY MODE\\\");\\n\\t\\tns.exit();\\n\\t}\\n\\t\\n\\t// - Real Script Logic ----------------------\\n\\tns.print(\\\"Starting script...\\\");\\n    ns.disableLog(\\\"ALL\\\");\\n    \\n    while(true) {\\n        await recruitmentMembers(ns);\\n        updateGangMemberCombatEquipment(ns);\\n        updateGangMemberHackingEquipment(ns);\\n        updateGangMemberTasks(ns);\\n\\n        await ns.sleep(100);\\n    }\\n}\\n\\n// ===== FUNCTIONS ==============================\\nasync function recruitmentMembers(ns) {\\n    while (ns.gang.canRecruitMember()) {\\n        var currentDateTime = new Date();\\n        // $TODO: Someday name a gang member \\\"Android-function getMilliseconds() { [native code] }\\\", for the funny\\n        var newGangMemberName = \\\"Android-\\\" + currentDateTime.getTime();\\n        ns.gang.recruitMember(newGangMemberName);\\n\\n        await ns.sleep(100);\\n    }\\n}\\n\\nfunction updateGangMemberCombatEquipment(ns) {\\n    if(ns.gang.getGangInformation().isHacking === false) {\\n        ns.print(\\\"Buying combat equipment\\\");\\n\\n        // Get a list of possible equipment\\n        var equipmentNamesArray = ns.gang.getEquipmentNames();\\n        \\n        for(var i=0; i < equipmentNamesArray.length; i++) {\\n            var equipment = equipmentNamesArray[i];\\n\\n            if(ns.gang.getEquipmentType(equipment) !== \\\"Rootkit\\\" && ns.gang.getEquipmentType(equipment) !== \\\"Augmentation\\\") {\\n                purchaseEquipmentForAllGangMembers(ns, equipment);\\n            }\\n        }\\n    }\\n}\\n\\nfunction updateGangMemberHackingEquipment(ns) {\\n    if(ns.gang.getGangInformation().isHacking === true) {\\n        ns.print(\\\"Buying hacking equipment\\\");\\n\\n        // Get a list of possible equipment\\n        var equipmentNamesArray = ns.gang.getEquipmentNames();\\n        \\n        for(var i=0; i < equipmentNamesArray.length; i++) {\\n            var equipment = equipmentNamesArray[i];\\n    \\n            if(ns.gang.getEquipmentType(equipment) === \\\"Rootkit\\\" && ns.gang.getEquipmentType(equipment) !== \\\"Augmentation\\\") {\\n                purchaseEquipmentForAllGangMembers(ns, equipment);\\n            }\\n        }\\n    }\\n}\\n\\nfunction updateGangMemberTasks(ns) {\\n    // Determine if the gang is a hacking gang or not\\n\\n    if (ns.gang.getGangInformation().isHacking === true) {\\n        assignHackingTasks(ns);\\n    }\\n    else if (ns.gang.getGangInformation().isHacking === false) {\\n        assignCombatTasks(ns);\\n    }\\n}\\n\\nfunction assignHackingTasks(ns) {\\n\\n}\\n\\nfunction assignCombatTasks(ns) {\\n    // Task will be \\\"Unassigned\\\" if not assigned\\n    // Build a list of gang members\\n    var gangMemberNamesArray = ns.gang.getMemberNames()\\n\\n    // iterate thru the gang members\\n    for(var i=0; i < gangMemberNamesArray.length; i++) {\\n        var gangMemberName = gangMemberNamesArray[i];\\n        var gangMemberTask = getMemberInformation(gangMemberName).task;\\n        // if \\\"Unassigned\\\" set to \\\"Vigalante Justice\\\"\\n        if (gangMemberTask === \\\"Unassigned\\\") {\\n            setMemberTask(gangMemberName, \\\"Vigalante Justice\\\")\\n        }\\n\\n    }    \\n}\\n\\nfunction purchaseEquipmentForAllGangMembers(ns, equipment) {\\n    var gangMemberNamesArray = ns.gang.getMemberNames();\\n\\n    var equipmentCost = ns.gang.getEquipmentCost(equipment);\\n\\n    for(var i=0; i < gangMemberNamesArray.length; i++) {\\n        var gangMember = gangMemberNamesArray[i];\\n        var availableMoney = wallet.getAvailableMoney(ns, wallet.spendLimits.gangEquipment)\\n\\n        if(availableMoney > equipmentCost) {\\n            ns.gang.purchaseEquipment(gangMember, equipment);\\n        }\\n    }\\n}\\n\\n// ===== TESTS ==================================\\nfunction executeTests(ns) {\\n\\tif (tests.testEnabled_exampleFunction)\\n\\t\\ttest_exampleFunction(ns);\\n}\\n\\nfunction test_exampleFunction(ns) {\\n\\tns.print(\\\"==== TEST: test_exampleFunction ====\\\");\\n\\n}\",\"filename\":\"/master/world/gang/godfather-ns2.js\",\"module\":\"\",\"ramUsage\":20.7,\"server\":\"60.8.2.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"// ===== IMPORTS ================================\\n\\n// ===== ARGS ===================================\\nfunction getScriptArgs(ns) {\\n    var scriptArgs = {\\n        firstArg : ns.args[0]\\n    };\\n    \\n    return scriptArgs;\\n}\\n\\n// ===== VARS ===================================\\nexport var spendLimits = {\\n    newServer : 0.70,\\n    hacknet : 0.20,\\n    gangEquipment : 0.10,\\n};\\n\\nvar sVars = {\\n\\n};\\n\\nvar tests = {\\n\\tenabled : false, // Master override for all tests\\n\\tdisableMain : false, // Disables all non-testing logic in main\\n\\ttestEnabled_exampleFunction : false,\\n};\\n\\n// ===== MAIN ===================================\\nexport async function main(ns) {\\n\\tvar sArgs = getScriptArgs(ns);\\n\\t\\n\\t// - Tests ----------------------------------\\n\\tif (tests.enabled)\\n\\t\\texecuteTests(ns);\\n\\t\\n\\t// - Early out ------------------------------\\n\\tif (tests.disableMain) {\\n\\t\\tns.tprint(\\\"WARNING: SCRIPT IS IN TEST ONLY MODE\\\");\\n\\t\\tns.exit();\\n\\t}\\n\\t\\n\\t// - Real Script Logic ----------------------\\n\\tns.print(\\\"Starting script...\\\");\\n\\tns.disableLog(\\\"ALL\\\");\\n}\\n\\n// ===== FUNCTIONS ==============================\\nexport function getMyMoney(ns) {\\n    return ns.getServerMoneyAvailable(\\\"home\\\");\\n}\\n\\nexport function getAvailableMoney(ns, spendLimit) {\\n    var myMoney = getMyMoney(ns);\\n    var availableMoney = myMoney * spendLimit;\\n\\n    return availableMoney;\\n}\\n\\nexport function getSpendLimits() {\\n    return spendLimits;\\n}\\n\\nexport async function async_waitForEnoughMoney(ns, spendLimitModifier, desiredMoney) {\\n    var availableMoney = getAvailableMoney(ns, spendLimitModifier);\\n\\n    while (availableMoney < desiredMoney) {\\n        debugDumpMoneyStats(ns, availableMoney, desiredMoney);\\n        await ns.sleep(10 * 1000);\\n        availableMoney = getAvailableMoney(ns, spendLimitModifier);\\n    }\\n}\\n\\nexport function debugDumpMoneyStats(ns, availableMoney, desiredMoney) {\\n    var percentageOfNeeded = (availableMoney/desiredMoney)*100;\\n\\n    ns.print(\\\"DEBUG: Not enough money! \\\" +\\n        \\\"Available: \\\" + ns.nFormat(availableMoney, \\\"0,0.00\\\") + \\\" / \\\" +\\n        \\\"Desired: \\\" + ns.nFormat(desiredMoney, \\\"0,0.00\\\") + \\\" / \\\" +\\n        ns.nFormat(percentageOfNeeded, \\\"0.0\\\") + \\\"%\\\");\\n}\\n\\n// ===== TESTS ==================================\\nfunction executeTests(ns) {\\n\\tif (tests.testEnabled_exampleFunction)\\n\\t\\ttest_exampleFunction(ns);\\n}\\n\\nfunction test_exampleFunction(ns) {\\n\\tns.print(\\\"==== TEST: test_exampleFunction ====\\\");\\n\\n}\",\"filename\":\"/master/character/wallet-ns2.js\",\"module\":\"\",\"ramUsage\":1.7,\"server\":\"60.8.2.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import * as wallet from \\\"/master/character/wallet-ns2.js\\\";\\n\\n\\n\\nexport async function main(ns) {\\n    var someNumber = 123456789.98765431;\\n    \\n    ns.tprint(ns.nFormat(wallet.spendLimits.newServer, \\\"0,0.00\\\"));\\n    ns.tprint(ns.nFormat(someNumber, \\\"0,0.00\\\"));\\n    \\n    ns.tprint(ns.heart.break());\\n    \\n    \\n    ns.tprint(\\\"Done!\\\");\\n}\",\"filename\":\"/temp/ns2_scratch.js\",\"module\":\"\",\"ramUsage\":1.7,\"server\":\"60.8.2.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"// ===== IMPORTS ================================\\nimport * as wallet from \\\"/master/character/wallet-ns2.js\\\";\\n\\n// ===== ARGS ===================================\\nfunction getScriptArgs(ns) {\\n    var scriptArgs = {\\n        hackTarget : ns.args[0],\\n        desiredStartingRam : ns.args[1],\\n    };\\n    \\n    return scriptArgs;\\n}\\n\\n// ===== VARS ===================================\\nvar sVars = {\\n    ramIncreaseFactor : 16,\\n    setupScriptName : \\\"/master/hacking/deployHackBots-ns2.js\\\",\\n};\\n\\nvar tests = {\\n\\tenabled : false, // Master override for all tests\\n\\tdisableMain : false, // Disables all non-testing logic in main\\n\\ttestEnabled_exampleFunction : false,\\n};\\n\\n// ===== MAIN ===================================\\nexport async function main(ns) {\\n\\tvar sArgs = getScriptArgs(ns);\\n\\t\\n\\t// - Tests ----------------------------------\\n\\tif (tests.enabled)\\n\\t\\texecuteTests(ns);\\n\\t\\n\\t// - Early out ------------------------------\\n\\tif (tests.disableMain) {\\n\\t\\tns.tprint(\\\"WARNING: SCRIPT IS IN TEST ONLY MODE\\\");\\n\\t\\tns.exit();\\n\\t}\\n\\t\\n\\t// - Real Script Logic ----------------------\\n\\tns.print(\\\"Starting script...\\\");\\n    ns.disableLog(\\\"ALL\\\");\\n\\n    var desiredRam = sArgs.desiredStartingRam;\\n    \\n    while(desiredRam <= ns.getPurchasedServerMaxRam()) {\\n        await fillEmptyServerSlots(ns, sArgs, desiredRam);\\n        await upgradeExisitngServers(ns, sArgs, desiredRam);\\n        desiredRam = incrementDesiredRam(desiredRam, sVars.ramIncreaseFactor);\\n\\n        await ns.sleep(100);\\n    }\\n}\\n\\n// ===== FUNCTIONS ==============================\\nasync function fillEmptyServerSlots(ns, sArgs, desiredRam) {\\n    while (ns.getPurchasedServers().length < ns.getPurchasedServerLimit()) {\\n        ns.print(\\\"DEBUG: Buying at \\\" + desiredRam + \\\"GB\\\");\\n\\n        // create a server name\\n        var desiredServerName = \\\"pserv-\\\" + desiredRam + \\\"GB\\\";\\n\\n        // Attempt to buy a server\\n        var desiredServerName = \\\"pserv-\\\" + desiredRam + \\\"GB\\\";\\n        var newHostname = await purchaseNewServer(ns, desiredServerName, desiredRam);\\n\\n        // Run setup script on the new server\\n        await ns.run(sVars.setupScriptName, 1, newHostname, sArgs.hackTarget);\\n\\n        await ns.sleep(100);\\n    }\\n}\\n\\nasync function upgradeExisitngServers(ns, sArgs, desiredRam) {\\n    ns.print(\\\"DEBUG: Upgrading to \\\" + desiredRam + \\\"GB\\\");\\n\\n    // call get purchased servers\\n    var purchasedServers = ns.getPurchasedServers();\\n\\n    for (var servIndex = 0; servIndex < purchasedServers.length; servIndex++) {\\n        var oldHostname = purchasedServers[servIndex];\\n        ns.print(\\\"DEBUG: Evaluating: \\\" + oldHostname);\\n\\n        var oldHostRam = ns.getServerRam(oldHostname)[0];\\n\\n        if (oldHostRam < desiredRam) {\\n            // Wait for enough money\\n            await waitForEnoughMoney(ns, desiredRam);\\n\\n            // delete the old server\\n            await deleteOldServer(ns, oldHostname);\\n\\n            // buy a server\\n            var desiredServerName = \\\"pserv-\\\" + desiredRam + \\\"GB\\\";\\n            var newHostname = await purchaseNewServer(ns, desiredServerName, desiredRam);\\n\\n            ns.print(\\\"DEBUG: New server named: \\\" + newHostname);\\n\\n            // Run setup script on the new server\\n            await ns.run(sVars.setupScriptName, 1, newHostname, sArgs.hackTarget);\\n        }\\n    }\\n}\\n\\nasync function deleteOldServer(ns, server) {\\n    while(ns.serverExists(server)) {\\n        // kill all scripts on the old server\\n        // ns.killall returns true if any scripts were killed, false if not. We're ready to move on if we haven't killed anything\\n        while (ns.killall(server)) {\\n            ns.print(\\\"Sleeping after trying to killall on \\\" + server);\\n            await ns.sleep(1000);\\n        }\\n    \\n        // delete the old server\\n        ns.print(\\\"DEBUG: Deleting: \\\" + server);\\n        ns.deleteServer(server);\\n\\n        await ns.sleep(100);\\n    }\\n}\\n\\nasync function purchaseNewServer(ns, desiredServerName, desiredRam) {\\n    var newHostname = \\\"\\\";\\n\\n    while (newHostname === \\\"\\\") {\\n        // Wait for enough money\\n        await waitForEnoughMoney(ns, desiredRam);\\n\\n        newHostname = ns.purchaseServer(desiredServerName, desiredRam);\\n        await ns.sleep(1000);\\n    }\\n\\n    return newHostname;\\n}\\n\\nasync function waitForEnoughMoney(ns, desiredRam) {\\n    while (wallet.getAvailableMoney(ns, wallet.spendLimits.newServer) < ns.getPurchasedServerCost(desiredRam)) {\\n        debugDumpMoneyStats(ns, desiredRam);\\n        await ns.sleep(60 * 1000);\\n    }\\n}\\n\\nfunction incrementDesiredRam(currentDesiredRam, ramMultiplier) {\\n    var newDesiredRam = currentDesiredRam * ramMultiplier;\\n\\n    return newDesiredRam;\\n}\\n\\nfunction debugDumpMoneyStats(ns, desiredRam) {\\n    var availableMoney = wallet.getAvailableMoney(ns, wallet.spendLimits.newServer);\\n    var neededMoney = ns.getPurchasedServerCost(desiredRam);\\n    var percentageOfNeeded = (availableMoney/neededMoney)*100;\\n\\n    ns.print(\\\"DEBUG: Not enough money! Available / Needed / %: \\\" +\\n        ns.nFormat(availableMoney, \\\"0,0.00\\\") + \\\" / \\\" +\\n        ns.nFormat(neededMoney, \\\"0,0.00\\\") + \\\" / \\\" +\\n        ns.nFormat(percentageOfNeeded, \\\"0.0\\\") + \\\"%\\\");\\n}\\n\\n// ===== TESTS ==================================\\nfunction executeTests(ns) {\\n\\tif (tests.testEnabled_exampleFunction)\\n\\t\\ttest_exampleFunction(ns);\\n}\\n\\nfunction test_exampleFunction(ns) {\\n\\tns.print(\\\"==== TEST: test_exampleFunction ====\\\");\\n\\n}\",\"filename\":\"/master/buy_server/buy_server-ns2.js\",\"module\":{},\"ramUsage\":10.5,\"server\":\"60.8.2.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"// ===== IMPORTS ================================\\nimport * as bsi from \\\"/master/functions/buildServerInfoArray-ns2.js\\\";\\n\\n// ===== ARGS ===================================\\nfunction getScriptArgs(ns) {\\n    var scriptArgs = {\\n        firstArg : ns.args[0]\\n    };\\n    \\n    return scriptArgs;\\n}\\n\\n// ===== VARS ===================================\\nvar sVars = {\\n\\n};\\n\\nvar e_contractTypes = {\\n\\tfindLargestPrimeFactor : \\\"Find Largest Prime Factor\\\",\\n\\tsubarrayWithMaximumSum : \\\"Subarray with Maximum Sum\\\",\\n\\ttotalWaysToSum : \\\"Total Ways to Sum\\\",\\n\\tspiralizeMatrix : \\\"Spiralize Matrix\\\",\\n\\tarrayJumpingGame : \\\"Array Jumping Game\\\",\\n\\tmergeOverlappingIntervals : \\\"Merge Overlapping Intervals\\\",\\n\\tgenerateIPAddresses : \\\"Generate IP Addresses\\\",\\n\\talgorithmicStockTraderI : \\\"Algorithmic Stock Trader I\\\",\\n\\talgorithmicStockTraderII : \\\"Algorithmic Stock Trader II\\\",\\n\\talgorithmicStockTraderIII : \\\"Algorithmic Stock Trader III\\\",\\n\\talgorithmicStockTraderIV : \\\"Algorithmic Stock Trader IV\\\",\\n\\tminimumPathSumInATriangle : \\\"Minimum Path Sum in a Triangle\\\",\\n\\tuniquePathsInAGridI : \\\"Unique Paths in a Grid I\\\",\\n\\tuniquePathsInAGridII : \\\"Unique Paths in a Grid II\\\",\\n\\tsanitizeParenthesesInExpression : \\\"Sanitize Parentheses in Expression\\\",\\n\\tfindAllValidMathExpressions : \\\"Find All Valid Math Expressions\\\",\\n};\\n\\nvar e_allowedToSolve = {\\n\\tfindLargestPrimeFactor : true,\\n\\tsubarrayWithMaximumSum : true,\\n\\ttotalWaysToSum : true,\\n\\tspiralizeMatrix : true,\\n\\tarrayJumpingGame : true,\\n\\tmergeOverlappingIntervals : true,\\n\\tgenerateIPAddresses : true,\\n\\talgorithmicStockTraderI : true,\\n\\talgorithmicStockTraderII : true,\\n\\talgorithmicStockTraderIII : true,\\n\\talgorithmicStockTraderIV : true,\\n\\tminimumPathSumInATriangle : true,\\n\\tuniquePathsInAGridI : true,\\n\\tuniquePathsInAGridII : true,\\n\\tsanitizeParenthesesInExpression : true,\\n\\tfindAllValidMathExpressions : true,\\n};\\n\\nvar tests = {\\n\\tenabled : false, // Master override for all tests\\n\\tdisableMain : false, // Disables all non-testing logic in main\\n\\ttestEnabled_exampleFunction : false,\\n};\\n\\n// ===== MAIN ===================================\\nexport async function main(ns) {\\n\\tvar sArgs = getScriptArgs(ns);\\n\\t\\n\\t// - Tests ----------------------------------\\n\\tif (tests.enabled)\\n\\t\\texecuteTests(ns);\\n\\t\\n\\t// - Early out ------------------------------\\n\\tif (tests.disableMain) {\\n\\t\\tns.tprint(\\\"WARNING: SCRIPT IS IN TEST ONLY MODE\\\");\\n\\t\\tns.exit();\\n\\t}\\n\\t\\n\\t// - Real Script Logic ----------------------\\n\\tns.print(\\\"Starting script...\\\");\\n\\tns.disableLog(\\\"ALL\\\");\\n\\n\\twhile(true) {\\n\\t\\tawait async_findContractsAndLaunchSolver(ns);\\n\\n\\t\\tawait ns.sleep(60*1000);\\n\\t}\\n}\\n\\n// ===== FUNCTIONS ==============================\\nasync function async_findContractsAndLaunchSolver(ns) {\\n\\t// Build a server list\\n\\tvar serverListArray = await bsi.buildServerInfoArray(ns);\\n\\t\\n\\t// Iterate thru the list of servers\\n\\tfor(var i=0; i<serverListArray.length; i++) {\\n\\t\\tvar server = serverListArray[i].name;\\n\\n\\t\\t// Do an ls() on the server\\n\\t\\tvar lsResults = ns.ls(server, \\\".cct\\\");\\n\\n\\t\\t// If there are results matching the contract extension, spit info out to the terminal window\\n\\t\\tif(lsResults.length > 0) {\\n\\t\\t\\tfor(var j=0; j<lsResults.length; j++) {\\n\\t\\t\\t\\tvar contractName = lsResults[j];\\n\\t\\t\\t\\tlaunchRelevantSolver(ns, contractName, server);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n\\nfunction launchRelevantSolver (ns, contractName, server) {\\n\\tvar contractType = ns.codingcontract.getContractType(contractName, server);\\n\\n\\t// buy the right thing\\n\\tswitch(contractType){\\n\\t\\tcase e_contractTypes.algorithmicStockTraderI:\\n\\t\\t\\tsolver_algorithmicStockTraderI(ns, contractName, server);\\n\\t\\t\\tbreak;\\n\\t\\tdefault:\\n\\t\\t\\tns.tprint(\\\"No solver for type [\\\" + contractType + \\\"] on server [\\\" + server + \\\"] for contract [\\\" + contractName + \\\"]\\\");\\n\\t}\\n}\\n\\nfunction solver_findLargestPrimeFactor(ns, contractName, server) {\\n\\tns.tprint(\\\"No solver for: \\\" + server + \\\" / \\\" + contractName);\\n}\\n\\nfunction solver_subarrayWithMaximumSum(ns, contractName, server) {\\n\\tns.tprint(\\\"No solver for: \\\" + server + \\\" / \\\" + contractName);\\n}\\n\\nfunction solver_totalWaysToSum(ns, contractName, server) {\\n\\tns.tprint(\\\"No solver for: \\\" + server + \\\" / \\\" + contractName);\\n}\\n\\nfunction solver_spiralizeMatrix(ns, contractName, server) {\\n\\tns.tprint(\\\"No solver for: \\\" + server + \\\" / \\\" + contractName);\\n}\\n\\nfunction solver_arrayJumpingGame(ns, contractName, server) {\\n\\tns.tprint(\\\"No solver for: \\\" + server + \\\" / \\\" + contractName);\\n}\\n\\nfunction solver_mergeOverlappingIntervals(ns, contractName, server) {\\n\\tns.tprint(\\\"No solver for: \\\" + server + \\\" / \\\" + contractName);\\n}\\n\\nfunction solver_generateIPAddresses(ns, contractName, server) {\\n\\tns.tprint(\\\"No solver for: \\\" + server + \\\" / \\\" + contractName);\\n}\\n\\nfunction solver_algorithmicStockTraderI(ns, contractName, server) {\\n\\t/* ===== Problem Definition ====================================================================================================== **\\n\\tYou are given the following array of stock prices (which are numbers) where the i-th element represents the stock price on day i:\\n\\t\\tEx. 169,81,124,99,97,182,81,176,32,172,135\\n\\tDetermine the maximum possible profit you can earn using at most one transaction (i.e. you can only buy and sell the stock once).\\n\\tIf no profit can be made then the answer should be 0. Note that you have to buy the stock before you can sell it\\n\\t** =============================================================================================================================== */\\n\\tif (e_allowedToSolve.algorithmicStockTraderI) {\\n\\t\\tvar contractType = ns.codingcontract.getContractType(contractName, server);\\n\\t\\tvar contractData = ns.codingcontract.getData(contractName, server);\\n\\t\\n\\t\\tvar stockPriceList = contractData;\\n\\t\\tvar maxBuyIndex = stockPriceList.length - 1;\\n\\t\\tvar maxSellIndex = stockPriceList.length;\\n\\t\\n\\t\\tvar bestProfit = 0;\\n\\t\\n\\t\\tfor(var buyPriceIndex = 0; buyPriceIndex < maxBuyIndex; buyPriceIndex++) {\\n\\t\\t\\tfor(var sellPriceIndex = buyPriceIndex + 1; sellPriceIndex < maxSellIndex; sellPriceIndex++) {\\n\\t\\t\\t\\tvar buyPrice = stockPriceList[buyPriceIndex];\\n\\t\\t\\t\\tvar sellPrice = stockPriceList[sellPriceIndex];\\n\\t\\t\\t\\tvar testProfit = sellPrice - buyPrice;\\n\\t\\n\\t\\t\\t\\tif (testProfit > bestProfit) {\\n\\t\\t\\t\\t\\tbestProfit = testProfit;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\n\\t\\tvar result = ns.codingcontract.attempt(bestProfit, contractName, server, {returnReward : true});\\n\\n\\t\\tif(result === false || result === \\\"\\\") {\\n\\t\\t\\te_allowedToSolve.algorithmicStockTraderI = false;\\n\\t\\t\\tns.tprint(\\\"CONTRACT FAILED: Type: [\\\" + contractType + \\\"], FileName: [\\\" + contractName + \\\"], Server: [\\\" + server + \\\"]\\\");\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tns.tprint(\\\"Completed Completed: Type: [\\\" + contractType + \\\"], fileName: [\\\" + contractName + \\\"], Server [\\\" + server + \\\"]\\\");\\n\\t\\t\\tns.tprint(result);\\n\\t\\t}\\n\\t}\\n\\telse {\\n\\t\\tns.tprint(\\\"Solver disabled for type: [\\\" + contractType + \\\"]\\\");\\n\\t\\tns.tprint(\\\"There is a contract of this type named [\\\" + contractName + \\\"] on server [\\\" + server + \\\"]\\\");\\n\\t}\\n}\\n\\nfunction solver_algorithmicStockTraderII(ns, contractName, server) {\\n\\tns.tprint(\\\"No solver for: \\\" + server + \\\" / \\\" + contractName);\\n}\\n\\nfunction solver_algorithmicStockTraderIII(ns, contractName, server) {\\n\\tns.tprint(\\\"No solver for: \\\" + server + \\\" / \\\" + contractName);\\n}\\n\\nfunction solver_algorithmicStockTraderIV(ns, contractName, server) {\\n\\tns.tprint(\\\"No solver for: \\\" + server + \\\" / \\\" + contractName);\\n}\\n\\nfunction solver_minimumPathSumInATriangle(ns, contractName, server) {\\n\\tns.tprint(\\\"No solver for: \\\" + server + \\\" / \\\" + contractName);\\n}\\n\\nfunction solver_uniquePathsInAGridI(ns, contractName, server) {\\n\\tns.tprint(\\\"No solver for: \\\" + server + \\\" / \\\" + contractName);\\n}\\n\\nfunction solver_uniquePathsInAGridII(ns, contractName, server) {\\n\\tns.tprint(\\\"No solver for: \\\" + server + \\\" / \\\" + contractName);\\n}\\n\\nfunction solver_sanitizeParenthesesInExpression(ns, contractName, server) {\\n\\tns.tprint(\\\"No solver for: \\\" + server + \\\" / \\\" + contractName);\\n}\\n\\nfunction solver_findAllValidMathExpressions(ns, contractName, server) {\\n\\tns.tprint(\\\"No solver for: \\\" + server + \\\" / \\\" + contractName);\\n}\\n\\n// ===== TESTS ==================================\\nfunction executeTests(ns) {\\n\\tif (tests.testEnabled_exampleFunction)\\n\\t\\ttest_exampleFunction(ns);\\n}\\n\\nfunction test_exampleFunction(ns) {\\n\\tns.print(\\\"==== TEST: test_exampleFunction ====\\\");\\n\\n}\",\"filename\":\"/master/world/contracts/foreman-ns2.js\",\"module\":\"\",\"ramUsage\":22.95,\"server\":\"60.8.2.2\"}}],\"serversOnNetwork\":[\"11.5.3.6\",\"53.0.8.1\",\"17.5.7.5\",\"77.6.0.2\",\"95.8.6.0\",\"77.0.1.5\",\"67.2.9.2\",\"14.0.1.5\",\"9.2.0.7\",\"7.3.3.4\",\"15.8.0.9\",\"67.8.3.7\",\"90.3.4.2\",\"68.7.9.4\",\"47.3.0.9\",\"48.7.6.3\",\"71.8.6.7\",\"40.5.1.2\",\"80.8.9.4\",\"7.0.5.5\",\"36.7.0.6\",\"94.6.3.4\",\"64.2.6.7\",\"55.1.3.2\",\"16.0.1.6\",\"26.5.9.3\",\"42.8.8.6\",\"60.8.7.2\",\"68.4.0.6\",\"36.5.9.2\",\"40.5.3.9\",\"61.9.2.5\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"todo.txt\",\"text\":\"// TODO Create a file copying script, assuming the libraries allow it\\n// TODO Create a script for buying up hacknet nodes\"}},{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"/configs/hack_target.txt\",\"text\":\"harakiri-sushi\"}}],\"baseDifficulty\":1,\"hackDifficulty\":1,\"manuallyHacked\":false,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":1,\"purchasedByPlayer\":true,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"37.6.7.2\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"ecorp\",\"httpPortOpen\":false,\"ip\":\"37.6.7.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"ECorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"8.5.4.1\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"baseDifficulty\":99,\"hackDifficulty\":99,\"manuallyHacked\":false,\"minDifficulty\":33,\"moneyAvailable\":12934651249.2,\"moneyMax\":64673256246,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"purchasedByPlayer\":false,\"requiredHackingSkill\":1373,\"serverGrowth\":99}},\"43.4.5.4\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"megacorp\",\"httpPortOpen\":false,\"ip\":\"43.4.5.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"MegaCorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"67.8.0.4\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"baseDifficulty\":99,\"hackDifficulty\":99,\"manuallyHacked\":false,\"minDifficulty\":33,\"moneyAvailable\":9369141898,\"moneyMax\":46845709490,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"purchasedByPlayer\":false,\"requiredHackingSkill\":1261,\"serverGrowth\":99}},\"95.0.3.6\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"b-and-a\",\"httpPortOpen\":false,\"ip\":\"95.0.3.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Bachman & Associates\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"22.1.1.9\",\"72.2.4.5\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"baseDifficulty\":73,\"hackDifficulty\":73,\"manuallyHacked\":false,\"minDifficulty\":24,\"moneyAvailable\":5945006785.200001,\"moneyMax\":29725033926.000008,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"purchasedByPlayer\":false,\"requiredHackingSkill\":1123,\"serverGrowth\":78}},\"44.0.5.4\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"blade\",\"httpPortOpen\":true,\"ip\":\"44.0.5.4\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[\"beyond-man.lit\"],\"organizationName\":\"Blade Industries\",\"programs\":[],\"ramUsed\":254.5,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,0,66]},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5377.053232890977,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.342,\"onlineExpGained\":2151.1699021899844,\"onlineMoneyMade\":0,\"onlineRunningTime\":2586.0099999998624,\"ramUsage\":1.75,\"server\":\"44.0.5.4\",\"threads\":22}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,324,0]},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":26396.44424331304,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.345,\"onlineExpGained\":10560.288610750833,\"onlineMoneyMade\":0,\"onlineRunningTime\":2586.0099999998624,\"ramUsage\":1.75,\"server\":\"44.0.5.4\",\"threads\":108}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\",503419924.0000001],\"dataMap\":{\"46.1.5.7\":[3633855,75,0,0]},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":7943.3747560986185,\"offlineMoneyMade\":9083166.041076042,\"offlineRunningTime\":71988.348,\"onlineExpGained\":3177.8646282352042,\"onlineMoneyMade\":3633855,\"onlineRunningTime\":2586.0099999998624,\"ramUsage\":1.8,\"server\":\"44.0.5.4\",\"threads\":15}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"44.0.5.4\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"44.0.5.4\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"44.0.5.4\"}}],\"serversOnNetwork\":[\"54.1.6.8\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"baseDifficulty\":93,\"hackDifficulty\":93,\"manuallyHacked\":false,\"minDifficulty\":31,\"moneyAvailable\":7066436052,\"moneyMax\":35332180260,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"purchasedByPlayer\":false,\"requiredHackingSkill\":1117,\"serverGrowth\":82}},\"66.4.7.9\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"nwo\",\"httpPortOpen\":false,\"ip\":\"66.4.7.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"the-hidden-world.lit\"],\"organizationName\":\"New World Order\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"54.1.6.8\",\"68.0.4.0\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"baseDifficulty\":99,\"hackDifficulty\":99,\"manuallyHacked\":false,\"minDifficulty\":33,\"moneyAvailable\":5633055710.400001,\"moneyMax\":28165278552,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"purchasedByPlayer\":false,\"requiredHackingSkill\":1020,\"serverGrowth\":87}},\"8.5.4.1\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"clarkinc\",\"httpPortOpen\":false,\"ip\":\"8.5.4.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"beyond-man.lit\",\"cost-of-immortality.lit\"],\"organizationName\":\"Clarke Incorporated\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"54.1.6.8\",\"37.6.7.2\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"baseDifficulty\":54,\"hackDifficulty\":54,\"manuallyHacked\":false,\"minDifficulty\":18,\"moneyAvailable\":4609493721,\"moneyMax\":23047468605,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"purchasedByPlayer\":false,\"requiredHackingSkill\":1160,\"serverGrowth\":74}},\"54.1.6.8\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"omnitek\",\"httpPortOpen\":true,\"ip\":\"54.1.6.8\",\"isConnectedTo\":false,\"maxRam\":512,\"messages\":[\"coded-intelligence.lit\",\"history-of-synthoids.lit\"],\"organizationName\":\"OmniTek Incorporated\",\"programs\":[],\"ramUsed\":510.7,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,0,88]},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":7169.405107250896,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.35,\"onlineExpGained\":2868.2265362533126,\"onlineMoneyMade\":0,\"onlineRunningTime\":2589.0099999998597,\"ramUsage\":1.75,\"server\":\"54.1.6.8\",\"threads\":44}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,654,0]},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":53281.71596903104,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.351,\"onlineExpGained\":21316.13812170076,\"onlineMoneyMade\":0,\"onlineRunningTime\":2589.0099999998597,\"ramUsage\":1.75,\"server\":\"54.1.6.8\",\"threads\":218}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\",503419924.0000001],\"dataMap\":{\"46.1.5.7\":[6033479,145,0,0]},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":14766.531020931128,\"offlineMoneyMade\":15081255.40747559,\"offlineRunningTime\":71988.353,\"onlineExpGained\":5907.568860180829,\"onlineMoneyMade\":6033479,\"onlineRunningTime\":2589.0099999998597,\"ramUsage\":1.8,\"server\":\"54.1.6.8\",\"threads\":29}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"54.1.6.8\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"54.1.6.8\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"54.1.6.8\"}}],\"serversOnNetwork\":[\"75.1.1.2\",\"44.0.5.4\",\"66.4.7.9\",\"8.5.4.1\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"baseDifficulty\":93,\"hackDifficulty\":93,\"manuallyHacked\":false,\"minDifficulty\":31,\"moneyAvailable\":3167641599,\"moneyMax\":15838207995,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"purchasedByPlayer\":false,\"requiredHackingSkill\":1100,\"serverGrowth\":95}},\"11.6.5.7\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"4sigma\",\"httpPortOpen\":false,\"ip\":\"11.6.5.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"FourSigma\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"75.1.1.2\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"baseDifficulty\":65,\"hackDifficulty\":65,\"manuallyHacked\":false,\"minDifficulty\":22,\"moneyAvailable\":4100431823.6000004,\"moneyMax\":20502159118.000004,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"purchasedByPlayer\":false,\"requiredHackingSkill\":956,\"serverGrowth\":75}},\"42.4.9.0\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"kuai-gong\",\"httpPortOpen\":false,\"ip\":\"42.4.9.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"KuaiGong International\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"6.2.7.5\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"baseDifficulty\":98,\"hackDifficulty\":98,\"manuallyHacked\":false,\"minDifficulty\":33,\"moneyAvailable\":4882175969.400001,\"moneyMax\":24410879847.000004,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"purchasedByPlayer\":false,\"requiredHackingSkill\":1164,\"serverGrowth\":98}},\"67.5.3.7\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"fulcrumtech\",\"httpPortOpen\":true,\"ip\":\"67.5.3.7\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[\"simulated-reality.lit\"],\"organizationName\":\"Fulcrum Technologies\",\"programs\":[],\"ramUsed\":1023.1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,0,264]},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":21508.216815620675,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.35500000001,\"onlineExpGained\":8604.679608759938,\"onlineMoneyMade\":0,\"onlineRunningTime\":2604.4099999998457,\"ramUsage\":1.75,\"server\":\"67.5.3.7\",\"threads\":88}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,1314,0]},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":107052.26691696816,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.359,\"onlineExpGained\":42827.837143600605,\"onlineMoneyMade\":0,\"onlineRunningTime\":2604.4099999998457,\"ramUsage\":1.75,\"server\":\"67.5.3.7\",\"threads\":438}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\",503419924.0000001],\"dataMap\":{\"46.1.5.7\":[5307441,114,0,0]},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":18575.279965167334,\"offlineMoneyMade\":13266455.934973333,\"offlineRunningTime\":71988.362,\"onlineExpGained\":7431.314207565401,\"onlineMoneyMade\":5307441,\"onlineRunningTime\":2604.4099999998457,\"ramUsage\":1.8,\"server\":\"67.5.3.7\",\"threads\":57}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"67.5.3.7\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"67.5.3.7\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"67.5.3.7\"}}],\"serversOnNetwork\":[\"98.2.4.7\",\"22.1.1.9\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"baseDifficulty\":89,\"hackDifficulty\":89,\"manuallyHacked\":false,\"minDifficulty\":30,\"moneyAvailable\":321603697.40000004,\"moneyMax\":1608018487.0000002,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"purchasedByPlayer\":false,\"requiredHackingSkill\":1216,\"serverGrowth\":85}},\"72.2.4.5\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"fulcrumassets\",\"httpPortOpen\":false,\"ip\":\"72.2.4.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Fulcrum Technologies Assets\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"95.0.3.6\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"baseDifficulty\":99,\"hackDifficulty\":99,\"manuallyHacked\":false,\"minDifficulty\":33,\"moneyAvailable\":200000,\"moneyMax\":1000000,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"purchasedByPlayer\":false,\"requiredHackingSkill\":1159,\"serverGrowth\":1}},\"75.1.1.2\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"stormtech\",\"httpPortOpen\":false,\"ip\":\"75.1.1.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Storm Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"98.2.4.7\",\"54.1.6.8\",\"11.6.5.7\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"baseDifficulty\":78,\"hackDifficulty\":78,\"manuallyHacked\":false,\"minDifficulty\":26,\"moneyAvailable\":208265059.8,\"moneyMax\":1041325299,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"purchasedByPlayer\":false,\"requiredHackingSkill\":985,\"serverGrowth\":68}},\"26.1.9.9\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"defcomm\",\"httpPortOpen\":false,\"ip\":\"26.1.9.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"DefComm\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"1.3.8.1\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"baseDifficulty\":93,\"hackDifficulty\":93,\"manuallyHacked\":false,\"minDifficulty\":31,\"moneyAvailable\":169097826.4,\"moneyMax\":845489132,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"purchasedByPlayer\":false,\"requiredHackingSkill\":947,\"serverGrowth\":61}},\"29.7.8.8\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"infocomm\",\"httpPortOpen\":false,\"ip\":\"29.7.8.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"InfoComm\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"10.6.5.5\",\"34.3.7.5\",\"98.2.4.7\",\"15.2.9.4\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"baseDifficulty\":72,\"hackDifficulty\":72,\"manuallyHacked\":false,\"minDifficulty\":24,\"moneyAvailable\":138768572.20000002,\"moneyMax\":693842861.0000001,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"purchasedByPlayer\":false,\"requiredHackingSkill\":905,\"serverGrowth\":65}},\"6.2.7.5\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"helios\",\"httpPortOpen\":true,\"ip\":\"6.2.7.5\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"beyond-man.lit\"],\"organizationName\":\"Helios Labs\",\"programs\":[],\"ramUsed\":126.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,0,22]},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1792.3516253819212,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.364,\"onlineExpGained\":717.0566340633281,\"onlineMoneyMade\":0,\"onlineRunningTime\":2576.809999999871,\"ramUsage\":1.75,\"server\":\"6.2.7.5\",\"threads\":11}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,159,0]},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":12953.814019805704,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.364,\"onlineExpGained\":5182.363855275872,\"onlineMoneyMade\":0,\"onlineRunningTime\":2576.809999999871,\"ramUsage\":1.75,\"server\":\"6.2.7.5\",\"threads\":53}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\",503419924.0000001],\"dataMap\":{\"46.1.5.7\":[2578224,56,0,0]},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5214.113891722825,\"offlineMoneyMade\":6444517.520191667,\"offlineRunningTime\":71988.365,\"onlineExpGained\":2085.9829354569547,\"onlineMoneyMade\":2578224,\"onlineRunningTime\":2576.809999999871,\"ramUsage\":1.8,\"server\":\"6.2.7.5\",\"threads\":8}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"6.2.7.5\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"6.2.7.5\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"6.2.7.5\"}}],\"serversOnNetwork\":[\"98.2.4.7\",\"42.4.9.0\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"baseDifficulty\":93,\"hackDifficulty\":93,\"manuallyHacked\":false,\"minDifficulty\":31,\"moneyAvailable\":110520726.60000001,\"moneyMax\":552603633,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"purchasedByPlayer\":false,\"requiredHackingSkill\":851,\"serverGrowth\":72}},\"78.5.8.7\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-176049.cct\",\"type\":\"Array Jumping Game\",\"data\":[3,3,2,9,2,10,1,4,10,4,9,10,0,4,10,0,5,9,0,9,0,5,0],\"reward\":{\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-317753-Netburners.cct\",\"type\":\"Unique Paths in a Grid I\",\"data\":[6,5],\"reward\":{\"type\":0,\"name\":\"Netburners\"}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"vitalife\",\"httpPortOpen\":true,\"ip\":\"78.5.8.7\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"A-Green-Tomorrow.lit\"],\"organizationName\":\"VitaLife\",\"programs\":[],\"ramUsed\":126.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,0,33]},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2688.527550112981,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.367,\"onlineExpGained\":1075.5849510949922,\"onlineMoneyMade\":0,\"onlineRunningTime\":2573.8099999998735,\"ramUsage\":1.75,\"server\":\"78.5.8.7\",\"threads\":11}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,159,0]},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":12953.814739578462,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.368,\"onlineExpGained\":5182.363855275872,\"onlineMoneyMade\":0,\"onlineRunningTime\":2573.8099999998735,\"ramUsage\":1.75,\"server\":\"78.5.8.7\",\"threads\":53}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\",503419924.0000001],\"dataMap\":{\"46.1.5.7\":[2656096,56,0,0]},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5214.114181442677,\"offlineMoneyMade\":6639166.402307778,\"offlineRunningTime\":71988.369,\"onlineExpGained\":2085.982935456955,\"onlineMoneyMade\":2656096,\"onlineRunningTime\":2573.8099999998735,\"ramUsage\":1.8,\"server\":\"78.5.8.7\",\"threads\":8}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"78.5.8.7\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"78.5.8.7\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"78.5.8.7\"}}],\"serversOnNetwork\":[\"98.2.4.7\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"baseDifficulty\":89,\"hackDifficulty\":89,\"manuallyHacked\":false,\"minDifficulty\":30,\"moneyAvailable\":152749042.20000002,\"moneyMax\":763745211.0000001,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"purchasedByPlayer\":false,\"requiredHackingSkill\":801,\"serverGrowth\":68}},\"15.2.9.6\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-52868.cct\",\"type\":\"Array Jumping Game\",\"data\":[6,4,10,6,4,1,8,9,1,4,8,5,5,5,6,3,5,0,8,10,9],\"reward\":{\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"icarus\",\"httpPortOpen\":false,\"ip\":\"15.2.9.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Icarus Microsystems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"1.3.8.1\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"baseDifficulty\":94,\"hackDifficulty\":94,\"manuallyHacked\":false,\"minDifficulty\":31,\"moneyAvailable\":188735808.4,\"moneyMax\":943679042,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"purchasedByPlayer\":false,\"requiredHackingSkill\":912,\"serverGrowth\":85}},\"10.6.5.5\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"univ-energy\",\"httpPortOpen\":true,\"ip\":\"10.6.5.5\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[],\"organizationName\":\"Universal Energy\",\"programs\":[],\"ramUsed\":126.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,0,33]},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2688.52766215308,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.37,\"onlineExpGained\":1075.5849510949922,\"onlineMoneyMade\":0,\"onlineRunningTime\":2613.6099999998373,\"ramUsage\":1.75,\"server\":\"10.6.5.5\",\"threads\":11}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,159,0]},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":12953.81527940803,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.37100000001,\"onlineExpGained\":5182.363855275872,\"onlineMoneyMade\":0,\"onlineRunningTime\":2613.6099999998373,\"ramUsage\":1.75,\"server\":\"10.6.5.5\",\"threads\":53}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\",503419924.0000001],\"dataMap\":{\"46.1.5.7\":[1308720,24,0,0]},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3095.8805102580422,\"offlineMoneyMade\":3271271.240766667,\"offlineRunningTime\":71988.374,\"onlineExpGained\":1238.552367927567,\"onlineMoneyMade\":1308720,\"onlineRunningTime\":2613.6099999998373,\"ramUsage\":1.8,\"server\":\"10.6.5.5\",\"threads\":8}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"10.6.5.5\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"10.6.5.5\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"10.6.5.5\"}}],\"serversOnNetwork\":[\"93.9.1.9\",\"29.7.8.8\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"baseDifficulty\":85,\"hackDifficulty\":85,\"manuallyHacked\":false,\"minDifficulty\":28,\"moneyAvailable\":239476803.20000002,\"moneyMax\":1197384016,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"purchasedByPlayer\":false,\"requiredHackingSkill\":813,\"serverGrowth\":86}},\"34.3.7.5\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"titan-labs\",\"httpPortOpen\":true,\"ip\":\"34.3.7.5\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"coded-intelligence.lit\"],\"organizationName\":\"Titan Laboratories\",\"programs\":[],\"ramUsed\":126.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,0,33]},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2688.5285211271726,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.39300000001,\"onlineExpGained\":1075.5849510949922,\"onlineMoneyMade\":0,\"onlineRunningTime\":2610.4099999998402,\"ramUsage\":1.75,\"server\":\"34.3.7.5\",\"threads\":11}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,159,0]},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":12953.819238158196,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.39300000001,\"onlineExpGained\":5182.363855275872,\"onlineMoneyMade\":0,\"onlineRunningTime\":2610.4099999998402,\"ramUsage\":1.75,\"server\":\"34.3.7.5\",\"threads\":53}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\",503419924.0000001],\"dataMap\":{\"46.1.5.7\":[1240656,24,0,0]},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3095.8813703638534,\"offlineMoneyMade\":3101139.6020799996,\"offlineRunningTime\":71988.394,\"onlineExpGained\":1238.552367927567,\"onlineMoneyMade\":1240656,\"onlineRunningTime\":2610.4099999998402,\"ramUsage\":1.8,\"server\":\"34.3.7.5\",\"threads\":8}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"34.3.7.5\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"34.3.7.5\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"34.3.7.5\"}}],\"serversOnNetwork\":[\"29.7.8.8\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"baseDifficulty\":74,\"hackDifficulty\":74,\"manuallyHacked\":false,\"minDifficulty\":25,\"moneyAvailable\":150801205.4,\"moneyMax\":754006027,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"purchasedByPlayer\":false,\"requiredHackingSkill\":859,\"serverGrowth\":61}},\"98.2.4.7\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"microdyne\",\"httpPortOpen\":true,\"ip\":\"98.2.4.7\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"synthetic-muscles.lit\"],\"organizationName\":\"Microdyne Technologies\",\"programs\":[],\"ramUsed\":15.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,0,6]},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":488.8233878485948,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.39600000001,\"onlineExpGained\":195.5609001990895,\"onlineMoneyMade\":0,\"onlineRunningTime\":2607.409999999843,\"ramUsage\":1.75,\"server\":\"98.2.4.7\",\"threads\":2}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,18,0]},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1466.4701635457845,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.39600000001,\"onlineExpGained\":586.6827005972685,\"onlineMoneyMade\":0,\"onlineRunningTime\":2607.409999999843,\"ramUsage\":1.75,\"server\":\"98.2.4.7\",\"threads\":6}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\",503419924.0000001],\"dataMap\":{\"46.1.5.7\":[261758,6,0,0]},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":570.2939604120545,\"offlineMoneyMade\":654289.4515397917,\"offlineRunningTime\":71988.397,\"onlineExpGained\":228.15438356560446,\"onlineMoneyMade\":261758,\"onlineRunningTime\":2607.409999999843,\"ramUsage\":1.8,\"server\":\"98.2.4.7\",\"threads\":1}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"98.2.4.7\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"98.2.4.7\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"98.2.4.7\"}}],\"serversOnNetwork\":[\"29.7.8.8\",\"67.5.3.7\",\"75.1.1.2\",\"6.2.7.5\",\"78.5.8.7\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"baseDifficulty\":65,\"hackDifficulty\":65,\"manuallyHacked\":false,\"minDifficulty\":22,\"moneyAvailable\":105198002.80000001,\"moneyMax\":525990014.0000001,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"purchasedByPlayer\":false,\"requiredHackingSkill\":866,\"serverGrowth\":70}},\"83.5.3.5\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"taiyang-digital\",\"httpPortOpen\":false,\"ip\":\"83.5.3.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"A-Green-Tomorrow.lit\",\"brighter-than-the-sun.lit\"],\"organizationName\":\"Taiyang Digital\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"20.9.9.4\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"baseDifficulty\":77,\"hackDifficulty\":77,\"manuallyHacked\":false,\"minDifficulty\":26,\"moneyAvailable\":169891337.4,\"moneyMax\":849456687,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"purchasedByPlayer\":false,\"requiredHackingSkill\":938,\"serverGrowth\":70}},\"52.6.3.4\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"galactic-cyber\",\"httpPortOpen\":false,\"ip\":\"52.6.3.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Galactic Cybersystems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"63.8.0.2\",\"93.9.1.9\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"baseDifficulty\":63,\"hackDifficulty\":63,\"manuallyHacked\":false,\"minDifficulty\":21,\"moneyAvailable\":158319762.20000002,\"moneyMax\":791598811.0000001,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"purchasedByPlayer\":false,\"requiredHackingSkill\":866,\"serverGrowth\":73}},\"19.2.9.4\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"aerocorp\",\"httpPortOpen\":false,\"ip\":\"19.2.9.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"man-and-machine.lit\"],\"organizationName\":\"AeroCorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"31.4.7.1\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"baseDifficulty\":86,\"hackDifficulty\":86,\"manuallyHacked\":false,\"minDifficulty\":29,\"moneyAvailable\":207223765.8,\"moneyMax\":1036118829,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"purchasedByPlayer\":false,\"requiredHackingSkill\":912,\"serverGrowth\":56}},\"1.3.8.1\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"omnia\",\"httpPortOpen\":true,\"ip\":\"1.3.8.1\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"history-of-synthoids.lit\"],\"organizationName\":\"Omnia Cybersystems\",\"programs\":[],\"ramUsed\":15.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,0,6]},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":488.82340142921294,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.398,\"onlineExpGained\":195.5609001990895,\"onlineMoneyMade\":0,\"onlineRunningTime\":2546.009999999899,\"ramUsage\":1.75,\"server\":\"1.3.8.1\",\"threads\":2}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,18,0]},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1466.4702042876388,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.398,\"onlineExpGained\":586.6827005972685,\"onlineMoneyMade\":0,\"onlineRunningTime\":2546.009999999899,\"ramUsage\":1.75,\"server\":\"1.3.8.1\",\"threads\":6}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\",503419924.0000001],\"dataMap\":{\"46.1.5.7\":[251489,5,0,0]},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":529.5586922378155,\"offlineMoneyMade\":628621.1097646181,\"offlineRunningTime\":71988.399,\"onlineExpGained\":211.85764188234697,\"onlineMoneyMade\":251489,\"onlineRunningTime\":2546.009999999899,\"ramUsage\":1.8,\"server\":\"1.3.8.1\",\"threads\":1}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"1.3.8.1\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"1.3.8.1\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"1.3.8.1\"}}],\"serversOnNetwork\":[\"83.7.9.1\",\"26.1.9.9\",\"15.2.9.6\",\"20.9.9.4\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"baseDifficulty\":95,\"hackDifficulty\":95,\"manuallyHacked\":false,\"minDifficulty\":32,\"moneyAvailable\":194231515.60000002,\"moneyMax\":971157578.0000002,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"purchasedByPlayer\":false,\"requiredHackingSkill\":904,\"serverGrowth\":66}},\"35.5.3.1\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"zb-def\",\"httpPortOpen\":false,\"ip\":\"35.5.3.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"synthetic-muscles.lit\"],\"organizationName\":\"ZB Defense Industries\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"20.9.9.4\",\"94.2.6.8\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"baseDifficulty\":57,\"hackDifficulty\":57,\"manuallyHacked\":false,\"minDifficulty\":19,\"moneyAvailable\":191211213.60000002,\"moneyMax\":956056068.0000002,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"purchasedByPlayer\":false,\"requiredHackingSkill\":788,\"serverGrowth\":65}},\"94.2.6.8\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"applied-energetics\",\"httpPortOpen\":false,\"ip\":\"94.2.6.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Applied Energetics\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"35.5.3.1\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"baseDifficulty\":65,\"hackDifficulty\":65,\"manuallyHacked\":false,\"minDifficulty\":22,\"moneyAvailable\":176860231.4,\"moneyMax\":884301157,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"purchasedByPlayer\":false,\"requiredHackingSkill\":844,\"serverGrowth\":70}},\"20.9.9.4\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"solaris\",\"httpPortOpen\":true,\"ip\":\"20.9.9.4\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"A-Green-Tomorrow.lit\",\"the-failed-frontier.lit\"],\"organizationName\":\"Solaris Space Systems\",\"programs\":[],\"ramUsed\":126.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,0,33]},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2688.52878255407,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.4,\"onlineExpGained\":1075.5849510949922,\"onlineMoneyMade\":0,\"onlineRunningTime\":2539.8099999999044,\"ramUsage\":1.75,\"server\":\"20.9.9.4\",\"threads\":11}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,159,0]},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":12953.820677703712,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.401,\"onlineExpGained\":5182.363855275872,\"onlineMoneyMade\":0,\"onlineRunningTime\":2539.8099999999044,\"ramUsage\":1.75,\"server\":\"20.9.9.4\",\"threads\":53}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\",503419924.0000001],\"dataMap\":{\"46.1.5.7\":[2460040,56,0,0]},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5051.175358601447,\"offlineMoneyMade\":6149108.381793056,\"offlineRunningTime\":71988.401,\"onlineExpGained\":2020.795968723925,\"onlineMoneyMade\":2460040,\"onlineRunningTime\":2539.8099999999044,\"ramUsage\":1.8,\"server\":\"20.9.9.4\",\"threads\":8}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"20.9.9.4\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"20.9.9.4\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"20.9.9.4\"}}],\"serversOnNetwork\":[\"1.3.8.1\",\"83.5.3.5\",\"35.5.3.1\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"baseDifficulty\":77,\"hackDifficulty\":77,\"manuallyHacked\":false,\"minDifficulty\":26,\"moneyAvailable\":140773821.6,\"moneyMax\":703869108,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"purchasedByPlayer\":false,\"requiredHackingSkill\":756,\"serverGrowth\":78}},\"93.9.1.9\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"deltaone\",\"httpPortOpen\":false,\"ip\":\"93.9.1.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Delta One\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"52.6.3.4\",\"10.6.5.5\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"baseDifficulty\":77,\"hackDifficulty\":77,\"manuallyHacked\":false,\"minDifficulty\":26,\"moneyAvailable\":274494887,\"moneyMax\":1372474435,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"purchasedByPlayer\":false,\"requiredHackingSkill\":855,\"serverGrowth\":54}},\"83.7.9.1\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"global-pharm\",\"httpPortOpen\":true,\"ip\":\"83.7.9.1\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[\"A-Green-Tomorrow.lit\"],\"organizationName\":\"Global Pharmaceuticals\",\"programs\":[],\"ramUsed\":7.05,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,0,3]},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":244.41171429522456,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.402,\"onlineExpGained\":97.78045009954475,\"onlineMoneyMade\":0,\"onlineRunningTime\":2549.009999999896,\"ramUsage\":1.75,\"server\":\"83.7.9.1\",\"threads\":1}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,6,0]},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":488.82343538075816,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.403,\"onlineExpGained\":195.5609001990895,\"onlineMoneyMade\":0,\"onlineRunningTime\":2549.009999999896,\"ramUsage\":1.75,\"server\":\"83.7.9.1\",\"threads\":2}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\",503419924.0000001],\"dataMap\":{\"46.1.5.7\":[335721,7,0,0]},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":651.7645986151683,\"offlineMoneyMade\":839167.2207567708,\"offlineRunningTime\":71988.405,\"onlineExpGained\":260.7478669321194,\"onlineMoneyMade\":335721,\"onlineRunningTime\":2549.009999999896,\"ramUsage\":1.8,\"server\":\"83.7.9.1\",\"threads\":1}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"83.7.9.1\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"83.7.9.1\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"83.7.9.1\"}}],\"serversOnNetwork\":[\"36.5.4.0\",\"1.3.8.1\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"baseDifficulty\":84,\"hackDifficulty\":84,\"manuallyHacked\":false,\"minDifficulty\":28,\"moneyAvailable\":335113421.20000005,\"moneyMax\":1675567106.0000002,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"purchasedByPlayer\":false,\"requiredHackingSkill\":807,\"serverGrowth\":83}},\"46.6.7.9\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"nova-med\",\"httpPortOpen\":false,\"ip\":\"46.6.7.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Nova Medical\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"17.2.6.0\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"baseDifficulty\":68,\"hackDifficulty\":68,\"manuallyHacked\":false,\"minDifficulty\":23,\"moneyAvailable\":247379316.4,\"moneyMax\":1236896582,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"purchasedByPlayer\":false,\"requiredHackingSkill\":790,\"serverGrowth\":80}},\"17.2.6.0\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"zeus-med\",\"httpPortOpen\":false,\"ip\":\"17.2.6.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Zeus Medical\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"70.6.3.6\",\"46.6.7.9\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"baseDifficulty\":72,\"hackDifficulty\":72,\"manuallyHacked\":false,\"minDifficulty\":24,\"moneyAvailable\":265844552,\"moneyMax\":1329222760,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"purchasedByPlayer\":false,\"requiredHackingSkill\":832,\"serverGrowth\":74}},\"70.6.3.6\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"unitalife\",\"httpPortOpen\":true,\"ip\":\"70.6.3.6\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"UnitaLife Group\",\"programs\":[],\"ramUsed\":15.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,0,6]},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":488.82344896137613,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.405,\"onlineExpGained\":195.5609001990895,\"onlineMoneyMade\":0,\"onlineRunningTime\":2533.80999999991,\"ramUsage\":1.75,\"server\":\"70.6.3.6\",\"threads\":2}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,18,0]},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1466.4703876259828,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.407,\"onlineExpGained\":586.6827005972685,\"onlineMoneyMade\":0,\"onlineRunningTime\":2533.80999999991,\"ramUsage\":1.75,\"server\":\"70.6.3.6\",\"threads\":6}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\",503419924.0000001],\"dataMap\":{\"46.1.5.7\":[212903,5,0,0]},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":509.19110681457744,\"offlineMoneyMade\":532171.7252253819,\"offlineRunningTime\":71988.407,\"onlineExpGained\":203.70927104071825,\"onlineMoneyMade\":212903,\"onlineRunningTime\":2533.80999999991,\"ramUsage\":1.8,\"server\":\"70.6.3.6\",\"threads\":1}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"70.6.3.6\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"70.6.3.6\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"70.6.3.6\"}}],\"serversOnNetwork\":[\"13.4.4.2\",\"17.2.6.0\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"baseDifficulty\":71,\"hackDifficulty\":71,\"manuallyHacked\":false,\"minDifficulty\":24,\"moneyAvailable\":216106961.60000002,\"moneyMax\":1080534808.0000002,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"purchasedByPlayer\":false,\"requiredHackingSkill\":810,\"serverGrowth\":71}},\"31.4.7.1\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lexo-corp\",\"httpPortOpen\":true,\"ip\":\"31.4.7.1\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"Lexo Corporation\",\"programs\":[],\"ramUsed\":63.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"ramUsage\":1.75,\"server\":\"31.4.7.1\",\"threads\":6}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"ramUsage\":1.75,\"server\":\"31.4.7.1\",\"threads\":26}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",659563499.0000001],\"dataMap\":{},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"ramUsage\":1.8,\"server\":\"31.4.7.1\",\"threads\":4}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"31.4.7.1\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"31.4.7.1\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"31.4.7.1\"}}],\"serversOnNetwork\":[\"50.4.2.0\",\"19.2.9.4\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"baseDifficulty\":80,\"hackDifficulty\":80,\"manuallyHacked\":false,\"minDifficulty\":27,\"moneyAvailable\":154356691.8,\"moneyMax\":771783459.0000001,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"purchasedByPlayer\":false,\"requiredHackingSkill\":711,\"serverGrowth\":64}},\"36.5.4.0\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"rho-construction\",\"httpPortOpen\":true,\"ip\":\"36.5.4.0\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Rho Construction\",\"programs\":[],\"ramUsed\":31.6,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,0,9]},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":733.235224369382,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.41,\"onlineExpGained\":293.34135029863427,\"onlineMoneyMade\":0,\"onlineRunningTime\":2552.209999999893,\"ramUsage\":1.75,\"server\":\"36.5.4.0\",\"threads\":3}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,39,0]},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3177.3527272080064,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.41200000001,\"onlineExpGained\":1271.1458512940817,\"onlineMoneyMade\":0,\"onlineRunningTime\":2552.209999999893,\"ramUsage\":1.75,\"server\":\"36.5.4.0\",\"threads\":13}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\",503419924.0000001],\"dataMap\":{\"46.1.5.7\":[254212,6,0,0]},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":773.9705361147708,\"offlineMoneyMade\":635427.6267091667,\"offlineRunningTime\":71988.41200000001,\"onlineExpGained\":309.6380919818917,\"onlineMoneyMade\":254212,\"onlineRunningTime\":2552.209999999893,\"ramUsage\":1.8,\"server\":\"36.5.4.0\",\"threads\":2}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"36.5.4.0\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"36.5.4.0\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"36.5.4.0\"}}],\"serversOnNetwork\":[\"65.3.5.7\",\"83.7.9.1\",\"13.4.4.2\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"baseDifficulty\":60,\"hackDifficulty\":60,\"manuallyHacked\":false,\"minDifficulty\":20,\"moneyAvailable\":131912699.80000001,\"moneyMax\":659563499.0000001,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"purchasedByPlayer\":false,\"requiredHackingSkill\":493,\"serverGrowth\":46}},\"11.8.2.0\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"alpha-ent\",\"httpPortOpen\":true,\"ip\":\"11.8.2.0\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"sector-12-crime.lit\"],\"organizationName\":\"Alpha Enterprises\",\"programs\":[],\"ramUsed\":63.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,0,18]},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1466.4704894806182,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.41200000001,\"onlineExpGained\":586.6827005972685,\"onlineMoneyMade\":0,\"onlineRunningTime\":2622.809999999829,\"ramUsage\":1.75,\"server\":\"11.8.2.0\",\"threads\":6}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,78,0]},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6354.70554269003,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.413,\"onlineExpGained\":2542.2917025881634,\"onlineMoneyMade\":0,\"onlineRunningTime\":2622.809999999829,\"ramUsage\":1.75,\"server\":\"11.8.2.0\",\"threads\":26}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\",503419924.0000001],\"dataMap\":{\"46.1.5.7\":[1206792,28,0,0]},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2525.5881002998835,\"offlineMoneyMade\":3016494.0567075,\"offlineRunningTime\":71988.413,\"onlineExpGained\":1010.3979843619625,\"onlineMoneyMade\":1206792,\"onlineRunningTime\":2622.809999999829,\"ramUsage\":1.8,\"server\":\"11.8.2.0\",\"threads\":4}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"11.8.2.0\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"11.8.2.0\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"11.8.2.0\"}}],\"serversOnNetwork\":[\"46.1.5.7\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"baseDifficulty\":68,\"hackDifficulty\":68,\"manuallyHacked\":false,\"minDifficulty\":23,\"moneyAvailable\":143120769,\"moneyMax\":715603845,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"purchasedByPlayer\":false,\"requiredHackingSkill\":577,\"serverGrowth\":54}},\"12.7.8.2\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"aevum-police\",\"httpPortOpen\":true,\"ip\":\"12.7.8.2\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Aevum Police Network\",\"programs\":[],\"ramUsed\":15.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,0,2]},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":162.94117002471916,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.414,\"onlineExpGained\":65.18696673302983,\"onlineMoneyMade\":0,\"onlineRunningTime\":2527.6099999999155,\"ramUsage\":1.75,\"server\":\"12.7.8.2\",\"threads\":2}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,18,0]},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1466.4705302224725,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.414,\"onlineExpGained\":586.6827005972685,\"onlineMoneyMade\":0,\"onlineRunningTime\":2527.6099999999155,\"ramUsage\":1.75,\"server\":\"12.7.8.2\",\"threads\":6}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\",503419924.0000001],\"dataMap\":{\"46.1.5.7\":[272581,6,0,0]},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":590.6617577495203,\"offlineMoneyMade\":681342.7672182638,\"offlineRunningTime\":71988.416,\"onlineExpGained\":236.30275440723312,\"onlineMoneyMade\":272581,\"onlineRunningTime\":2527.6099999999155,\"ramUsage\":1.8,\"server\":\"12.7.8.2\",\"threads\":1}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"12.7.8.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"12.7.8.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"12.7.8.2\"}}],\"serversOnNetwork\":[\"65.3.5.7\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"baseDifficulty\":71,\"hackDifficulty\":71,\"manuallyHacked\":false,\"minDifficulty\":24,\"moneyAvailable\":67163514.8,\"moneyMax\":335817574,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"purchasedByPlayer\":false,\"requiredHackingSkill\":407,\"serverGrowth\":35}},\"58.4.4.1\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"rothman-uni\",\"httpPortOpen\":true,\"ip\":\"58.4.4.1\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"secret-societies.lit\",\"the-failed-frontier.lit\",\"tensions-in-tech-race.lit\"],\"organizationName\":\"Rothman University Network\",\"programs\":[],\"ramUsed\":63.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.009999999999984,\"ramUsage\":1.75,\"server\":\"58.4.4.1\",\"threads\":6}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.009999999999984,\"ramUsage\":1.75,\"server\":\"58.4.4.1\",\"threads\":26}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",659563499.0000001],\"dataMap\":{},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.009999999999984,\"ramUsage\":1.8,\"server\":\"58.4.4.1\",\"threads\":4}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"58.4.4.1\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"58.4.4.1\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"58.4.4.1\"}}],\"serversOnNetwork\":[\"91.3.9.5\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"baseDifficulty\":55,\"hackDifficulty\":55,\"manuallyHacked\":false,\"minDifficulty\":18,\"moneyAvailable\":44482559.800000004,\"moneyMax\":222412799,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"purchasedByPlayer\":false,\"requiredHackingSkill\":423,\"serverGrowth\":37}},\"57.4.8.2\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zb-institute\",\"httpPortOpen\":true,\"ip\":\"57.4.8.2\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[],\"organizationName\":\"ZB Institute of Technology Network\",\"programs\":[],\"ramUsed\":126.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,0,33]},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2688.529454794665,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.418,\"onlineExpGained\":1075.5849510949922,\"onlineMoneyMade\":0,\"onlineRunningTime\":2555.2099999998904,\"ramUsage\":1.75,\"server\":\"57.4.8.2\",\"threads\":11}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,159,0]},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":12953.823736737933,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.418,\"onlineExpGained\":5182.363855275872,\"onlineMoneyMade\":0,\"onlineRunningTime\":2555.2099999998904,\"ramUsage\":1.75,\"server\":\"57.4.8.2\",\"threads\":53}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\",503419924.0000001],\"dataMap\":{\"46.1.5.7\":[1956384,48,0,0]},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4725.29432455478,\"offlineMoneyMade\":4890172.691300001,\"offlineRunningTime\":71988.42000000001,\"onlineExpGained\":1890.4220352578654,\"onlineMoneyMade\":1956384,\"onlineRunningTime\":2555.2099999998904,\"ramUsage\":1.8,\"server\":\"57.4.8.2\",\"threads\":8}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"57.4.8.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"57.4.8.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"57.4.8.2\"}}],\"serversOnNetwork\":[\"51.0.1.3\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"baseDifficulty\":65,\"hackDifficulty\":65,\"manuallyHacked\":false,\"minDifficulty\":22,\"moneyAvailable\":191005458.60000002,\"moneyMax\":955027293.0000002,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"purchasedByPlayer\":false,\"requiredHackingSkill\":749,\"serverGrowth\":83}},\"97.7.3.5\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"summit-uni\",\"httpPortOpen\":true,\"ip\":\"97.7.3.5\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"secret-societies.lit\",\"the-failed-frontier.lit\",\"synthetic-muscles.lit\"],\"organizationName\":\"Summit University Network\",\"programs\":[],\"ramUsed\":31.6,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.009999999999994,\"ramUsage\":1.75,\"server\":\"97.7.3.5\",\"threads\":3}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.009999999999994,\"ramUsage\":1.75,\"server\":\"97.7.3.5\",\"threads\":13}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",659563499.0000001],\"dataMap\":{},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.009999999999994,\"ramUsage\":1.8,\"server\":\"97.7.3.5\",\"threads\":2}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"97.7.3.5\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"97.7.3.5\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"97.7.3.5\"}}],\"serversOnNetwork\":[\"91.3.9.5\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"baseDifficulty\":62,\"hackDifficulty\":62,\"manuallyHacked\":false,\"minDifficulty\":21,\"moneyAvailable\":51223081.800000004,\"moneyMax\":256115409,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"purchasedByPlayer\":false,\"requiredHackingSkill\":437,\"serverGrowth\":44}},\"65.3.5.7\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-924051-Netburners.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"1992375251\",\"reward\":{\"type\":0,\"name\":\"Netburners\"}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"syscore\",\"httpPortOpen\":false,\"ip\":\"65.3.5.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"SysCore Securities\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"51.0.1.3\",\"36.5.4.0\",\"12.7.8.2\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"baseDifficulty\":77,\"hackDifficulty\":77,\"manuallyHacked\":false,\"minDifficulty\":26,\"moneyAvailable\":97612297.4,\"moneyMax\":488061487,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"purchasedByPlayer\":false,\"requiredHackingSkill\":568,\"serverGrowth\":61}},\"46.1.5.7\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"catalyst\",\"httpPortOpen\":true,\"ip\":\"46.1.5.7\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"tensions-in-tech-race.lit\"],\"organizationName\":\"Catalyst Ventures\",\"programs\":[],\"ramUsed\":126.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,0,33]},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2688.5296415281637,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.42300000001,\"onlineExpGained\":1075.5849510949922,\"onlineMoneyMade\":0,\"onlineRunningTime\":2626.009999999826,\"ramUsage\":1.75,\"server\":\"46.1.5.7\",\"threads\":11}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,212,0]},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":17271.766421862754,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.424,\"onlineExpGained\":6909.8184737011625,\"onlineMoneyMade\":0,\"onlineRunningTime\":2626.009999999826,\"ramUsage\":1.75,\"server\":\"46.1.5.7\",\"threads\":53}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\",503419924.0000001],\"dataMap\":{\"46.1.5.7\":[2030912,48,0,0]},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4562.353394454312,\"offlineMoneyMade\":5076462.981026666,\"offlineRunningTime\":71988.424,\"onlineExpGained\":1825.2350685248352,\"onlineMoneyMade\":2030912,\"onlineRunningTime\":2626.009999999826,\"ramUsage\":1.8,\"server\":\"46.1.5.7\",\"threads\":8}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"46.1.5.7\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"46.1.5.7\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"46.1.5.7\"}}],\"serversOnNetwork\":[\"53.6.3.6\",\"11.8.2.0\",\"63.8.0.2\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"baseDifficulty\":66,\"hackDifficulty\":32.844,\"manuallyHacked\":false,\"minDifficulty\":22,\"moneyAvailable\":466653516.0797404,\"moneyMax\":503419924.0000001,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"purchasedByPlayer\":false,\"requiredHackingSkill\":403,\"serverGrowth\":32}},\"51.0.1.3\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"the-hub\",\"httpPortOpen\":true,\"ip\":\"51.0.1.3\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"The Hub\",\"programs\":[],\"ramUsed\":31.6,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,0,9]},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":733.2353771513353,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.425,\"onlineExpGained\":293.34135029863427,\"onlineMoneyMade\":0,\"onlineRunningTime\":2558.2099999998877,\"ramUsage\":1.75,\"server\":\"51.0.1.3\",\"threads\":3}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,39,0]},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3177.35330098912,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.425,\"onlineExpGained\":1271.1458512940817,\"onlineMoneyMade\":0,\"onlineRunningTime\":2558.2099999998877,\"ramUsage\":1.75,\"server\":\"51.0.1.3\",\"threads\":13}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\",503419924.0000001],\"dataMap\":{\"46.1.5.7\":[176534,4,0,0]},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":651.7647796900758,\"offlineMoneyMade\":441263.9879725694,\"offlineRunningTime\":71988.425,\"onlineExpGained\":260.74786693211934,\"onlineMoneyMade\":176534,\"onlineRunningTime\":2558.2099999998877,\"ramUsage\":1.8,\"server\":\"51.0.1.3\",\"threads\":2}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"51.0.1.3\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"51.0.1.3\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"51.0.1.3\"}}],\"serversOnNetwork\":[\"71.0.8.0\",\"57.4.8.2\",\"65.3.5.7\"],\"smtpPortOpen\":false,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"baseDifficulty\":35,\"hackDifficulty\":12,\"manuallyHacked\":false,\"minDifficulty\":12,\"moneyAvailable\":183505666.00000003,\"moneyMax\":183505666.00000003,\"numOpenPortsRequired\":2,\"openPortCount\":3,\"purchasedByPlayer\":false,\"requiredHackingSkill\":304,\"serverGrowth\":45}},\"43.1.5.9\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"comptek\",\"httpPortOpen\":true,\"ip\":\"43.1.5.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"man-and-machine.lit\"],\"organizationName\":\"CompuTek\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"55.4.9.6\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"baseDifficulty\":64,\"hackDifficulty\":21,\"manuallyHacked\":false,\"minDifficulty\":21,\"moneyAvailable\":222369579,\"moneyMax\":222369579,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"purchasedByPlayer\":false,\"requiredHackingSkill\":342,\"serverGrowth\":45}},\"91.3.9.5\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"netlink\",\"httpPortOpen\":true,\"ip\":\"91.3.9.5\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"simulated-reality.lit\"],\"organizationName\":\"Netlink Technologies\",\"programs\":[],\"ramUsed\":15.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":17.009999999999973,\"ramUsage\":1.75,\"server\":\"91.3.9.5\",\"threads\":2}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":17.009999999999973,\"ramUsage\":1.75,\"server\":\"91.3.9.5\",\"threads\":6}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",659563499.0000001],\"dataMap\":{},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":17.009999999999973,\"ramUsage\":1.8,\"server\":\"91.3.9.5\",\"threads\":1}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"91.3.9.5\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"91.3.9.5\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"91.3.9.5\"}}],\"serversOnNetwork\":[\"40.5.6.6\",\"58.4.4.1\",\"97.7.3.5\",\"50.4.2.0\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"baseDifficulty\":71,\"hackDifficulty\":198.96800000000002,\"manuallyHacked\":false,\"minDifficulty\":24,\"moneyAvailable\":275000000,\"moneyMax\":275000000,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"purchasedByPlayer\":false,\"requiredHackingSkill\":395,\"serverGrowth\":72}},\"53.6.3.6\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-418133.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[6,15,9,24,24,4,39,16],[2,30,26,3,32,9,47,12]],\"reward\":{\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-836357.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"((((()\",\"reward\":{\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"johnson-ortho\",\"httpPortOpen\":false,\"ip\":\"53.6.3.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Johnson Orthopedics\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"41.3.3.9\",\"46.1.5.7\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"baseDifficulty\":48,\"hackDifficulty\":48,\"manuallyHacked\":false,\"minDifficulty\":16,\"moneyAvailable\":15662266.200000001,\"moneyMax\":78311331,\"numOpenPortsRequired\":2,\"openPortCount\":0,\"purchasedByPlayer\":false,\"requiredHackingSkill\":270,\"serverGrowth\":61}},\"11.5.3.6\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"foodnstuff\",\"httpPortOpen\":false,\"ip\":\"11.5.3.6\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"sector-12-crime.lit\"],\"organizationName\":\"Food N Stuff Supermarket\",\"programs\":[],\"ramUsed\":15.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":51.21000000000019,\"ramUsage\":1.75,\"server\":\"11.5.3.6\",\"threads\":2}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":51.21000000000019,\"ramUsage\":1.75,\"server\":\"11.5.3.6\",\"threads\":6}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",659563499.0000001],\"dataMap\":{},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":51.21000000000019,\"ramUsage\":1.8,\"server\":\"11.5.3.6\",\"threads\":1}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"11.5.3.6\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"11.5.3.6\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"11.5.3.6\"}}],\"serversOnNetwork\":[\"60.8.2.2\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"baseDifficulty\":10,\"hackDifficulty\":3,\"manuallyHacked\":false,\"minDifficulty\":3,\"moneyAvailable\":880950.0947839698,\"moneyMax\":2000000,\"numOpenPortsRequired\":0,\"openPortCount\":1,\"purchasedByPlayer\":false,\"requiredHackingSkill\":1,\"serverGrowth\":5}},\"53.0.8.1\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"sigma-cosmetics\",\"httpPortOpen\":false,\"ip\":\"53.0.8.1\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Sigma Cosmetics\",\"programs\":[],\"ramUsed\":15.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":49.01000000000016,\"ramUsage\":1.75,\"server\":\"53.0.8.1\",\"threads\":2}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":49.01000000000016,\"ramUsage\":1.75,\"server\":\"53.0.8.1\",\"threads\":6}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",659563499.0000001],\"dataMap\":{},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":49.01000000000016,\"ramUsage\":1.8,\"server\":\"53.0.8.1\",\"threads\":1}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"53.0.8.1\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"53.0.8.1\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"53.0.8.1\"}}],\"serversOnNetwork\":[\"60.8.2.2\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"baseDifficulty\":10,\"hackDifficulty\":10,\"manuallyHacked\":false,\"minDifficulty\":3,\"moneyAvailable\":460000,\"moneyMax\":2300000,\"numOpenPortsRequired\":0,\"openPortCount\":1,\"purchasedByPlayer\":false,\"requiredHackingSkill\":5,\"serverGrowth\":10}},\"17.5.7.5\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"joesguns\",\"httpPortOpen\":false,\"ip\":\"17.5.7.5\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Joe's Guns\",\"programs\":[],\"ramUsed\":15.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":41.41000000000005,\"ramUsage\":1.75,\"server\":\"17.5.7.5\",\"threads\":2}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":41.41000000000005,\"ramUsage\":1.75,\"server\":\"17.5.7.5\",\"threads\":6}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",659563499.0000001],\"dataMap\":{},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":41.41000000000005,\"ramUsage\":1.8,\"server\":\"17.5.7.5\",\"threads\":1}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"17.5.7.5\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"17.5.7.5\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"17.5.7.5\"}}],\"serversOnNetwork\":[\"60.8.2.2\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"baseDifficulty\":15,\"hackDifficulty\":15,\"manuallyHacked\":false,\"minDifficulty\":5,\"moneyAvailable\":500000,\"moneyMax\":2500000,\"numOpenPortsRequired\":0,\"openPortCount\":1,\"purchasedByPlayer\":false,\"requiredHackingSkill\":10,\"serverGrowth\":20}},\"37.4.7.1\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-524167.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[14,27,11,27,22,39,18],[26,16,10,38,1,40,42],[43,8,23,10,27,16,24],[47,22,30,39,19,31,44],[42,24,48,8,22,23,40],[1,4,8,2,31,50,35],[38,23,30,23,16,42,21],[23,42,40,39,35,49,44],[8,36,43,40,47,25,38],[3,29,19,20,11,12,10],[24,29,38,27,10,43,31]],\"reward\":{\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"zer0\",\"httpPortOpen\":false,\"ip\":\"37.4.7.1\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"ZER0 Nightclub\",\"programs\":[],\"ramUsed\":31.6,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.20999999999995,\"ramUsage\":1.75,\"server\":\"37.4.7.1\",\"threads\":3}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.20999999999995,\"ramUsage\":1.75,\"server\":\"37.4.7.1\",\"threads\":13}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",659563499.0000001],\"dataMap\":{},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.20999999999995,\"ramUsage\":1.8,\"server\":\"37.4.7.1\",\"threads\":2}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"37.4.7.1\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"37.4.7.1\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"37.4.7.1\"}}],\"serversOnNetwork\":[\"95.8.6.0\",\"40.5.6.6\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"baseDifficulty\":25,\"hackDifficulty\":25,\"manuallyHacked\":false,\"minDifficulty\":8,\"moneyAvailable\":1500000,\"moneyMax\":7500000,\"numOpenPortsRequired\":1,\"openPortCount\":1,\"purchasedByPlayer\":false,\"requiredHackingSkill\":75,\"serverGrowth\":40}},\"41.4.7.9\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"nectar-net\",\"httpPortOpen\":false,\"ip\":\"41.4.7.9\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Nectar Nightclub Network\",\"programs\":[],\"ramUsed\":15.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,0,6]},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":488.8236594609562,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.436,\"onlineExpGained\":195.5609001990895,\"onlineMoneyMade\":0,\"onlineRunningTime\":2632.2099999998204,\"ramUsage\":1.75,\"server\":\"41.4.7.9\",\"threads\":2}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,24,0]},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1955.294665005061,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.437,\"onlineExpGained\":782.243600796358,\"onlineMoneyMade\":0,\"onlineRunningTime\":2632.2099999998204,\"ramUsage\":1.75,\"server\":\"41.4.7.9\",\"threads\":6}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\",503419924.0000001],\"dataMap\":{\"46.1.5.7\":[120902,3,0,0]},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":386.985413200241,\"offlineMoneyMade\":302206.42510270834,\"offlineRunningTime\":71988.439,\"onlineExpGained\":154.81904599094585,\"onlineMoneyMade\":120902,\"onlineRunningTime\":2632.2099999998204,\"ramUsage\":1.8,\"server\":\"41.4.7.9\",\"threads\":1}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"41.4.7.9\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"41.4.7.9\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"41.4.7.9\"}}],\"serversOnNetwork\":[\"95.8.6.0\",\"41.3.3.9\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"baseDifficulty\":20,\"hackDifficulty\":9.243999999999994,\"manuallyHacked\":false,\"minDifficulty\":7,\"moneyAvailable\":2687060,\"moneyMax\":2750000,\"numOpenPortsRequired\":0,\"openPortCount\":1,\"purchasedByPlayer\":false,\"requiredHackingSkill\":20,\"serverGrowth\":25}},\"40.5.6.6\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"neo-net\",\"httpPortOpen\":false,\"ip\":\"40.5.6.6\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"the-hidden-world.lit\"],\"organizationName\":\"Neo Nightclub Network\",\"programs\":[],\"ramUsed\":31.6,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999996,\"ramUsage\":1.75,\"server\":\"40.5.6.6\",\"threads\":3}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999996,\"ramUsage\":1.75,\"server\":\"40.5.6.6\",\"threads\":13}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",659563499.0000001],\"dataMap\":{},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999996,\"ramUsage\":1.8,\"server\":\"40.5.6.6\",\"threads\":2}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"40.5.6.6\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"40.5.6.6\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"40.5.6.6\"}}],\"serversOnNetwork\":[\"37.4.7.1\",\"91.3.9.5\",\"48.2.9.1\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"baseDifficulty\":25,\"hackDifficulty\":25,\"manuallyHacked\":false,\"minDifficulty\":8,\"moneyAvailable\":1000000,\"moneyMax\":5000000,\"numOpenPortsRequired\":1,\"openPortCount\":1,\"purchasedByPlayer\":false,\"requiredHackingSkill\":50,\"serverGrowth\":25}},\"55.4.9.6\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"silver-helix\",\"httpPortOpen\":true,\"ip\":\"55.4.9.6\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"new-triads.lit\"],\"organizationName\":\"Silver Helix\",\"programs\":[],\"ramUsed\":63.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":32.409999999999926,\"ramUsage\":1.75,\"server\":\"55.4.9.6\",\"threads\":6}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":32.409999999999926,\"ramUsage\":1.75,\"server\":\"55.4.9.6\",\"threads\":26}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",659563499.0000001],\"dataMap\":{},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":32.409999999999926,\"ramUsage\":1.8,\"server\":\"55.4.9.6\",\"threads\":4}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"55.4.9.6\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"55.4.9.6\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"55.4.9.6\"}}],\"serversOnNetwork\":[\"25.6.4.6\",\"43.1.5.9\",\"92.3.7.2\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"baseDifficulty\":30,\"hackDifficulty\":30,\"manuallyHacked\":false,\"minDifficulty\":10,\"moneyAvailable\":9000000,\"moneyMax\":45000000,\"numOpenPortsRequired\":2,\"openPortCount\":5,\"purchasedByPlayer\":false,\"requiredHackingSkill\":150,\"serverGrowth\":30}},\"77.6.0.2\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"hong-fang-tea\",\"httpPortOpen\":false,\"ip\":\"77.6.0.2\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"brighter-than-the-sun.lit\"],\"organizationName\":\"HongFang Teahouse\",\"programs\":[],\"ramUsed\":15.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":38.41000000000001,\"ramUsage\":1.75,\"server\":\"77.6.0.2\",\"threads\":2}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":38.41000000000001,\"ramUsage\":1.75,\"server\":\"77.6.0.2\",\"threads\":6}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",659563499.0000001],\"dataMap\":{},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":38.41000000000001,\"ramUsage\":1.8,\"server\":\"77.6.0.2\",\"threads\":1}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"77.6.0.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"77.6.0.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"77.6.0.2\"}}],\"serversOnNetwork\":[\"60.8.2.2\",\"25.6.4.6\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"baseDifficulty\":15,\"hackDifficulty\":15,\"manuallyHacked\":false,\"minDifficulty\":5,\"moneyAvailable\":600000,\"moneyMax\":3000000,\"numOpenPortsRequired\":0,\"openPortCount\":1,\"purchasedByPlayer\":false,\"requiredHackingSkill\":30,\"serverGrowth\":20}},\"95.8.6.0\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"harakiri-sushi\",\"httpPortOpen\":false,\"ip\":\"95.8.6.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"HaraKiri Sushi Bar Network\",\"programs\":[],\"ramUsed\":15.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.40999999999994,\"ramUsage\":1.75,\"server\":\"95.8.6.0\",\"threads\":2}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.40999999999994,\"ramUsage\":1.75,\"server\":\"95.8.6.0\",\"threads\":6}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",659563499.0000001],\"dataMap\":{},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.40999999999994,\"ramUsage\":1.8,\"server\":\"95.8.6.0\",\"threads\":1}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"95.8.6.0\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"95.8.6.0\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"95.8.6.0\"}}],\"serversOnNetwork\":[\"60.8.2.2\",\"37.4.7.1\",\"41.4.7.9\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"baseDifficulty\":15,\"hackDifficulty\":15,\"manuallyHacked\":false,\"minDifficulty\":5,\"moneyAvailable\":800000,\"moneyMax\":4000000,\"numOpenPortsRequired\":0,\"openPortCount\":1,\"purchasedByPlayer\":false,\"requiredHackingSkill\":40,\"serverGrowth\":40}},\"71.0.8.0\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"phantasy\",\"httpPortOpen\":true,\"ip\":\"71.0.8.0\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Phantasy Club\",\"programs\":[],\"ramUsed\":31.6,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,0,9]},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":733.2355910460699,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.446,\"onlineExpGained\":293.34135029863427,\"onlineMoneyMade\":0,\"onlineRunningTime\":2561.409999999885,\"ramUsage\":1.75,\"server\":\"71.0.8.0\",\"threads\":3}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,39,0]},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3177.354227866303,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.446,\"onlineExpGained\":1271.1458512940817,\"onlineMoneyMade\":0,\"onlineRunningTime\":2561.409999999885,\"ramUsage\":1.75,\"server\":\"71.0.8.0\",\"threads\":13}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\",503419924.0000001],\"dataMap\":{\"46.1.5.7\":[554720,12,0,0]},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1181.3240406162731,\"offlineMoneyMade\":1386577.3030333333,\"offlineRunningTime\":71988.448,\"onlineExpGained\":472.60550881446636,\"onlineMoneyMade\":554720,\"onlineRunningTime\":2561.409999999885,\"ramUsage\":1.8,\"server\":\"71.0.8.0\",\"threads\":2}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"71.0.8.0\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"71.0.8.0\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"71.0.8.0\"}}],\"serversOnNetwork\":[\"66.4.1.5\",\"51.0.1.3\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"baseDifficulty\":20,\"hackDifficulty\":20,\"manuallyHacked\":false,\"minDifficulty\":7,\"moneyAvailable\":4800000,\"moneyMax\":24000000,\"numOpenPortsRequired\":2,\"openPortCount\":5,\"purchasedByPlayer\":false,\"requiredHackingSkill\":100,\"serverGrowth\":35}},\"66.4.1.5\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"max-hardware\",\"httpPortOpen\":false,\"ip\":\"66.4.1.5\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Max Hardware Store\",\"programs\":[],\"ramUsed\":31.6,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,0,9]},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":733.2356216024605,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.449,\"onlineExpGained\":293.34135029863427,\"onlineMoneyMade\":0,\"onlineRunningTime\":2564.409999999882,\"ramUsage\":1.75,\"server\":\"66.4.1.5\",\"threads\":3}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,39,0]},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3177.354360277329,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.449,\"onlineExpGained\":1271.1458512940817,\"onlineMoneyMade\":0,\"onlineRunningTime\":2564.409999999882,\"ramUsage\":1.75,\"server\":\"66.4.1.5\",\"threads\":13}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\",503419924.0000001],\"dataMap\":{\"46.1.5.7\":[488810,10,0,0]},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1059.1181495171154,\"offlineMoneyMade\":1221828.8140697917,\"offlineRunningTime\":71988.451,\"onlineExpGained\":423.71528376469394,\"onlineMoneyMade\":488810,\"onlineRunningTime\":2564.409999999882,\"ramUsage\":1.8,\"server\":\"66.4.1.5\",\"threads\":2}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"66.4.1.5\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"66.4.1.5\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"66.4.1.5\"}}],\"serversOnNetwork\":[\"77.0.1.5\",\"71.0.8.0\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"baseDifficulty\":15,\"hackDifficulty\":15,\"manuallyHacked\":false,\"minDifficulty\":5,\"moneyAvailable\":2000000,\"moneyMax\":10000000,\"numOpenPortsRequired\":1,\"openPortCount\":1,\"purchasedByPlayer\":false,\"requiredHackingSkill\":80,\"serverGrowth\":30}},\"41.3.3.9\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"omega-net\",\"httpPortOpen\":true,\"ip\":\"41.3.3.9\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"the-new-god.lit\"],\"organizationName\":\"Omega Software\",\"programs\":[],\"ramUsed\":31.6,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,0,9]},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":733.2356419733876,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.451,\"onlineExpGained\":293.34135029863427,\"onlineMoneyMade\":0,\"onlineRunningTime\":2629.0099999998233,\"ramUsage\":1.75,\"server\":\"41.3.3.9\",\"threads\":3}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,52,0]},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4236.472656917807,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.452,\"onlineExpGained\":1694.8611350587757,\"onlineMoneyMade\":0,\"onlineRunningTime\":2629.0099999998233,\"ramUsage\":1.75,\"server\":\"41.3.3.9\",\"threads\":13}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\",503419924.0000001],\"dataMap\":{\"46.1.5.7\":[533832,12,0,0]},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1140.5888080911564,\"offlineMoneyMade\":1334365.7813741667,\"offlineRunningTime\":71988.45300000001,\"onlineExpGained\":456.3087671312089,\"onlineMoneyMade\":533832,\"onlineRunningTime\":2629.0099999998233,\"ramUsage\":1.8,\"server\":\"41.3.3.9\",\"threads\":2}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"41.3.3.9\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"41.3.3.9\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"41.3.3.9\"}}],\"serversOnNetwork\":[\"41.4.7.9\",\"53.6.3.6\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"baseDifficulty\":29,\"hackDifficulty\":29,\"manuallyHacked\":false,\"minDifficulty\":10,\"moneyAvailable\":12467979.8,\"moneyMax\":62339899,\"numOpenPortsRequired\":2,\"openPortCount\":5,\"purchasedByPlayer\":false,\"requiredHackingSkill\":219,\"serverGrowth\":30}},\"92.3.7.2\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"crush-fitness\",\"httpPortOpen\":false,\"ip\":\"92.3.7.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Crush Fitness\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"55.4.9.6\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"baseDifficulty\":42,\"hackDifficulty\":42,\"manuallyHacked\":false,\"minDifficulty\":14,\"moneyAvailable\":8487609.4,\"moneyMax\":42438047,\"numOpenPortsRequired\":2,\"openPortCount\":0,\"purchasedByPlayer\":false,\"requiredHackingSkill\":261,\"serverGrowth\":31}},\"77.0.1.5\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"iron-gym\",\"httpPortOpen\":false,\"ip\":\"77.0.1.5\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Iron Gym Network\",\"programs\":[],\"ramUsed\":31.6,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,0,9]},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":733.2356827152419,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.455,\"onlineExpGained\":293.34135029863427,\"onlineMoneyMade\":0,\"onlineRunningTime\":2567.609999999879,\"ramUsage\":1.75,\"server\":\"77.0.1.5\",\"threads\":3}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,39,0]},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3177.3546250993813,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.455,\"onlineExpGained\":1271.1458512940817,\"onlineMoneyMade\":0,\"onlineRunningTime\":2567.609999999879,\"ramUsage\":1.75,\"server\":\"77.0.1.5\",\"threads\":13}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\",503419924.0000001],\"dataMap\":{\"46.1.5.7\":[545556,12,0,0]},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1181.3241554856677,\"offlineMoneyMade\":1363671.1145979166,\"offlineRunningTime\":71988.455,\"onlineExpGained\":472.60550881446636,\"onlineMoneyMade\":545556,\"onlineRunningTime\":2567.609999999879,\"ramUsage\":1.8,\"server\":\"77.0.1.5\",\"threads\":2}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"77.0.1.5\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"77.0.1.5\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"77.0.1.5\"}}],\"serversOnNetwork\":[\"60.8.2.2\",\"66.4.1.5\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"baseDifficulty\":30,\"hackDifficulty\":10.076,\"manuallyHacked\":false,\"minDifficulty\":10,\"moneyAvailable\":19474878,\"moneyMax\":20000000,\"numOpenPortsRequired\":1,\"openPortCount\":1,\"purchasedByPlayer\":false,\"requiredHackingSkill\":100,\"serverGrowth\":20}},\"63.8.0.2\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"millenium-fitness\",\"httpPortOpen\":true,\"ip\":\"63.8.0.2\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Millenium Fitness Network\",\"programs\":[],\"ramUsed\":31.6,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,0,9]},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":733.2356827152419,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.455,\"onlineExpGained\":293.34135029863427,\"onlineMoneyMade\":0,\"onlineRunningTime\":2619.8099999998317,\"ramUsage\":1.75,\"server\":\"63.8.0.2\",\"threads\":3}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,39,0]},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3177.3547133733987,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.457,\"onlineExpGained\":1271.1458512940817,\"onlineMoneyMade\":0,\"onlineRunningTime\":2619.8099999998317,\"ramUsage\":1.75,\"server\":\"63.8.0.2\",\"threads\":13}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\",503419924.0000001],\"dataMap\":{\"46.1.5.7\":[293664,6,0,0]},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":773.9710199242895,\"offlineMoneyMade\":734042.1979099999,\"offlineRunningTime\":71988.457,\"onlineExpGained\":309.6380919818917,\"onlineMoneyMade\":293664,\"onlineRunningTime\":2619.8099999998317,\"ramUsage\":1.8,\"server\":\"63.8.0.2\",\"threads\":2}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"63.8.0.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"63.8.0.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"63.8.0.2\"}}],\"serversOnNetwork\":[\"46.1.5.7\",\"52.6.3.4\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"baseDifficulty\":50,\"hackDifficulty\":50,\"manuallyHacked\":false,\"minDifficulty\":17,\"moneyAvailable\":50000000,\"moneyMax\":250000000,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"purchasedByPlayer\":false,\"requiredHackingSkill\":497,\"serverGrowth\":31}},\"67.8.0.4\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"powerhouse-fitness\",\"httpPortOpen\":true,\"ip\":\"67.8.0.4\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"Powerhouse Fitness\",\"programs\":[],\"ramUsed\":63.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,0,12]},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":977.6476041148919,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.457,\"onlineExpGained\":391.121800398179,\"onlineMoneyMade\":0,\"onlineRunningTime\":2595.209999999854,\"ramUsage\":1.75,\"server\":\"67.8.0.4\",\"threads\":6}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,78,0]},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6354.709515020814,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.458,\"onlineExpGained\":2542.2917025881634,\"onlineMoneyMade\":0,\"onlineRunningTime\":2595.209999999854,\"ramUsage\":1.75,\"server\":\"67.8.0.4\",\"threads\":26}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\",503419924.0000001],\"dataMap\":{\"46.1.5.7\":[664592,16,0,0]},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1792.3539906729015,\"offlineMoneyMade\":1661213.4478405556,\"offlineRunningTime\":71988.459,\"onlineExpGained\":717.0566340633281,\"onlineMoneyMade\":664592,\"onlineRunningTime\":2595.209999999854,\"ramUsage\":1.8,\"server\":\"67.8.0.4\",\"threads\":4}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"67.8.0.4\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"67.8.0.4\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"67.8.0.4\"}}],\"serversOnNetwork\":[\"22.1.1.9\",\"43.4.5.4\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"baseDifficulty\":55,\"hackDifficulty\":55,\"manuallyHacked\":false,\"minDifficulty\":18,\"moneyAvailable\":180000000,\"moneyMax\":900000000,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"purchasedByPlayer\":false,\"requiredHackingSkill\":1044,\"serverGrowth\":51}},\"13.4.4.2\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"snap-fitness\",\"httpPortOpen\":false,\"ip\":\"13.4.4.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Snap Fitness\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"36.5.4.0\",\"70.6.3.6\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"baseDifficulty\":40,\"hackDifficulty\":40,\"manuallyHacked\":false,\"minDifficulty\":13,\"moneyAvailable\":90000000,\"moneyMax\":450000000,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"purchasedByPlayer\":false,\"requiredHackingSkill\":685,\"serverGrowth\":60}},\"15.2.9.4\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"run4theh111z\",\"httpPortOpen\":true,\"ip\":\"15.2.9.4\",\"isConnectedTo\":false,\"maxRam\":512,\"messages\":[\"simulated-reality.lit\",\"the-new-god.lit\"],\"organizationName\":\"The Runners\",\"programs\":[],\"ramUsed\":510.7,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,0,132]},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":10754.124093424209,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.46,\"onlineExpGained\":4302.339804379969,\"onlineMoneyMade\":0,\"onlineRunningTime\":2570.6099999998764,\"ramUsage\":1.75,\"server\":\"15.2.9.4\",\"threads\":44}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,654,0]},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":53281.79664469266,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.46,\"onlineExpGained\":21316.13812170076,\"onlineMoneyMade\":0,\"onlineRunningTime\":2570.6099999998764,\"ramUsage\":1.75,\"server\":\"15.2.9.4\",\"threads\":218}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\",503419924.0000001],\"dataMap\":{\"46.1.5.7\":[9721525,203,0,0]},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":18901.188850798226,\"offlineMoneyMade\":24299915.11362327,\"offlineRunningTime\":71988.464,\"onlineExpGained\":7561.688141031461,\"onlineMoneyMade\":9721525,\"onlineRunningTime\":2570.6099999998764,\"ramUsage\":1.8,\"server\":\"15.2.9.4\",\"threads\":29}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"15.2.9.4\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"15.2.9.4\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"15.2.9.4\"}}],\"serversOnNetwork\":[\"29.7.8.8\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"baseDifficulty\":0,\"hackDifficulty\":0,\"manuallyHacked\":false,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"purchasedByPlayer\":false,\"requiredHackingSkill\":549,\"serverGrowth\":0}},\"50.4.2.0\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-424995.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[168,104,76,44,67,200,119,45,32,50,106,71,131,182,18,174,59,125,107,26,123,21,169,161,81,49,2,191,65,74,117,100,52,142,167,193,48,48,141,91,6,148],\"reward\":{\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"I.I.I.I\",\"httpPortOpen\":true,\"ip\":\"50.4.2.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"I.I.I.I\",\"programs\":[],\"ramUsed\":15.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.610000000000005,\"ramUsage\":1.75,\"server\":\"50.4.2.0\",\"threads\":2}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.610000000000005,\"ramUsage\":1.75,\"server\":\"50.4.2.0\",\"threads\":6}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",659563499.0000001],\"dataMap\":{},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.610000000000005,\"ramUsage\":1.8,\"server\":\"50.4.2.0\",\"threads\":1}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"50.4.2.0\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"50.4.2.0\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"50.4.2.0\"}}],\"serversOnNetwork\":[\"91.3.9.5\",\"31.4.7.1\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"baseDifficulty\":0,\"hackDifficulty\":0,\"manuallyHacked\":false,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"purchasedByPlayer\":false,\"requiredHackingSkill\":354,\"serverGrowth\":0}},\"48.2.9.1\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"avmnite-02h\",\"httpPortOpen\":true,\"ip\":\"48.2.9.1\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"NiteSec\",\"programs\":[],\"ramUsed\":31.6,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":false,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.41,\"ramUsage\":1.75,\"server\":\"48.2.9.1\",\"threads\":3}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":false,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.41,\"ramUsage\":1.75,\"server\":\"48.2.9.1\",\"threads\":13}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",659563499.0000001],\"dataMap\":{},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":false,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.41,\"ramUsage\":1.8,\"server\":\"48.2.9.1\",\"threads\":2}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"48.2.9.1\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"48.2.9.1\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"48.2.9.1\"}}],\"serversOnNetwork\":[\"40.5.6.6\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"baseDifficulty\":0,\"hackDifficulty\":1,\"manuallyHacked\":true,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":2,\"openPortCount\":5,\"purchasedByPlayer\":false,\"requiredHackingSkill\":216,\"serverGrowth\":0}},\"22.1.1.9\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\".\",\"httpPortOpen\":true,\"ip\":\"22.1.1.9\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\".\",\"programs\":[],\"ramUsed\":15.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,0,6]},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":488.82391070239055,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.473,\"onlineExpGained\":195.5609001990895,\"onlineMoneyMade\":0,\"onlineRunningTime\":2601.4099999998484,\"ramUsage\":1.75,\"server\":\"22.1.1.9\",\"threads\":2}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,18,0]},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1466.4717524780988,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.474,\"onlineExpGained\":586.6827005972685,\"onlineMoneyMade\":0,\"onlineRunningTime\":2601.4099999998484,\"ramUsage\":1.75,\"server\":\"22.1.1.9\",\"threads\":6}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\",503419924.0000001],\"dataMap\":{\"46.1.5.7\":[313107,6,0,0]},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":590.6622418419687,\"offlineMoneyMade\":782642.0941234374,\"offlineRunningTime\":71988.475,\"onlineExpGained\":236.30275440723318,\"onlineMoneyMade\":313107,\"onlineRunningTime\":2601.4099999998484,\"ramUsage\":1.8,\"server\":\"22.1.1.9\",\"threads\":1}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"22.1.1.9\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"22.1.1.9\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"22.1.1.9\"}}],\"serversOnNetwork\":[\"67.5.3.7\",\"95.0.3.6\",\"67.8.0.4\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"baseDifficulty\":0,\"hackDifficulty\":0,\"manuallyHacked\":false,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"purchasedByPlayer\":false,\"requiredHackingSkill\":514,\"serverGrowth\":0}},\"25.6.4.6\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CSEC\",\"httpPortOpen\":false,\"ip\":\"25.6.4.6\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"CyberSec\",\"programs\":[],\"ramUsed\":7.05,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":35.40999999999997,\"ramUsage\":1.75,\"server\":\"25.6.4.6\",\"threads\":1}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":35.40999999999997,\"ramUsage\":1.75,\"server\":\"25.6.4.6\",\"threads\":2}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",659563499.0000001],\"dataMap\":{},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":35.40999999999997,\"ramUsage\":1.8,\"server\":\"25.6.4.6\",\"threads\":1}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"25.6.4.6\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"25.6.4.6\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"25.6.4.6\"}}],\"serversOnNetwork\":[\"77.6.0.2\",\"55.4.9.6\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"baseDifficulty\":0,\"hackDifficulty\":0,\"manuallyHacked\":false,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":1,\"openPortCount\":1,\"purchasedByPlayer\":false,\"requiredHackingSkill\":54,\"serverGrowth\":0}},\"68.0.4.0\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"The-Cave\",\"httpPortOpen\":false,\"ip\":\"68.0.4.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"alpha-omega.lit\"],\"organizationName\":\"Helios\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"66.4.7.9\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"baseDifficulty\":0,\"hackDifficulty\":0,\"manuallyHacked\":false,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"purchasedByPlayer\":false,\"requiredHackingSkill\":925,\"serverGrowth\":0}},\"95.3.3.7\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"w0r1d_d43m0n\",\"httpPortOpen\":false,\"ip\":\"95.3.3.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"w0r1d_d43m0n\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"baseDifficulty\":0,\"hackDifficulty\":0,\"manuallyHacked\":false,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"purchasedByPlayer\":false,\"requiredHackingSkill\":3000,\"serverGrowth\":0}},\"67.2.9.2\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"darkweb\",\"httpPortOpen\":false,\"ip\":\"67.2.9.2\",\"isConnectedTo\":false,\"maxRam\":1,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"60.8.2.2\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"baseDifficulty\":1,\"hackDifficulty\":1,\"manuallyHacked\":false,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"purchasedByPlayer\":false,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"14.0.1.5\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-2048GB-17\",\"httpPortOpen\":false,\"ip\":\"14.0.1.5\",\"isConnectedTo\":false,\"maxRam\":2048,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":2047.75,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,0,528]},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":43016.513702565484,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.489,\"onlineExpGained\":17209.359217519876,\"onlineMoneyMade\":0,\"onlineRunningTime\":2509.0099999999325,\"ramUsage\":1.75,\"server\":\"14.0.1.5\",\"threads\":176}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,2643,0]},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":215326.9835136322,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.48999999999,\"onlineExpGained\":86144.57653769893,\"onlineMoneyMade\":0,\"onlineRunningTime\":2509.0099999999325,\"ramUsage\":1.75,\"server\":\"14.0.1.5\",\"threads\":881}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\",503419924.0000001],\"dataMap\":{\"46.1.5.7\":[30831240,660,0,0]},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":62732.41668766433,\"offlineMoneyMade\":77065767.504,\"offlineRunningTime\":71988.48999999999,\"onlineExpGained\":25096.98219221649,\"onlineMoneyMade\":30831240,\"onlineRunningTime\":2509.0099999999325,\"ramUsage\":1.8,\"server\":\"14.0.1.5\",\"threads\":110}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"14.0.1.5\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"14.0.1.5\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"14.0.1.5\"}}],\"serversOnNetwork\":[\"60.8.2.2\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"baseDifficulty\":1,\"hackDifficulty\":1,\"manuallyHacked\":false,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"purchasedByPlayer\":true,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"9.2.0.7\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-2048GB-18\",\"httpPortOpen\":false,\"ip\":\"9.2.0.7\",\"isConnectedTo\":false,\"maxRam\":2048,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":2047.75,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,0,528]},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":43016.51549520707,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.492,\"onlineExpGained\":17209.359217519876,\"onlineMoneyMade\":0,\"onlineRunningTime\":2505.8099999999354,\"ramUsage\":1.75,\"server\":\"9.2.0.7\",\"threads\":176}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,1762,0]},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":143551.32633059635,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.492,\"onlineExpGained\":57429.717691799284,\"onlineMoneyMade\":0,\"onlineRunningTime\":2505.8099999999354,\"ramUsage\":1.75,\"server\":\"9.2.0.7\",\"threads\":881}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\",503419924.0000001],\"dataMap\":{\"46.1.5.7\":[30388600,660,0,0]},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":62732.4193019333,\"offlineMoneyMade\":75959347.72547916,\"offlineRunningTime\":71988.493,\"onlineExpGained\":25096.982192216485,\"onlineMoneyMade\":30388600,\"onlineRunningTime\":2505.8099999999354,\"ramUsage\":1.8,\"server\":\"9.2.0.7\",\"threads\":110}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"9.2.0.7\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"9.2.0.7\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"9.2.0.7\"}}],\"serversOnNetwork\":[\"60.8.2.2\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"baseDifficulty\":1,\"hackDifficulty\":1,\"manuallyHacked\":false,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"purchasedByPlayer\":true,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"7.3.3.4\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-2048GB-19\",\"httpPortOpen\":false,\"ip\":\"7.3.3.4\",\"isConnectedTo\":false,\"maxRam\":2048,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":2047.75,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,0,528]},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":43016.51669030146,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.494,\"onlineExpGained\":17209.359217519876,\"onlineMoneyMade\":0,\"onlineRunningTime\":2502.809999999938,\"ramUsage\":1.75,\"server\":\"7.3.3.4\",\"threads\":176}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,1762,0]},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":143551.33430694602,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.49600000001,\"onlineExpGained\":57429.717691799284,\"onlineMoneyMade\":0,\"onlineRunningTime\":2502.809999999938,\"ramUsage\":1.75,\"server\":\"7.3.3.4\",\"threads\":881}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\",503419924.0000001],\"dataMap\":{\"46.1.5.7\":[30040230,550,0,0]},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":56011.09099660918,\"offlineMoneyMade\":75088565.16638124,\"offlineRunningTime\":71988.49600000001,\"onlineExpGained\":22408.019814479005,\"onlineMoneyMade\":30040230,\"onlineRunningTime\":2502.809999999938,\"ramUsage\":1.8,\"server\":\"7.3.3.4\",\"threads\":110}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"7.3.3.4\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"7.3.3.4\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"7.3.3.4\"}}],\"serversOnNetwork\":[\"60.8.2.2\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"baseDifficulty\":1,\"hackDifficulty\":1,\"manuallyHacked\":false,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"purchasedByPlayer\":true,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"15.8.0.9\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-2048GB-20\",\"httpPortOpen\":false,\"ip\":\"15.8.0.9\",\"isConnectedTo\":false,\"maxRam\":2048,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":2047.75,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,0,528]},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":43016.519080490245,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.498,\"onlineExpGained\":17209.359217519876,\"onlineMoneyMade\":0,\"onlineRunningTime\":2499.809999999941,\"ramUsage\":1.75,\"server\":\"15.8.0.9\",\"threads\":176}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,1762,0]},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":143551.34028920828,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.49900000001,\"onlineExpGained\":57429.717691799284,\"onlineMoneyMade\":0,\"onlineRunningTime\":2499.809999999941,\"ramUsage\":1.75,\"server\":\"15.8.0.9\",\"threads\":881}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\",503419924.0000001],\"dataMap\":{\"46.1.5.7\":[30033960,660,0,0]},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":62732.42453047127,\"offlineMoneyMade\":75072895.8016125,\"offlineRunningTime\":71988.49900000001,\"onlineExpGained\":25096.98219221649,\"onlineMoneyMade\":30033960,\"onlineRunningTime\":2499.809999999941,\"ramUsage\":1.8,\"server\":\"15.8.0.9\",\"threads\":110}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"15.8.0.9\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"15.8.0.9\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"15.8.0.9\"}}],\"serversOnNetwork\":[\"60.8.2.2\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"baseDifficulty\":1,\"hackDifficulty\":1,\"manuallyHacked\":false,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"purchasedByPlayer\":true,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"67.8.3.7\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-2048GB-21\",\"httpPortOpen\":false,\"ip\":\"67.8.3.7\",\"isConnectedTo\":false,\"maxRam\":2048,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":2047.75,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,0,528]},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":43016.52087313183,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.501,\"onlineExpGained\":17209.359217519876,\"onlineMoneyMade\":0,\"onlineRunningTime\":2496.6099999999437,\"ramUsage\":1.75,\"server\":\"67.8.3.7\",\"threads\":176}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,1762,0]},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":143551.34427738312,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.501,\"onlineExpGained\":57429.717691799284,\"onlineMoneyMade\":0,\"onlineRunningTime\":2496.6099999999437,\"ramUsage\":1.75,\"server\":\"67.8.3.7\",\"threads\":881}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\",503419924.0000001],\"dataMap\":{\"46.1.5.7\":[31403020,550,0,0]},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":56011.094886890394,\"offlineMoneyMade\":78495000.78620902,\"offlineRunningTime\":71988.501,\"onlineExpGained\":22408.019814479005,\"onlineMoneyMade\":31403020,\"onlineRunningTime\":2496.6099999999437,\"ramUsage\":1.8,\"server\":\"67.8.3.7\",\"threads\":110}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"67.8.3.7\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"67.8.3.7\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"67.8.3.7\"}}],\"serversOnNetwork\":[\"60.8.2.2\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"baseDifficulty\":1,\"hackDifficulty\":1,\"manuallyHacked\":false,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"purchasedByPlayer\":true,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"90.3.4.2\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-2048GB-22\",\"httpPortOpen\":false,\"ip\":\"90.3.4.2\",\"isConnectedTo\":false,\"maxRam\":2048,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":2047.75,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,0,528]},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":43016.52147067903,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.50200000001,\"onlineExpGained\":17209.359217519876,\"onlineMoneyMade\":0,\"onlineRunningTime\":2493.6099999999465,\"ramUsage\":1.75,\"server\":\"90.3.4.2\",\"threads\":176}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,1762,0]},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":143551.34627147054,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.50200000001,\"onlineExpGained\":57429.717691799284,\"onlineMoneyMade\":0,\"onlineRunningTime\":2493.6099999999465,\"ramUsage\":1.75,\"server\":\"90.3.4.2\",\"threads\":881}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\",503419924.0000001],\"dataMap\":{\"46.1.5.7\":[29169690,660,0,0]},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":60491.9858390446,\"offlineMoneyMade\":72912572.31654687,\"offlineRunningTime\":71988.505,\"onlineExpGained\":24200.661399637323,\"onlineMoneyMade\":29169690,\"onlineRunningTime\":2493.6099999999465,\"ramUsage\":1.8,\"server\":\"90.3.4.2\",\"threads\":110}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"90.3.4.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"90.3.4.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"90.3.4.2\"}}],\"serversOnNetwork\":[\"60.8.2.2\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"baseDifficulty\":1,\"hackDifficulty\":1,\"manuallyHacked\":false,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"purchasedByPlayer\":true,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"68.7.9.4\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-2048GB-23\",\"httpPortOpen\":false,\"ip\":\"68.7.9.4\",\"isConnectedTo\":false,\"maxRam\":2048,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":2047.75,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,0,528]},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":43016.523860867805,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.506,\"onlineExpGained\":17209.359217519876,\"onlineMoneyMade\":0,\"onlineRunningTime\":2490.4099999999494,\"ramUsage\":1.75,\"server\":\"68.7.9.4\",\"threads\":176}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,1762,0]},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":143551.3542478202,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.506,\"onlineExpGained\":57429.717691799284,\"onlineMoneyMade\":0,\"onlineRunningTime\":2490.4099999999494,\"ramUsage\":1.75,\"server\":\"68.7.9.4\",\"threads\":881}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\",503419924.0000001],\"dataMap\":{\"46.1.5.7\":[29498150,660,0,0]},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":62732.431501855215,\"offlineMoneyMade\":73733593.15210244,\"offlineRunningTime\":71988.50700000001,\"onlineExpGained\":25096.98219221649,\"onlineMoneyMade\":29498150,\"onlineRunningTime\":2490.4099999999494,\"ramUsage\":1.8,\"server\":\"68.7.9.4\",\"threads\":110}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"68.7.9.4\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"68.7.9.4\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"68.7.9.4\"}}],\"serversOnNetwork\":[\"60.8.2.2\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"baseDifficulty\":1,\"hackDifficulty\":1,\"manuallyHacked\":false,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"purchasedByPlayer\":true,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"47.3.0.9\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-32768GB\",\"httpPortOpen\":false,\"ip\":\"47.3.0.9\",\"isConnectedTo\":false,\"maxRam\":32768,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":32767.25,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,0,8427]},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":686553.5259131129,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.509,\"onlineExpGained\":274665.2843296212,\"onlineMoneyMade\":0,\"onlineRunningTime\":2487.409999999952,\"ramUsage\":1.75,\"server\":\"47.3.0.9\",\"threads\":2809}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,31604,0]},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2574799.7665786184,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.509,\"onlineExpGained\":1030084.4483153374,\"onlineMoneyMade\":0,\"onlineRunningTime\":2487.409999999952,\"ramUsage\":1.75,\"server\":\"47.3.0.9\",\"threads\":15802}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\",503419924.0000001],\"dataMap\":{\"46.1.5.7\":[18401350,440,0,0]},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":49289.76897797949,\"offlineMoneyMade\":45996026.59977952,\"offlineRunningTime\":71988.509,\"onlineExpGained\":19719.05743674152,\"onlineMoneyMade\":18401350,\"onlineRunningTime\":2487.409999999952,\"ramUsage\":1.8,\"server\":\"47.3.0.9\",\"threads\":110}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"47.3.0.9\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"47.3.0.9\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"47.3.0.9\"}}],\"serversOnNetwork\":[\"60.8.2.2\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"baseDifficulty\":1,\"hackDifficulty\":1,\"manuallyHacked\":false,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"purchasedByPlayer\":true,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"48.7.6.3\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-32768GB-0\",\"httpPortOpen\":false,\"ip\":\"48.7.6.3\",\"isConnectedTo\":false,\"maxRam\":32768,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":32767.25,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,0,8427]},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":686553.5449870909,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.511,\"onlineExpGained\":274665.2843296212,\"onlineMoneyMade\":0,\"onlineRunningTime\":2484.209999999955,\"ramUsage\":1.75,\"server\":\"48.7.6.3\",\"threads\":2809}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,31604,0]},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2574799.838112261,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.511,\"onlineExpGained\":1030084.4483153374,\"onlineMoneyMade\":0,\"onlineRunningTime\":2484.209999999955,\"ramUsage\":1.75,\"server\":\"48.7.6.3\",\"threads\":15802}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\",503419924.0000001],\"dataMap\":{\"46.1.5.7\":[38556320,770,0,0]},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":67213.3232009434,\"offlineMoneyMade\":96375405.58598334,\"offlineRunningTime\":71988.511,\"onlineExpGained\":26889.623777374807,\"onlineMoneyMade\":38556320,\"onlineRunningTime\":2484.209999999955,\"ramUsage\":1.8,\"server\":\"48.7.6.3\",\"threads\":110}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"48.7.6.3\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"48.7.6.3\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"48.7.6.3\"}}],\"serversOnNetwork\":[\"60.8.2.2\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"baseDifficulty\":1,\"hackDifficulty\":1,\"manuallyHacked\":false,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"purchasedByPlayer\":true,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"71.8.6.7\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-32768GB-1\",\"httpPortOpen\":false,\"ip\":\"71.8.6.7\",\"isConnectedTo\":false,\"maxRam\":32768,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":32767.25,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,0,8427]},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":686553.573598058,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.514,\"onlineExpGained\":274665.2843296212,\"onlineMoneyMade\":0,\"onlineRunningTime\":2481.2099999999577,\"ramUsage\":1.75,\"server\":\"71.8.6.7\",\"threads\":2809}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,31604,0]},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2574799.9454127243,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.514,\"onlineExpGained\":1030084.4483153374,\"onlineMoneyMade\":0,\"onlineRunningTime\":2481.2099999999577,\"ramUsage\":1.75,\"server\":\"71.8.6.7\",\"threads\":15802}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\",503419924.0000001],\"dataMap\":{\"46.1.5.7\":[12226390,220,0,0]},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":33606.663467806684,\"offlineMoneyMade\":30561095.05718576,\"offlineRunningTime\":71988.515,\"onlineExpGained\":13444.811888687402,\"onlineMoneyMade\":12226390,\"onlineRunningTime\":2481.2099999999577,\"ramUsage\":1.8,\"server\":\"71.8.6.7\",\"threads\":110}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"71.8.6.7\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"71.8.6.7\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"71.8.6.7\"}}],\"serversOnNetwork\":[\"60.8.2.2\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"baseDifficulty\":1,\"hackDifficulty\":1,\"manuallyHacked\":false,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"purchasedByPlayer\":true,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"40.5.1.2\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-32768GB-2\",\"httpPortOpen\":false,\"ip\":\"40.5.1.2\",\"isConnectedTo\":false,\"maxRam\":32768,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":32767.25,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,0,8427]},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":686553.592672036,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.516,\"onlineExpGained\":274665.2843296212,\"onlineMoneyMade\":0,\"onlineRunningTime\":2478.0099999999607,\"ramUsage\":1.75,\"server\":\"40.5.1.2\",\"threads\":2809}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,31604,0]},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2574800.0527131874,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.51699999999,\"onlineExpGained\":1030084.4483153374,\"onlineMoneyMade\":0,\"onlineRunningTime\":2478.0099999999607,\"ramUsage\":1.75,\"server\":\"40.5.1.2\",\"threads\":15802}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\",503419924.0000001],\"dataMap\":{\"46.1.5.7\":[37215530,770,0,0]},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":67213.33067028334,\"offlineMoneyMade\":93023976.26197118,\"offlineRunningTime\":71988.519,\"onlineExpGained\":26889.623777374807,\"onlineMoneyMade\":37215530,\"onlineRunningTime\":2478.0099999999607,\"ramUsage\":1.8,\"server\":\"40.5.1.2\",\"threads\":110}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"40.5.1.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"40.5.1.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"40.5.1.2\"}}],\"serversOnNetwork\":[\"60.8.2.2\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"baseDifficulty\":1,\"hackDifficulty\":1,\"manuallyHacked\":false,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"purchasedByPlayer\":true,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"80.8.9.4\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-32768GB-3\",\"httpPortOpen\":false,\"ip\":\"80.8.9.4\",\"isConnectedTo\":false,\"maxRam\":32768,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":32767.25,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,0,8427]},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":686553.6212830034,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.519,\"onlineExpGained\":274665.2843296212,\"onlineMoneyMade\":0,\"onlineRunningTime\":2475.0099999999634,\"ramUsage\":1.75,\"server\":\"80.8.9.4\",\"threads\":2809}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,31604,0]},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2574800.1242468297,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.519,\"onlineExpGained\":1030084.4483153374,\"onlineMoneyMade\":0,\"onlineRunningTime\":2475.0099999999634,\"ramUsage\":1.75,\"server\":\"80.8.9.4\",\"threads\":15802}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\",503419924.0000001],\"dataMap\":{\"46.1.5.7\":[31478040,660,0,0]},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":60491.999283856494,\"offlineMoneyMade\":78682542.6666125,\"offlineRunningTime\":71988.52100000001,\"onlineExpGained\":24200.661399637327,\"onlineMoneyMade\":31478040,\"onlineRunningTime\":2475.0099999999634,\"ramUsage\":1.8,\"server\":\"80.8.9.4\",\"threads\":110}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"80.8.9.4\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"80.8.9.4\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"80.8.9.4\"}}],\"serversOnNetwork\":[\"60.8.2.2\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"baseDifficulty\":1,\"hackDifficulty\":1,\"manuallyHacked\":false,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"purchasedByPlayer\":true,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"7.0.5.5\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-32768GB-4\",\"httpPortOpen\":false,\"ip\":\"7.0.5.5\",\"isConnectedTo\":false,\"maxRam\":32768,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":32767.25,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,0,8427]},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":686553.6498939703,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.522,\"onlineExpGained\":274665.2843296212,\"onlineMoneyMade\":0,\"onlineRunningTime\":2471.8099999999663,\"ramUsage\":1.75,\"server\":\"7.0.5.5\",\"threads\":2809}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,31604,0]},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2574800.303080936,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.524,\"onlineExpGained\":1030084.4483153374,\"onlineMoneyMade\":0,\"onlineRunningTime\":2471.8099999999663,\"ramUsage\":1.75,\"server\":\"7.0.5.5\",\"threads\":15802}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\",503419924.0000001],\"dataMap\":{\"46.1.5.7\":[8334150,220,0,0]},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":33606.66813614414,\"offlineMoneyMade\":20832051.46830729,\"offlineRunningTime\":71988.525,\"onlineExpGained\":13444.811888687398,\"onlineMoneyMade\":8334150,\"onlineRunningTime\":2471.8099999999663,\"ramUsage\":1.8,\"server\":\"7.0.5.5\",\"threads\":110}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"7.0.5.5\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"7.0.5.5\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"7.0.5.5\"}}],\"serversOnNetwork\":[\"60.8.2.2\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"baseDifficulty\":1,\"hackDifficulty\":1,\"manuallyHacked\":false,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"purchasedByPlayer\":true,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"36.7.0.6\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-32768GB-5\",\"httpPortOpen\":false,\"ip\":\"36.7.0.6\",\"isConnectedTo\":false,\"maxRam\":32768,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":32767.25,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,0,8427]},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":686553.6880419265,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.526,\"onlineExpGained\":274665.2843296212,\"onlineMoneyMade\":0,\"onlineRunningTime\":2468.809999999969,\"ramUsage\":1.75,\"server\":\"36.7.0.6\",\"threads\":2809}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,31604,0]},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2574800.3746145777,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.526,\"onlineExpGained\":1030084.4483153374,\"onlineMoneyMade\":0,\"onlineRunningTime\":2468.809999999969,\"ramUsage\":1.75,\"server\":\"36.7.0.6\",\"threads\":15802}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\",503419924.0000001],\"dataMap\":{\"46.1.5.7\":[20529960,440,0,0]},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":47049.336044169046,\"offlineMoneyMade\":51316713.678449996,\"offlineRunningTime\":71988.526,\"onlineExpGained\":18822.736644162364,\"onlineMoneyMade\":20529960,\"onlineRunningTime\":2468.809999999969,\"ramUsage\":1.8,\"server\":\"36.7.0.6\",\"threads\":110}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"36.7.0.6\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"36.7.0.6\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"36.7.0.6\"}}],\"serversOnNetwork\":[\"60.8.2.2\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"baseDifficulty\":1,\"hackDifficulty\":1,\"manuallyHacked\":false,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"purchasedByPlayer\":true,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"94.6.3.4\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-32768GB-6\",\"httpPortOpen\":false,\"ip\":\"94.6.3.4\",\"isConnectedTo\":false,\"maxRam\":32768,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":32767.25,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,0,8427]},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":686553.7071159047,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.528,\"onlineExpGained\":274665.2843296212,\"onlineMoneyMade\":0,\"onlineRunningTime\":2465.609999999972,\"ramUsage\":1.75,\"server\":\"94.6.3.4\",\"threads\":2809}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,31604,0]},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2574800.4819150413,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.52900000001,\"onlineExpGained\":1030084.4483153374,\"onlineMoneyMade\":0,\"onlineRunningTime\":2465.609999999972,\"ramUsage\":1.75,\"server\":\"94.6.3.4\",\"threads\":15802}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\",503419924.0000001],\"dataMap\":{\"46.1.5.7\":[21111640,440,0,0]},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":47049.33800487078,\"offlineMoneyMade\":52770683.93267916,\"offlineRunningTime\":71988.52900000001,\"onlineExpGained\":18822.736644162364,\"onlineMoneyMade\":21111640,\"onlineRunningTime\":2465.609999999972,\"ramUsage\":1.8,\"server\":\"94.6.3.4\",\"threads\":110}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"94.6.3.4\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"94.6.3.4\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"94.6.3.4\"}}],\"serversOnNetwork\":[\"60.8.2.2\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"baseDifficulty\":1,\"hackDifficulty\":1,\"manuallyHacked\":false,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"purchasedByPlayer\":true,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"64.2.6.7\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-32768GB-7\",\"httpPortOpen\":false,\"ip\":\"64.2.6.7\",\"isConnectedTo\":false,\"maxRam\":32768,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":32767.25,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,0,8427]},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":686553.7261898825,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.53,\"onlineExpGained\":274665.2843296212,\"onlineMoneyMade\":0,\"onlineRunningTime\":2462.6099999999747,\"ramUsage\":1.75,\"server\":\"64.2.6.7\",\"threads\":2809}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,31604,0]},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2574800.5534486836,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.531,\"onlineExpGained\":1030084.4483153374,\"onlineMoneyMade\":0,\"onlineRunningTime\":2462.6099999999747,\"ramUsage\":1.75,\"server\":\"64.2.6.7\",\"threads\":15802}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\",503419924.0000001],\"dataMap\":{\"46.1.5.7\":[31134290,660,0,0]},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":60492.00852716467,\"offlineMoneyMade\":77823316.6881729,\"offlineRunningTime\":71988.532,\"onlineExpGained\":24200.661399637327,\"onlineMoneyMade\":31134290,\"onlineRunningTime\":2462.6099999999747,\"ramUsage\":1.8,\"server\":\"64.2.6.7\",\"threads\":110}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"64.2.6.7\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"64.2.6.7\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"64.2.6.7\"}}],\"serversOnNetwork\":[\"60.8.2.2\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"baseDifficulty\":1,\"hackDifficulty\":1,\"manuallyHacked\":false,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"purchasedByPlayer\":true,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"55.1.3.2\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-32768GB-8\",\"httpPortOpen\":false,\"ip\":\"55.1.3.2\",\"isConnectedTo\":false,\"maxRam\":32768,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":32767.25,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,0,8427]},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":686553.7452638606,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.532,\"onlineExpGained\":274665.2843296212,\"onlineMoneyMade\":0,\"onlineRunningTime\":2459.6099999999774,\"ramUsage\":1.75,\"server\":\"55.1.3.2\",\"threads\":2809}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,31604,0]},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2574800.5892155045,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.532,\"onlineExpGained\":1030084.4483153374,\"onlineMoneyMade\":0,\"onlineRunningTime\":2459.6099999999774,\"ramUsage\":1.75,\"server\":\"55.1.3.2\",\"threads\":15802}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\",503419924.0000001],\"dataMap\":{\"46.1.5.7\":[18478680,440,0,0]},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":47049.34061913975,\"offlineMoneyMade\":46189336.11769583,\"offlineRunningTime\":71988.533,\"onlineExpGained\":18822.73664416236,\"onlineMoneyMade\":18478680,\"onlineRunningTime\":2459.6099999999774,\"ramUsage\":1.8,\"server\":\"55.1.3.2\",\"threads\":110}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"55.1.3.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"55.1.3.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"55.1.3.2\"}}],\"serversOnNetwork\":[\"60.8.2.2\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"baseDifficulty\":1,\"hackDifficulty\":1,\"manuallyHacked\":false,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"purchasedByPlayer\":true,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"16.0.1.6\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-32768GB-9\",\"httpPortOpen\":false,\"ip\":\"16.0.1.6\",\"isConnectedTo\":false,\"maxRam\":32768,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":32767.25,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,0,8427]},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":686553.7738748279,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.535,\"onlineExpGained\":274665.2843296212,\"onlineMoneyMade\":0,\"onlineRunningTime\":2456.4099999999803,\"ramUsage\":1.75,\"server\":\"16.0.1.6\",\"threads\":2809}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,31604,0]},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2574800.696515968,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.535,\"onlineExpGained\":1030084.4483153374,\"onlineMoneyMade\":0,\"onlineRunningTime\":2456.4099999999803,\"ramUsage\":1.75,\"server\":\"16.0.1.6\",\"threads\":15802}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\",503419924.0000001],\"dataMap\":{\"46.1.5.7\":[10102730,220,0,0]},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":33606.673271315354,\"offlineMoneyMade\":25252800.044304863,\"offlineRunningTime\":71988.53600000001,\"onlineExpGained\":13444.811888687402,\"onlineMoneyMade\":10102730,\"onlineRunningTime\":2456.4099999999803,\"ramUsage\":1.8,\"server\":\"16.0.1.6\",\"threads\":110}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"16.0.1.6\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"16.0.1.6\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"16.0.1.6\"}}],\"serversOnNetwork\":[\"60.8.2.2\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"baseDifficulty\":1,\"hackDifficulty\":1,\"manuallyHacked\":false,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"purchasedByPlayer\":true,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"26.5.9.3\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-32768GB-10\",\"httpPortOpen\":false,\"ip\":\"26.5.9.3\",\"isConnectedTo\":false,\"maxRam\":32768,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":32767.25,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,0,8427]},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":686553.7834118169,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.53600000001,\"onlineExpGained\":274665.2843296212,\"onlineMoneyMade\":0,\"onlineRunningTime\":2453.409999999983,\"ramUsage\":1.75,\"server\":\"26.5.9.3\",\"threads\":2809}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,31604,0]},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2574800.7322827894,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.53600000001,\"onlineExpGained\":1030084.4483153374,\"onlineMoneyMade\":0,\"onlineRunningTime\":2453.409999999983,\"ramUsage\":1.75,\"server\":\"26.5.9.3\",\"threads\":15802}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\",503419924.0000001],\"dataMap\":{\"46.1.5.7\":[27181440,660,0,0]},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":60492.01272866838,\"offlineMoneyMade\":67942771.78260002,\"offlineRunningTime\":71988.53700000001,\"onlineExpGained\":24200.661399637323,\"onlineMoneyMade\":27181440,\"onlineRunningTime\":2453.409999999983,\"ramUsage\":1.8,\"server\":\"26.5.9.3\",\"threads\":110}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"26.5.9.3\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"26.5.9.3\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"26.5.9.3\"}}],\"serversOnNetwork\":[\"60.8.2.2\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"baseDifficulty\":1,\"hackDifficulty\":1,\"manuallyHacked\":false,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"purchasedByPlayer\":true,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"42.8.8.6\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-32768GB-11\",\"httpPortOpen\":false,\"ip\":\"42.8.8.6\",\"isConnectedTo\":false,\"maxRam\":32768,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":32767.25,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,0,8427]},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":686553.802485795,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.538,\"onlineExpGained\":274665.2843296212,\"onlineMoneyMade\":0,\"onlineRunningTime\":2450.209999999986,\"ramUsage\":1.75,\"server\":\"42.8.8.6\",\"threads\":2809}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,31604,0]},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2574800.8753500734,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.54000000001,\"onlineExpGained\":1030084.4483153374,\"onlineMoneyMade\":0,\"onlineRunningTime\":2450.209999999986,\"ramUsage\":1.75,\"server\":\"42.8.8.6\",\"threads\":15802}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\",503419924.0000001],\"dataMap\":{\"46.1.5.7\":[14531770,330,0,0]},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":40328.01016638041,\"offlineMoneyMade\":36323637.52076736,\"offlineRunningTime\":71988.54000000001,\"onlineExpGained\":16133.774266424884,\"onlineMoneyMade\":14531770,\"onlineRunningTime\":2450.209999999986,\"ramUsage\":1.8,\"server\":\"42.8.8.6\",\"threads\":110}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"42.8.8.6\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"42.8.8.6\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"42.8.8.6\"}}],\"serversOnNetwork\":[\"60.8.2.2\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"baseDifficulty\":1,\"hackDifficulty\":1,\"manuallyHacked\":false,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"purchasedByPlayer\":true,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"60.8.7.2\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-32768GB-12\",\"httpPortOpen\":false,\"ip\":\"60.8.7.2\",\"isConnectedTo\":false,\"maxRam\":32768,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":32767.95,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,0,5618]},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":457702.55406450806,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.541,\"onlineExpGained\":183110.1895530808,\"onlineMoneyMade\":0,\"onlineRunningTime\":2081.010000000293,\"ramUsage\":1.75,\"server\":\"60.8.7.2\",\"threads\":2809}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{\"46.1.5.7\":[0,0,31576,0]},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2572519.766447292,\"offlineMoneyMade\":0,\"offlineRunningTime\":71988.542,\"onlineExpGained\":1029171.830781075,\"onlineMoneyMade\":0,\"onlineRunningTime\":2081.010000000293,\"ramUsage\":1.75,\"server\":\"60.8.7.2\",\"threads\":15788}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\",503419924.0000001],\"dataMap\":{\"46.1.5.7\":[27411316,496,0,0]},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":53037.445146857965,\"offlineMoneyMade\":68517374.96625388,\"offlineRunningTime\":71988.542,\"onlineExpGained\":21218.35767160121,\"onlineMoneyMade\":27411316,\"onlineRunningTime\":2081.010000000293,\"ramUsage\":1.8,\"server\":\"60.8.7.2\",\"threads\":124}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"60.8.7.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"60.8.7.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"60.8.7.2\"}}],\"serversOnNetwork\":[\"60.8.2.2\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"baseDifficulty\":1,\"hackDifficulty\":1,\"manuallyHacked\":false,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"purchasedByPlayer\":true,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"68.4.0.6\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-32768GB-13\",\"httpPortOpen\":false,\"ip\":\"68.4.0.6\",\"isConnectedTo\":false,\"maxRam\":32768,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":32767.15,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":38629.04,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":103.41000000000071,\"ramUsage\":1.75,\"server\":\"68.4.0.6\",\"threads\":2809}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":38629.041000000005,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":103.41000000000071,\"ramUsage\":1.75,\"server\":\"68.4.0.6\",\"threads\":15840}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\",503419924.0000001],\"dataMap\":{},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":38629.041000000005,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":103.41000000000071,\"ramUsage\":1.8,\"server\":\"68.4.0.6\",\"threads\":73}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"68.4.0.6\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"68.4.0.6\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"68.4.0.6\"}}],\"serversOnNetwork\":[\"60.8.2.2\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"baseDifficulty\":1,\"hackDifficulty\":1,\"manuallyHacked\":false,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"purchasedByPlayer\":true,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"36.5.9.2\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-32768GB-14\",\"httpPortOpen\":false,\"ip\":\"36.5.9.2\",\"isConnectedTo\":false,\"maxRam\":32768,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":32767.7,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":51.8100000000002,\"ramUsage\":1.75,\"server\":\"36.5.9.2\",\"threads\":2809}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":51.8100000000002,\"ramUsage\":1.75,\"server\":\"36.5.9.2\",\"threads\":14497}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",659563499.0000001],\"dataMap\":{},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":51.8100000000002,\"ramUsage\":1.8,\"server\":\"36.5.9.2\",\"threads\":1379}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"36.5.9.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"36.5.9.2\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"36.5.9.2\"}}],\"serversOnNetwork\":[\"60.8.2.2\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"baseDifficulty\":1,\"hackDifficulty\":1,\"manuallyHacked\":false,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"purchasedByPlayer\":true,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"40.5.3.9\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-32768GB-15\",\"httpPortOpen\":false,\"ip\":\"40.5.3.9\",\"isConnectedTo\":false,\"maxRam\":32768,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":32767.7,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":49.01000000000016,\"ramUsage\":1.75,\"server\":\"40.5.3.9\",\"threads\":2809}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":49.01000000000016,\"ramUsage\":1.75,\"server\":\"40.5.3.9\",\"threads\":14497}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",659563499.0000001],\"dataMap\":{},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":49.01000000000016,\"ramUsage\":1.8,\"server\":\"40.5.3.9\",\"threads\":1379}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"40.5.3.9\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"40.5.3.9\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"40.5.3.9\"}}],\"serversOnNetwork\":[\"60.8.2.2\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"baseDifficulty\":1,\"hackDifficulty\":1,\"manuallyHacked\":false,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"purchasedByPlayer\":true,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"61.9.2.5\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"pserv-32768GB-16\",\"httpPortOpen\":false,\"ip\":\"61.9.2.5\",\"isConnectedTo\":false,\"maxRam\":32768,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":32767.7,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":42.01000000000006,\"ramUsage\":1.75,\"server\":\"61.9.2.5\",\"threads\":2809}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":42.01000000000006,\"ramUsage\":1.75,\"server\":\"61.9.2.5\",\"threads\":14497}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",659563499.0000001],\"dataMap\":{},\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":42.01000000000006,\"ramUsage\":1.8,\"server\":\"61.9.2.5\",\"threads\":1379}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\nvar targetMaxMoney = args[1];\\n\\nwhile(true) {\\n    targetCurrentMoney = getServerMoneyAvailable(target);\\n    targetMoneyPercent = targetCurrentMoney/targetMaxMoney;\\n    if(targetMoneyPercent > 0.50)\\n    {\\n        hack(target);\\n    }\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/hack_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.8,\"server\":\"61.9.2.5\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    grow(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/grow_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"61.9.2.5\"}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var target = args[0];\\n\\nwhile(true) {\\n    weaken(target);\\n    sleep(100);\\n}\",\"filename\":\"/master/hacking/helpers/weaken_target_loop-ns1.script\",\"module\":\"\",\"ramUsage\":1.75,\"server\":\"61.9.2.5\"}}],\"serversOnNetwork\":[\"60.8.2.2\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"baseDifficulty\":1,\"hackDifficulty\":1,\"manuallyHacked\":false,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"purchasedByPlayer\":true,\"requiredHackingSkill\":1,\"serverGrowth\":1}}}","CompaniesSave":"{\"ECorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"ECorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":3,\"salaryMultiplier\":3,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"MegaCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"MegaCorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":3,\"salaryMultiplier\":3,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"Bachman & Associates\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Bachman & Associates\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.6,\"salaryMultiplier\":2.6,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"Blade Industries\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Blade Industries\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.75,\"salaryMultiplier\":2.75,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"NWO\":{\"ctor\":\"Company\",\"data\":{\"name\":\"NWO\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.75,\"salaryMultiplier\":2.75,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"Clarke Incorporated\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Clarke Incorporated\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.25,\"salaryMultiplier\":2.25,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"OmniTek Incorporated\":{\"ctor\":\"Company\",\"data\":{\"name\":\"OmniTek Incorporated\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.25,\"salaryMultiplier\":2.25,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"Four Sigma\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Four Sigma\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.5,\"salaryMultiplier\":2.5,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"KuaiGong International\":{\"ctor\":\"Company\",\"data\":{\"name\":\"KuaiGong International\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.2,\"salaryMultiplier\":2.2,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"Fulcrum Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Fulcrum Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"Storm Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Storm Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"DefComm\":{\"ctor\":\"Company\",\"data\":{\"name\":\"DefComm\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.75,\"salaryMultiplier\":1.75,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"Helios Labs\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Helios Labs\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"VitaLife\":{\"ctor\":\"Company\",\"data\":{\"name\":\"VitaLife\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"Icarus Microsystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Icarus Microsystems\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.9,\"salaryMultiplier\":1.9,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"Universal Energy\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Universal Energy\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"Galactic Cybersystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Galactic Cybersystems\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.9,\"salaryMultiplier\":1.9,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"AeroCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"AeroCorp\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"Omnia Cybersystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Omnia Cybersystems\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"Solaris Space Systems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Solaris Space Systems\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"DeltaOne\":{\"ctor\":\"Company\",\"data\":{\"name\":\"DeltaOne\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.6,\"salaryMultiplier\":1.6,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"Global Pharmaceuticals\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Global Pharmaceuticals\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"Nova Medical\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Nova Medical\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.75,\"salaryMultiplier\":1.75,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"Central Intelligence Agency\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Central Intelligence Agency\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":149,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"National Security Agency\":{\"ctor\":\"Company\",\"data\":{\"name\":\"National Security Agency\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":149,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"Watchdog Security\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Watchdog Security\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.5,\"salaryMultiplier\":1.5,\"jobStatReqOffset\":124,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"LexoCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"LexoCorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.4,\"salaryMultiplier\":1.4,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"Rho Construction\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Rho Construction\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":49,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"Alpha Enterprises\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Alpha Enterprises\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.5,\"salaryMultiplier\":1.5,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"Aevum Police Headquarters\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Aevum Police Headquarters\",\"info\":\"\",\"companyPositions\":{\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"SysCore Securities\":{\"ctor\":\"Company\",\"data\":{\"name\":\"SysCore Securities\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":124,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"CompuTek\":{\"ctor\":\"Company\",\"data\":{\"name\":\"CompuTek\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":74,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"NetLink Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"NetLink Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"Carmichael Security\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Carmichael Security\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":74,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"FoodNStuff\":{\"ctor\":\"Company\",\"data\":{\"name\":\"FoodNStuff\",\"info\":\"\",\"companyPositions\":{\"Employee\":true,\"Part-time Employee\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"Joe's Guns\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Joe's Guns\",\"info\":\"\",\"companyPositions\":{\"Employee\":true,\"Part-time Employee\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":3,\"rolloverRep\":0}},\"Omega Software\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Omega Software\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true},\"expMultiplier\":1.1,\"salaryMultiplier\":1.1,\"jobStatReqOffset\":49,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"Noodle Bar\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Noodle Bar\",\"info\":\"\",\"companyPositions\":{\"Waiter\":true,\"Part-time Waiter\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}}}","FactionsSave":"{\"Illuminati\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Synthetic Heart\",\"Synfibril Muscle\",\"NEMEAN Subdermal Weave\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"NeuroFlux Governor\",\"QLink\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Illuminati\",\"playerReputation\":0,\"rolloverRep\":0}},\"Daedalus\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Synthetic Heart\",\"Synfibril Muscle\",\"NEMEAN Subdermal Weave\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"NeuroFlux Governor\",\"The Red Pill\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Daedalus\",\"playerReputation\":0,\"rolloverRep\":0}},\"The Covenant\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting III\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Combat Rib III\",\"NEMEAN Subdermal Weave\",\"Graphene Bone Lacings\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"NeuroFlux Governor\",\"SPTN-97 Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Covenant\",\"playerReputation\":0,\"rolloverRep\":0}},\"ECorp\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Graphene Bionic Spine Upgrade\",\"Graphene Bionic Legs Upgrade\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"PC Direct-Neural Interface\",\"PC Direct-Neural Interface Optimization Submodule\",\"NeuroFlux Governor\",\"ECorp HVMind Implant\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"ECorp\",\"playerReputation\":0,\"rolloverRep\":0}},\"MegaCorp\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Graphene Bionic Legs Upgrade\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"ADR-V1 Pheromone Gene\",\"NeuroFlux Governor\",\"CordiARC Fusion Reactor\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"MegaCorp\",\"playerReputation\":0,\"rolloverRep\":0}},\"Bachman & Associates\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"ADR-V2 Pheromone Gene\",\"NeuroFlux Governor\",\"SmartJaw\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Bachman & Associates\",\"playerReputation\":0,\"rolloverRep\":0}},\"Blade Industries\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Synfibril Muscle\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Bionic Spine\",\"Bionic Legs\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"PC Direct-Neural Interface\",\"PC Direct-Neural Interface Optimization Submodule\",\"NeuroFlux Governor\",\"HyperSight Corneal Implant\",\"Neotra\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Blade Industries\",\"playerReputation\":0,\"rolloverRep\":0}},\"NWO\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Synthetic Heart\",\"Synfibril Muscle\",\"Enhanced Social Interaction Implant\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"ADR-V1 Pheromone Gene\",\"NeuroFlux Governor\",\"Neurotrainer III\",\"Power Recirculation Core\",\"Xanipher\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"NWO\",\"playerReputation\":0,\"rolloverRep\":0}},\"Clarke Incorporated\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Neuronal Densification\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"ADR-V2 Pheromone Gene\",\"NeuroFlux Governor\",\"nextSENS Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Clarke Incorporated\",\"playerReputation\":0,\"rolloverRep\":0}},\"OmniTek Incorporated\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Bionic Spine\",\"Bionic Legs\",\"Enhanced Social Interaction Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"PC Direct-Neural Interface\",\"NeuroFlux Governor\",\"OmniTek InfoLoad\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"OmniTek Incorporated\",\"playerReputation\":0,\"rolloverRep\":0}},\"Four Sigma\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"PC Direct-Neural Interface\",\"ADR-V1 Pheromone Gene\",\"ADR-V2 Pheromone Gene\",\"NeuroFlux Governor\",\"Neurotrainer III\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Four Sigma\",\"playerReputation\":0,\"rolloverRep\":0}},\"KuaiGong International\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Bionic Spine\",\"Bionic Legs\",\"Embedded Netburner Module Core V2 Upgrade\",\"Speech Enhancement\",\"FocusWire\",\"NeuroFlux Governor\",\"HyperSight Corneal Implant\",\"Photosynthetic Cells\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"KuaiGong International\",\"playerReputation\":0,\"rolloverRep\":0}},\"Fulcrum Secret Technologies\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Synthetic Heart\",\"Synfibril Muscle\",\"Nanofiber Weave\",\"NEMEAN Subdermal Weave\",\"Graphene Bone Lacings\",\"Graphene Bionic Spine Upgrade\",\"Graphene Bionic Legs Upgrade\",\"Artificial Bio-neural Network Implant\",\"Enhanced Myelin Sheathing\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"PC Direct-Neural Interface Optimization Submodule\",\"PC Direct-Neural Interface NeuroNet Injector\",\"NeuroFlux Governor\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Fulcrum Secret Technologies\",\"playerReputation\":0,\"rolloverRep\":0}},\"BitRunners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Artificial Bio-neural Network Implant\",\"Enhanced Myelin Sheathing\",\"DataJack\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Neural Accelerator\",\"Cranial Signal Processors - Gen III\",\"Cranial Signal Processors - Gen IV\",\"Cranial Signal Processors - Gen V\",\"NeuroFlux Governor\",\"Neurotrainer II\",\"BitRunners Neurolink\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"BitRunners\",\"playerReputation\":0,\"rolloverRep\":0}},\"The Black Hand\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Artificial Synaptic Potentiation\",\"Enhanced Myelin Sheathing\",\"DataJack\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Neuralstimulator\",\"Cranial Signal Processors - Gen III\",\"Cranial Signal Processors - Gen IV\",\"NeuroFlux Governor\",\"The Black Hand\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Black Hand\",\"playerReputation\":0,\"rolloverRep\":0}},\"NiteSec\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"BitWire\",\"Artificial Synaptic Potentiation\",\"Neural-Retention Enhancement\",\"DataJack\",\"Embedded Netburner Module\",\"Cranial Signal Processors - Gen II\",\"Cranial Signal Processors - Gen III\",\"NeuroFlux Governor\",\"Neurotrainer II\",\"CRTX42-AA Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":true,\"name\":\"NiteSec\",\"playerReputation\":248301.74368481326,\"rolloverRep\":0}},\"Aevum\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"NeuroFlux Governor\"],\"favor\":0,\"isBanned\":true,\"isMember\":false,\"name\":\"Aevum\",\"playerReputation\":0,\"rolloverRep\":0}},\"Chongqing\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"Speech Processor Implant\",\"DataJack\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"NeuroFlux Governor\",\"Neuregen Gene Modification\"],\"favor\":6,\"isBanned\":false,\"isMember\":true,\"name\":\"Chongqing\",\"playerReputation\":1010.9249864309141,\"rolloverRep\":0}},\"Ishima\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Augmented Targeting II\",\"Combat Rib I\",\"Combat Rib II\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"NeuroFlux Governor\",\"INFRARET Enhancement\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Ishima\",\"playerReputation\":0,\"rolloverRep\":0}},\"New Tokyo\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Speech Processor Implant\",\"DataJack\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"NeuroFlux Governor\",\"NutriGen Implant\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"New Tokyo\",\"playerReputation\":0,\"rolloverRep\":0}},\"Sector-12\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"Augmented Targeting I\",\"Augmented Targeting II\",\"Combat Rib I\",\"Combat Rib II\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"NeuroFlux Governor\",\"CashRoot Starter Kit\"],\"favor\":130,\"isBanned\":true,\"isMember\":false,\"name\":\"Sector-12\",\"playerReputation\":0,\"rolloverRep\":0}},\"Volhaven\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Augmented Targeting II\",\"Combat Rib I\",\"Combat Rib II\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"NeuroFlux Governor\",\"DermaForce Particle Barrier\"],\"favor\":0,\"isBanned\":true,\"isMember\":false,\"name\":\"Volhaven\",\"playerReputation\":0,\"rolloverRep\":0}},\"Speakers for the Dead\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Synthetic Heart\",\"Synfibril Muscle\",\"Nanofiber Weave\",\"Wired Reflexes\",\"Bionic Spine\",\"Bionic Legs\",\"Speech Enhancement\",\"The Shadow's Simulacrum\",\"NeuroFlux Governor\",\"Graphene BranchiBlades Upgrade\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Speakers for the Dead\",\"playerReputation\":0,\"rolloverRep\":0}},\"The Dark Army\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"HemoRecirculator\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Wired Reflexes\",\"The Shadow's Simulacrum\",\"NeuroFlux Governor\",\"Power Recirculation Core\",\"Graphene Bionic Arms Upgrade\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Dark Army\",\"playerReputation\":0,\"rolloverRep\":0}},\"The Syndicate\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"HemoRecirculator\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"NEMEAN Subdermal Weave\",\"Wired Reflexes\",\"Bionic Spine\",\"Bionic Legs\",\"ADR-V1 Pheromone Gene\",\"The Shadow's Simulacrum\",\"NeuroFlux Governor\",\"Power Recirculation Core\",\"BrachiBlades\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Syndicate\",\"playerReputation\":0,\"rolloverRep\":0}},\"Silhouette\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Speech Processor Implant\",\"TITN-41 Gene-Modification Injection\",\"ADR-V2 Pheromone Gene\",\"NeuroFlux Governor\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Silhouette\",\"playerReputation\":0,\"rolloverRep\":0}},\"Tetrads\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"HemoRecirculator\",\"NeuroFlux Governor\",\"LuminCloaking-V1 Skin Implant\",\"LuminCloaking-V2 Skin Implant\",\"Power Recirculation Core\",\"Bionic Arms\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Tetrads\",\"playerReputation\":0,\"rolloverRep\":0}},\"Slum Snakes\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Combat Rib I\",\"Wired Reflexes\",\"NeuroFlux Governor\",\"LuminCloaking-V1 Skin Implant\",\"LuminCloaking-V2 Skin Implant\",\"SmartSonar Implant\"],\"favor\":2,\"isBanned\":false,\"isMember\":false,\"name\":\"Slum Snakes\",\"playerReputation\":0,\"rolloverRep\":0}},\"Netburners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"Hacknet Node CPU Architecture Neural-Upload\",\"Hacknet Node Cache Architecture Neural-Upload\",\"Hacknet Node NIC Architecture Neural-Upload\",\"Hacknet Node Kernel Direct-Neural Interface\",\"Hacknet Node Core Direct-Neural Interface\",\"NeuroFlux Governor\"],\"favor\":51,\"isBanned\":false,\"isMember\":true,\"name\":\"Netburners\",\"playerReputation\":52557.287384837226,\"rolloverRep\":0}},\"Tian Di Hui\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"Nanofiber Weave\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"ADR-V1 Pheromone Gene\",\"NeuroFlux Governor\",\"Social Negotiation Assistant (S.N.A)\"],\"favor\":24,\"isBanned\":false,\"isMember\":true,\"name\":\"Tian Di Hui\",\"playerReputation\":1010.9249864309141,\"rolloverRep\":0}},\"CyberSec\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"BitWire\",\"Synaptic Enhancement Implant\",\"Cranial Signal Processors - Gen I\",\"Cranial Signal Processors - Gen II\",\"NeuroFlux Governor\",\"Neurotrainer I\"],\"favor\":82,\"isBanned\":false,\"isMember\":false,\"name\":\"CyberSec\",\"playerReputation\":0,\"rolloverRep\":0}},\"Bladeburners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"EsperTech Bladeburner Eyewear\",\"EMS-4 Recombination\",\"ORION-MKIV Shoulder\",\"Hyperion Plasma Cannon V1\",\"Hyperion Plasma Cannon V2\",\"GOLEM Serum\",\"Vangelis Virus\",\"Vangelis Virus 3.0\",\"I.N.T.E.R.L.I.N.K.E.D\",\"Blade's Runners\",\"BLADE-51b Tesla Armor\",\"BLADE-51b Tesla Armor: Power Cells Upgrade\",\"BLADE-51b Tesla Armor: Energy Shielding Upgrade\",\"BLADE-51b Tesla Armor: Unibeam Upgrade\",\"BLADE-51b Tesla Armor: Omnibeam Upgrade\",\"BLADE-51b Tesla Armor: IPU Upgrade\",\"The Blade's Simulacrum\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Bladeburners\",\"playerReputation\":0,\"rolloverRep\":0}}}","SpecialServerIpsSave":"{\"ctor\":\"SpecialServerIpsMap\",\"data\":{\"Fulcrum Secret Technologies Server\":\"72.2.4.5\",\"BitRunners Server\":\"15.2.9.4\",\"The Black Hand Server\":\"50.4.2.0\",\"NiteSec Server\":\"48.2.9.1\",\"The Dark Army Server\":\"22.1.1.9\",\"CyberSec Server\":\"25.6.4.6\",\"Daedalus Server\":\"68.0.4.0\",\"w0r1d_d43m0n\":\"95.3.3.7\",\"Darkweb Server\":\"67.2.9.2\"}}","AliasesSave":"{\"dir\":\"ls\",\"nuke\":\"run NUKE.exe\",\"ssh\":\"run BruteSSH.exe\",\"sql\":\"run SQLInject.exe\",\"ftp\":\"run FTPCrack.exe\",\"http\":\"run HTTPWorm.exe\",\"smtp\":\"run relaySMTP.exe\",\"pull\":\"run pull/pull-ns2.js\",\"wallet\":\"nano master/character/wallet-ns2.js\"}","GlobalAliasesSave":"{}","MessagesSave":"{\"j0.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j0.msg\",\"msg\":\"I know you can sense it. I know you're searching for it. It's why you spend night after night at your computer. <br><br>It's real, I've seen it. And I can help you find it. But not right now. You're not ready yet.<br><br>Use this program to track your progress<br><br>The fl1ght.exe program was added to your home computer<br><br>-jump3R\",\"recvd\":true}},\"j1.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j1.msg\",\"msg\":\"Soon you will be contacted by a hacking group known as CyberSec. They can help you with your search. <br><br>You should join them, garner their favor, and exploit them for their Augmentations. But do not trust them. They are not what they seem. No one is.<br><br>-jump3R\",\"recvd\":true}},\"j2.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j2.msg\",\"msg\":\"Do not try to save the world. There is no world to save. If you want to find the truth, worry only about yourself. Ethics and morals will get you killed. <br><br>Watch out for a hacking group known as NiteSec.<br><br>-jump3R\",\"recvd\":true}},\"j3.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j3.msg\",\"msg\":\"You must learn to walk before you can run. And you must run before you can fly. Look for the black hand. <br><br>I.I.I.I <br><br>-jump3R\",\"recvd\":true}},\"j4.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j4.msg\",\"msg\":\"To find what you are searching for, you must understand the bits. The bits are all around us. The runners will help you.<br><br>-jump3R\",\"recvd\":true}},\"csec-test.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"csec-test.msg\",\"msg\":\"We've been watching you. Your skills are very impressive. But you're wasting your talents. If you join us, you can put your skills to good use and change the world for the better. If you join us, we can unlock your full potential. <br><br>But first, you must pass our test. Find and hack our server using the Terminal. <br><br>-CyberSec\",\"recvd\":true}},\"nitesec-test.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"nitesec-test.msg\",\"msg\":\"People say that the corrupted governments and corporations rule the world. Yes, maybe they do. But do you know who everyone really fears? People like us. Because they can't hide from us. Because they can't fight shadows and ideas with bullets. <br><br>Join us, and people will fear you, too. <br><br>Find and hack our hidden server using the Terminal. Then, we will contact you again.<br><br>-NiteSec\",\"recvd\":true}},\"19dfj3l1nd.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"19dfj3l1nd.msg\",\"msg\":\"We know what you are doing. We know what drives you. We know what you are looking for. <br><br> We can help you find the answers.<br><br>run4theh111z\",\"recvd\":true}},\"icarus.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"icarus.msg\",\"msg\":\"@)(#V%*N)@(#*)*C)@#%*)*V)@#(*%V@)(#VN%*)@#(*%<br>)@B(*#%)@)M#B*%V)____FIND___#$@)#%(B*)@#(*%B)<br>@_#(%_@#M(BDSPOMB__THE-CAVE_#)$(*@#$)@#BNBEGB<br>DFLSMFVMV)#@($*)@#*$MV)@#(*$V)M#(*$)M@(#*VM$)\",\"recvd\":false}}}","StockMarketSave":"{\"ECorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"ECorp\",\"symbol\":\"ECP\",\"price\":18593.508450202826,\"lastPrice\":18636.096510944317,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.47,\"b\":false,\"otlkMag\":18.35463060873659,\"cap\":117949207,\"spreadPerc\":0.1,\"priceMovementPerc\":0.04,\"shareTxForMovement\":41746,\"shareTxUntilMovementDown\":41746,\"shareTxUntilMovementUp\":41746,\"totalShares\":104600000,\"maxShares\":20900000,\"shareTxUntilMovement\":41746}},\"MegaCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"MegaCorp\",\"symbol\":\"MGCP\",\"price\":29140.686998785943,\"lastPrice\":29078.334929305667,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.44,\"b\":true,\"otlkMag\":19.186510662890097,\"cap\":634516522,\"spreadPerc\":0.5,\"priceMovementPerc\":0.35714285714285715,\"shareTxForMovement\":42176,\"shareTxUntilMovementDown\":42176,\"shareTxUntilMovementUp\":42176,\"totalShares\":94000000,\"maxShares\":18800000,\"shareTxUntilMovement\":42176}},\"Blade Industries\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Blade Industries\",\"symbol\":\"BLD\",\"price\":18938.703477039984,\"lastPrice\":19006.07894053872,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.73,\"b\":true,\"otlkMag\":12.76972490454272,\"cap\":345188547,\"spreadPerc\":0.3,\"priceMovementPerc\":0.09999999999999999,\"shareTxForMovement\":66721,\"shareTxUntilMovementDown\":66721,\"shareTxUntilMovementUp\":66721,\"totalShares\":82900000,\"maxShares\":16600000,\"shareTxUntilMovement\":66721}},\"Clarke Incorporated\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Clarke Incorporated\",\"symbol\":\"CLRK\",\"price\":22066.084979907708,\"lastPrice\":21994.27033411003,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.67,\"b\":false,\"otlkMag\":12.11529245592012,\"cap\":198888319,\"spreadPerc\":0.3,\"priceMovementPerc\":0.2727272727272727,\"shareTxForMovement\":34877,\"shareTxUntilMovementDown\":34877,\"shareTxUntilMovementUp\":34877,\"totalShares\":61700000,\"maxShares\":12300000,\"shareTxUntilMovement\":34877}},\"OmniTek Incorporated\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"OmniTek Incorporated\",\"symbol\":\"OMTK\",\"price\":43726.57304976809,\"lastPrice\":43873.60888543076,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.69,\"b\":true,\"otlkMag\":12.19544505469069,\"cap\":203902708,\"spreadPerc\":0.6,\"priceMovementPerc\":0.3333333333333333,\"shareTxForMovement\":71352,\"shareTxUntilMovementDown\":71352,\"shareTxUntilMovementUp\":71352,\"totalShares\":46700000,\"maxShares\":9300000,\"shareTxUntilMovement\":71352}},\"Four Sigma\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Four Sigma\",\"symbol\":\"FSIG\",\"price\":55139.088345079974,\"lastPrice\":54853.05723142103,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.07,\"b\":false,\"otlkMag\":16.262437723402417,\"cap\":226367266,\"spreadPerc\":0.9,\"priceMovementPerc\":0.6428571428571429,\"shareTxForMovement\":61971,\"shareTxUntilMovementDown\":61971,\"shareTxUntilMovementUp\":61971,\"totalShares\":25000000,\"maxShares\":5000000,\"shareTxUntilMovement\":61971}},\"KuaiGong International\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"KuaiGong International\",\"symbol\":\"KGI\",\"price\":20028.527325618616,\"lastPrice\":20106.61233479567,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.8,\"b\":false,\"otlkMag\":8.854498233798507,\"cap\":132114726,\"spreadPerc\":0.2,\"priceMovementPerc\":0.09090909090909091,\"shareTxForMovement\":55047,\"shareTxUntilMovementDown\":55047,\"shareTxUntilMovementUp\":55047,\"totalShares\":91200000,\"maxShares\":18200000,\"shareTxUntilMovement\":55047}},\"Fulcrum Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Fulcrum Technologies\",\"symbol\":\"FLCM\",\"price\":32457.47571484612,\"lastPrice\":32259.38900250664,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.26,\"b\":false,\"otlkMag\":13.68041132136877,\"cap\":625534769,\"spreadPerc\":0.5,\"priceMovementPerc\":0.22727272727272727,\"shareTxForMovement\":36419,\"shareTxUntilMovementDown\":36419,\"shareTxUntilMovementUp\":36419,\"totalShares\":60100000,\"maxShares\":12000000,\"shareTxUntilMovement\":36419}},\"Storm Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Storm Technologies\",\"symbol\":\"STM\",\"price\":25171.423358406155,\"lastPrice\":25071.23477465398,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.82,\"b\":false,\"otlkMag\":7.72755414562922,\"cap\":208366448,\"spreadPerc\":0.4,\"priceMovementPerc\":0.25,\"shareTxForMovement\":91570,\"shareTxUntilMovementDown\":91570,\"shareTxUntilMovementUp\":91570,\"totalShares\":55500000,\"maxShares\":11100000,\"shareTxUntilMovement\":91570}},\"DefComm\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"DefComm\",\"symbol\":\"DCOMM\",\"price\":16421.009602021397,\"lastPrice\":16369.157264516372,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.65,\"b\":true,\"otlkMag\":9.444687759582505,\"cap\":321153422,\"spreadPerc\":0.3,\"priceMovementPerc\":0.2142857142857143,\"shareTxForMovement\":54721,\"shareTxUntilMovementDown\":54721,\"shareTxUntilMovementUp\":54721,\"totalShares\":55600000,\"maxShares\":11100000,\"shareTxUntilMovement\":54721}},\"Helios Labs\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Helios Labs\",\"symbol\":\"HLS\",\"price\":14222.349036191436,\"lastPrice\":14181.572993275262,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.59,\"b\":true,\"otlkMag\":8.666106703758736,\"cap\":112095088,\"spreadPerc\":0.6,\"priceMovementPerc\":0.4285714285714286,\"shareTxForMovement\":87086,\"shareTxUntilMovementDown\":87086,\"shareTxUntilMovementUp\":87086,\"totalShares\":56500000,\"maxShares\":11300000,\"shareTxUntilMovement\":87086}},\"VitaLife\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"VitaLife\",\"symbol\":\"VITA\",\"price\":8594.0969570724,\"lastPrice\":8563.631374579169,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.73,\"b\":false,\"otlkMag\":6.936145035549751,\"cap\":141606735,\"spreadPerc\":0.3,\"priceMovementPerc\":0.23076923076923075,\"shareTxForMovement\":40446,\"shareTxUntilMovementDown\":40446,\"shareTxUntilMovementUp\":40446,\"totalShares\":102100000,\"maxShares\":20400000,\"shareTxUntilMovement\":40446}},\"Icarus Microsystems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Icarus Microsystems\",\"symbol\":\"ICRS\",\"price\":19775.53107981021,\"lastPrice\":19841.06493687478,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.68,\"b\":false,\"otlkMag\":7.267757591496718,\"cap\":278775912,\"spreadPerc\":0.4,\"priceMovementPerc\":0.18181818181818182,\"shareTxForMovement\":68726,\"shareTxUntilMovementDown\":68726,\"shareTxUntilMovementUp\":68726,\"totalShares\":37100000,\"maxShares\":7400000,\"shareTxUntilMovement\":68726}},\"Universal Energy\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Universal Energy\",\"symbol\":\"UNV\",\"price\":17683.596877981097,\"lastPrice\":17729.27151840069,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.53,\"b\":false,\"otlkMag\":9.649258291812993,\"cap\":270133799,\"spreadPerc\":0.7,\"priceMovementPerc\":0.2916666666666667,\"shareTxForMovement\":97674,\"shareTxUntilMovementDown\":97674,\"shareTxUntilMovementUp\":97674,\"totalShares\":48300000,\"maxShares\":9700000,\"shareTxUntilMovement\":97674}},\"AeroCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"AeroCorp\",\"symbol\":\"AERO\",\"price\":8637.33237340055,\"lastPrice\":8660.904367320727,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.56,\"b\":false,\"otlkMag\":6.00225543616382,\"cap\":109337874,\"spreadPerc\":0.7,\"priceMovementPerc\":0.27999999999999997,\"shareTxForMovement\":50649,\"shareTxUntilMovementDown\":50649,\"shareTxUntilMovementUp\":50649,\"totalShares\":71700000,\"maxShares\":14300000,\"shareTxUntilMovement\":50649}},\"Omnia Cybersystems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Omnia Cybersystems\",\"symbol\":\"OMN\",\"price\":12414.342150662793,\"lastPrice\":12375.141597548216,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.65,\"b\":true,\"otlkMag\":4.399471962158392,\"cap\":173435588,\"spreadPerc\":0.7,\"priceMovementPerc\":0.2333333333333333,\"shareTxForMovement\":88721,\"shareTxUntilMovementDown\":88721,\"shareTxUntilMovementUp\":88721,\"totalShares\":46800000,\"maxShares\":9400000,\"shareTxUntilMovement\":88721}},\"Solaris Space Systems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Solaris Space Systems\",\"symbol\":\"SLRS\",\"price\":29463.868899415436,\"lastPrice\":29362.272882752175,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.71,\"b\":true,\"otlkMag\":8.328474194832438,\"cap\":570213201,\"spreadPerc\":0.5,\"priceMovementPerc\":0.2631578947368421,\"shareTxForMovement\":56628,\"shareTxUntilMovementDown\":56628,\"shareTxUntilMovementUp\":56628,\"totalShares\":26400000,\"maxShares\":5300000,\"shareTxUntilMovement\":56628}},\"Global Pharmaceuticals\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Global Pharmaceuticals\",\"symbol\":\"GPH\",\"price\":25255.11384770938,\"lastPrice\":25322.806367638437,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.55,\"b\":false,\"otlkMag\":10.667100248344708,\"cap\":64851987,\"spreadPerc\":0.5,\"priceMovementPerc\":0.1724137931034483,\"shareTxForMovement\":85013,\"shareTxUntilMovementDown\":85013,\"shareTxUntilMovementUp\":85013,\"totalShares\":27900000,\"maxShares\":5600000,\"shareTxUntilMovement\":85013}},\"Nova Medical\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Nova Medical\",\"symbol\":\"NVMD\",\"price\":15879.519336466394,\"lastPrice\":15821.69071821403,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.75,\"b\":false,\"otlkMag\":5.302768317379124,\"cap\":153722411,\"spreadPerc\":0.7,\"priceMovementPerc\":0.25,\"shareTxForMovement\":78833,\"shareTxUntilMovementDown\":78833,\"shareTxUntilMovementUp\":78833,\"totalShares\":37200000,\"maxShares\":7400000,\"shareTxUntilMovement\":78833}},\"Watchdog Security\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Watchdog Security\",\"symbol\":\"WDS\",\"price\":10568.897428881019,\"lastPrice\":10444.699476347198,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.44,\"b\":true,\"otlkMag\":1.9643987471717856,\"cap\":111825565,\"spreadPerc\":0.7,\"priceMovementPerc\":0.25,\"shareTxForMovement\":20074,\"shareTxUntilMovementDown\":20074,\"shareTxUntilMovementUp\":20074,\"totalShares\":59300000,\"maxShares\":11900000,\"shareTxUntilMovement\":20074}},\"LexoCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"LexoCorp\",\"symbol\":\"LXO\",\"price\":7854.532940611443,\"lastPrice\":7900.8492980750525,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.21,\"b\":true,\"otlkMag\":5.848488180618214,\"cap\":13445108,\"spreadPerc\":0.8,\"priceMovementPerc\":0.38095238095238093,\"shareTxForMovement\":88153,\"shareTxUntilMovementDown\":88153,\"shareTxUntilMovementUp\":88153,\"totalShares\":38800000,\"maxShares\":7800000,\"shareTxUntilMovement\":88153}},\"Rho Construction\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Rho Construction\",\"symbol\":\"RHOC\",\"price\":6106.683747080174,\"lastPrice\":6121.8613877540665,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.51,\"b\":false,\"otlkMag\":1.2452244426002566,\"cap\":36694281,\"spreadPerc\":0.6,\"priceMovementPerc\":0.2727272727272727,\"shareTxForMovement\":105836,\"shareTxUntilMovementDown\":105836,\"shareTxUntilMovementUp\":105836,\"totalShares\":28400000,\"maxShares\":5700000,\"shareTxUntilMovement\":105836}},\"Alpha Enterprises\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Alpha Enterprises\",\"symbol\":\"APHE\",\"price\":5345.676627664553,\"lastPrice\":5293.565755369015,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.02,\"b\":false,\"otlkMag\":7.924977755822846,\"cap\":11972320,\"spreadPerc\":0.6,\"priceMovementPerc\":0.2857142857142857,\"shareTxForMovement\":31526,\"shareTxUntilMovementDown\":31526,\"shareTxUntilMovementUp\":31526,\"totalShares\":50800000,\"maxShares\":10200000,\"shareTxUntilMovement\":31526}},\"SysCore Securities\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"SysCore Securities\",\"symbol\":\"SYSC\",\"price\":5106.755325870375,\"lastPrice\":5146.076891268326,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.58,\"b\":false,\"otlkMag\":3.1256160017637593,\"cap\":5846561,\"spreadPerc\":0.5,\"priceMovementPerc\":0.3333333333333333,\"shareTxForMovement\":47001,\"shareTxUntilMovementDown\":47001,\"shareTxUntilMovementUp\":47001,\"totalShares\":37400000,\"maxShares\":7500000,\"shareTxUntilMovement\":47001}},\"CompuTek\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"CompuTek\",\"symbol\":\"CTK\",\"price\":3329.6559142228557,\"lastPrice\":3315.437466860325,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.88,\"b\":true,\"otlkMag\":3.8833174016479,\"cap\":15296676,\"spreadPerc\":0.4,\"priceMovementPerc\":0.15384615384615385,\"shareTxForMovement\":78340,\"shareTxUntilMovementDown\":78340,\"shareTxUntilMovementUp\":78340,\"totalShares\":58200000,\"maxShares\":11600000,\"shareTxUntilMovement\":78340}},\"NetLink Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"NetLink Technologies\",\"symbol\":\"NTLK\",\"price\":1747.6448681589875,\"lastPrice\":1784.267563402889,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":4.3,\"b\":false,\"otlkMag\":0.7963466640506733,\"cap\":71180440,\"spreadPerc\":1.2,\"priceMovementPerc\":0.7999999999999999,\"shareTxForMovement\":35943,\"shareTxUntilMovementDown\":35943,\"shareTxUntilMovementUp\":35943,\"totalShares\":19400000,\"maxShares\":3900000,\"shareTxUntilMovement\":35943}},\"Omega Software\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Omega Software\",\"symbol\":\"OMGA\",\"price\":5572.497179748341,\"lastPrice\":5598.296135284878,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.95,\"b\":false,\"otlkMag\":0.6521590898935897,\"cap\":54904017,\"spreadPerc\":0.9,\"priceMovementPerc\":0.6923076923076923,\"shareTxForMovement\":59074,\"shareTxUntilMovementDown\":59074,\"shareTxUntilMovementUp\":59074,\"totalShares\":12000000,\"maxShares\":2400000,\"shareTxUntilMovement\":59074}},\"FoodNStuff\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"FoodNStuff\",\"symbol\":\"FNS\",\"price\":1533.5891929201996,\"lastPrice\":1539.045019546078,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.73,\"b\":true,\"otlkMag\":1.275328511394711,\"cap\":37871277,\"spreadPerc\":0.9,\"priceMovementPerc\":0.391304347826087,\"shareTxForMovement\":108737,\"shareTxUntilMovementDown\":108737,\"shareTxUntilMovementUp\":108737,\"totalShares\":28900000,\"maxShares\":5800000,\"shareTxUntilMovement\":108737}},\"Sigma Cosmetics\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Sigma Cosmetics\",\"symbol\":\"SGC\",\"price\":3756.3125499390576,\"lastPrice\":3707.885306677529,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.68,\"b\":true,\"otlkMag\":1.3071317139079652,\"cap\":5692284,\"spreadPerc\":0.8,\"priceMovementPerc\":0.5714285714285715,\"shareTxForMovement\":40594,\"shareTxUntilMovementDown\":40594,\"shareTxUntilMovementUp\":40594,\"totalShares\":9300000,\"maxShares\":1900000,\"shareTxUntilMovement\":40594}},\"Joes Guns\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Joes Guns\",\"symbol\":\"JGN\",\"price\":790.5007462815229,\"lastPrice\":775.4970142763257,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":3.97,\"b\":false,\"otlkMag\":1.0462119364908014,\"cap\":1613486,\"spreadPerc\":1,\"priceMovementPerc\":0.7692307692307692,\"shareTxForMovement\":39036,\"shareTxUntilMovementDown\":39036,\"shareTxUntilMovementUp\":39036,\"totalShares\":60700000,\"maxShares\":12100000,\"shareTxUntilMovement\":39036}},\"Catalyst Ventures\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Catalyst Ventures\",\"symbol\":\"CTYS\",\"price\":1034.6944885231028,\"lastPrice\":1041.854754277538,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.42,\"b\":false,\"otlkMag\":13.739742507032446,\"cap\":16799537,\"spreadPerc\":1.2,\"priceMovementPerc\":0.5,\"shareTxForMovement\":41920,\"shareTxUntilMovementDown\":41920,\"shareTxUntilMovementUp\":41920,\"totalShares\":123300000,\"maxShares\":24700000,\"shareTxUntilMovement\":41920}},\"Microdyne Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Microdyne Technologies\",\"symbol\":\"MDYN\",\"price\":23715.242279911632,\"lastPrice\":23806.54491639333,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.79,\"b\":false,\"otlkMag\":7.728099890493929,\"cap\":140844930,\"spreadPerc\":1,\"priceMovementPerc\":0.47619047619047616,\"shareTxForMovement\":188725,\"shareTxUntilMovementDown\":188725,\"shareTxUntilMovementUp\":188725,\"totalShares\":14100000,\"maxShares\":2800000,\"shareTxUntilMovement\":188725}},\"Titan Laboratories\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Titan Laboratories\",\"symbol\":\"TITN\",\"price\":13844.386032412762,\"lastPrice\":13884.867254252606,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.6,\"b\":true,\"otlkMag\":10.7819695566899,\"cap\":226944639,\"spreadPerc\":0.2,\"priceMovementPerc\":0.07407407407407407,\"shareTxForMovement\":166999,\"shareTxUntilMovementDown\":166999,\"shareTxUntilMovementUp\":166999,\"totalShares\":29700000,\"maxShares\":5900000,\"shareTxUntilMovement\":166999}},\"Orders\":{\"ECP\":[],\"MGCP\":[],\"BLD\":[],\"CLRK\":[],\"OMTK\":[],\"FSIG\":[],\"KGI\":[],\"FLCM\":[],\"STM\":[],\"DCOMM\":[],\"HLS\":[],\"VITA\":[],\"ICRS\":[],\"UNV\":[],\"AERO\":[],\"OMN\":[],\"SLRS\":[],\"GPH\":[],\"NVMD\":[],\"WDS\":[],\"LXO\":[],\"RHOC\":[],\"APHE\":[],\"SYSC\":[],\"CTK\":[],\"NTLK\":[],\"OMGA\":[],\"FNS\":[],\"SGC\":[],\"JGN\":[],\"CTYS\":[],\"MDYN\":[],\"TITN\":[]},\"storedCycles\":359778,\"lastUpdate\":1560478250254}","SettingsSave":"{\"AutosaveInterval\":60,\"CodeInstructionRunTime\":25,\"DisableHotkeys\":false,\"Editor\":\"CodeMirror\",\"EditorKeybinding\":\"default\",\"EditorTheme\":\"monokai\",\"Locale\":\"en\",\"MaxLogCapacity\":50,\"MaxPortCapacity\":50,\"OwnedAugmentationsOrder\":1,\"PurchaseAugmentationsOrder\":2,\"SuppressBuyAugmentationConfirmation\":true,\"SuppressFactionInvites\":true,\"SuppressHospitalizationPopup\":false,\"SuppressMessages\":true,\"SuppressTravelConfirmation\":true}","FconfSettingsSave":"{\"ENABLE_BASH_HOTKEYS\":false,\"ENABLE_TIMESTAMPS\":false,\"MAIN_MENU_STYLE\":\"default\",\"THEME_BACKGROUND_COLOR\":\"#000000\",\"THEME_FONT_COLOR\":\"#66ff33\",\"THEME_HIGHLIGHT_COLOR\":\"#ffffff\",\"THEME_PROMPT_COLOR\":\"#f92672\",\"WRAP_INPUT\":false}","VersionSave":"\"0.47.0\"","AllGangsSave":""}}